{"ast":null,"code":"var _jsxFileName = \"/home/alan/Escritorio/Integra/IntegraApp/src/components/Admin/AdminMedics/AdminMedicAdd.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Fab, Tooltip, InputLabel, MenuItem, Select } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport AddIcon from '@material-ui/icons/Add';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport supabase from '../../../supabase.config.js';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    margin: theme.spacing(2),\n    backgroundColor: '#2c7f7b',\n    fontSize: '35px',\n    border: '3px solid #2c7f7b',\n    '&:hover': {\n      backgroundColor: '#2c7f7b',\n      border: '3px solid #fafafa'\n    }\n  },\n  absolute: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(3)\n  },\n  paper: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    listStyle: 'none',\n    padding: theme.spacing(0.5),\n    margin: 0\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n    backgroundColor: '#3db7b1',\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: '15px'\n  },\n  popup: {\n    color: '#fafafa',\n    backgroundColor: '#2c7f7b',\n    fontWeight: 'bold',\n    fontSize: '30px'\n  },\n  popupBtn: {\n    color: '#fafafa',\n    padding: theme.spacing(0.5),\n    border: '3px solid #2c7f7b',\n    borderRadius: '5px',\n    backgroundColor: '#2c7f7b',\n    fontWeight: 'bold',\n    fontSize: '15px',\n    '&:hover': {\n      backgroundColor: '#fafafa',\n      color: '#2c7f7b',\n      padding: theme.spacing(0.5)\n    }\n  },\n  select: {\n    width: '177px',\n    textTransform: 'capitalize'\n  }\n}));\nconst resetInputs = {\n  name: '',\n  lastname: '',\n  dni: '',\n  license: '',\n  email: '',\n  phoneNumber: '',\n  state: 'active',\n  adressPostalCode: '',\n  birthdate: '',\n  specialities: []\n};\n\nfunction AdminMedicAdd({\n  medicSpecialities,\n  firebase\n}) {\n  _s();\n\n  const classes = useStyles();\n  const MySwal = withReactContent(Swal);\n  const [input, setInput] = useState(resetInputs);\n  const [open, setOpen] = useState(false);\n  const [chipSpecialities, setChipSpecialities] = useState([]);\n  const [localities, setLocalities] = useState([]);\n  const [address, setAddress] = useState({\n    street: '',\n    number: '',\n    floor: '',\n    department: '',\n    locality: '',\n    postalCode: '',\n    state: ''\n  });\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleCancel = () => {\n    setOpen(false);\n    setInput(resetInputs);\n  };\n\n  const handleChange = e => {\n    const value = e.target.value;\n    const name = e.target.name;\n    setInput({ ...input,\n      [name]: value\n    });\n  };\n\n  const handleChangeAddress = async e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setAddress({ ...address,\n      [name]: value\n    });\n  };\n\n  const handlePostalCode = async () => {\n    if (address.postalCode !== '' && String(address.postalCode).length >= 4) {\n      const {\n        data,\n        error: errorsito\n      } = await supabase.from('localities').select('name, postal_code, states (name)').eq('postal_code', address.postalCode);\n      if (errorsito || data.length === 0) return MySwal.fire({\n        title: 'No existe ese codigo postal.',\n        icon: 'error',\n        showCancelButton: false,\n        confirmButtonText: 'Aceptar',\n        confirmButtonColor: '#00897B'\n      });\n      setLocalities(data);\n      setAddress({ ...address,\n        state: data[0].states.name\n      });\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      await supabase.from('medics').insert([{\n        dni: input.dni,\n        name: input.name,\n        lastname: input.lastname,\n        medic_license: input.license,\n        email: input.email,\n        phone_number: input.phoneNumber,\n        state: input.state,\n        birthdate: input.birthdate\n      }]);\n      input.specialities.forEach(async el => {\n        await supabase.from('medics_medical_specialities').insert([{\n          medic_dni: input.dni,\n          speciality_id: el.id\n        }]);\n      });\n      MySwal.fire({\n        title: 'Se agregó al médico con éxito.',\n        icon: 'success',\n        timer: 2000\n      });\n    } catch (error) {\n      MySwal.fire({\n        title: 'No se pudo agregar al medico.',\n        text: error.message,\n        icon: 'error'\n      });\n    }\n\n    await supabase.from('users').insert([{\n      dni: parseInt(input.dni),\n      role: 'medic',\n      email: input.email,\n      account: 'active'\n    }]);\n    await firebase.auth().createUserWithEmailAndPassword(input.email, String(input.dni));\n    await firebase.auth().sendPasswordResetEmail(input.email);\n\n    try {\n      MySwal.fire({\n        title: 'Se creó un nuevo usuario médico!.',\n        text: 'Debe resetear su password. Le llegará el link por mail.',\n        icon: 'success',\n        timer: 2000\n      }).then(() => window.location.reload());\n    } catch (error) {\n      MySwal.fire({\n        title: 'No se pudo agregar al medico.',\n        text: error.message,\n        icon: 'error'\n      });\n    }\n\n    setOpen(false);\n  };\n\n  const handleChipAdd = toAdd => {\n    const value = toAdd.target.value;\n    const speciality = medicSpecialities.find(speciality => speciality.name === value);\n    setInput({ ...input,\n      specialities: input.specialities.concat(speciality)\n    });\n    setChipSpecialities(chipSpecialities.concat(value));\n  };\n\n  const handleChipDelete = toDelete => {\n    setChipSpecialities(chips => chips.filter(chip => chip !== toDelete));\n    setInput({ ...input,\n      specialities: input.specialities.filter(deleteSpec => deleteSpec.name !== toDelete)\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Agregar medico\",\n      onClick: handleClickOpen,\n      children: /*#__PURE__*/_jsxDEV(Fab, {\n        color: \"primary\",\n        className: classes.fab,\n        children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        className: classes.popup,\n        children: \"AGREGAR NUEVO MEDICO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Ingrese los datos solicitados.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          name: \"dni\",\n          label: \"DNI\",\n          type: \"number\",\n          value: input.dni,\n          onChange: handleChange,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          name: \"lastname\",\n          label: \"Apellido/s\",\n          value: input.lastname,\n          type: \"text\",\n          onChange: handleChange,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          value: input.name,\n          name: \"name\",\n          label: \"Nombre/s\",\n          type: \"text\",\n          onChange: handleChange,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          value: input.license,\n          margin: \"dense\",\n          name: \"license\",\n          label: \"Matricula\",\n          type: \"text\",\n          onChange: handleChange,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          value: input.phoneNumber,\n          name: \"phoneNumber\",\n          label: \"Numero de telefono\",\n          type: \"text\",\n          onChange: handleChange,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          value: input.email,\n          margin: \"dense\",\n          name: \"email\",\n          label: \"Email\",\n          type: \"email\",\n          onChange: handleChange,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"birthdate\",\n          label: \"Fecha de nacimiento\",\n          type: \"date\",\n          defaultValue: \"2021-05-14\",\n          onChange: handleChange,\n          className: classes.textField,\n          InputLabelProps: {\n            shrink: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"specialityA\",\n          children: \"Especialidades\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          className: classes.select,\n          name: \"specialities\",\n          onChange: handleChipAdd,\n          inputProps: {\n            style: {\n              width: '177px'\n            }\n          },\n          children: medicSpecialities.map((el, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: el.name,\n            children: el.name\n          }, `speciality-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          component: \"ul\",\n          className: classes.paper,\n          children: chipSpecialities.map((data, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Chip, {\n              className: classes.chip,\n              label: data,\n              onDelete: () => handleChipDelete(data)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 33\n            }, this)\n          }, `speciality-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Direccion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          value: address.street,\n          margin: \"dense\",\n          name: \"street\",\n          label: \"Calle\",\n          type: \"text\",\n          onChange: handleChangeAddress,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          value: address.number,\n          margin: \"dense\",\n          name: \"number\",\n          label: \"Numero\",\n          type: \"text\",\n          onChange: handleChangeAddress,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          value: address.floor,\n          margin: \"dense\",\n          name: \"floor\",\n          label: \"Piso\",\n          type: \"text\",\n          onChange: handleChangeAddress,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          value: address.postalCode,\n          margin: \"dense\",\n          name: \"postalCode\",\n          label: \"Codigo postal\",\n          type: \"text\",\n          onChange: handleChangeAddress,\n          onBlur: handlePostalCode,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          name: \"locality\",\n          onChange: handleChangeAddress,\n          children: localities.length === 0 ? null : localities.map((el, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: el.name,\n            name: \"locality\",\n            children: el.name\n          }, `locality-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 35\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          name: \"state\",\n          label: \"Provincia\",\n          value: address.state,\n          disabled: true,\n          type: \"text\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCancel,\n          className: classes.popupBtn,\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.popupBtn,\n          onClick: handleSubmit,\n          type: \"submit\",\n          color: \"primary\",\n          children: \"Agregar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AdminMedicAdd, \"UEZ78DeNGkaiQVAhBBI47zNs9es=\", false, function () {\n  return [useStyles];\n});\n\n_c = AdminMedicAdd;\nexport default AdminMedicAdd;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminMedicAdd\");","map":{"version":3,"sources":["/home/alan/Escritorio/Integra/IntegraApp/src/components/Admin/AdminMedics/AdminMedicAdd.jsx"],"names":["React","useState","Fab","Tooltip","InputLabel","MenuItem","Select","makeStyles","Chip","Paper","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","AddIcon","DialogTitle","supabase","Swal","withReactContent","useStyles","theme","fab","margin","spacing","backgroundColor","fontSize","border","absolute","position","bottom","right","paper","display","justifyContent","flexWrap","listStyle","padding","chip","color","fontWeight","popup","popupBtn","borderRadius","select","width","textTransform","resetInputs","name","lastname","dni","license","email","phoneNumber","state","adressPostalCode","birthdate","specialities","AdminMedicAdd","medicSpecialities","firebase","classes","MySwal","input","setInput","open","setOpen","chipSpecialities","setChipSpecialities","localities","setLocalities","address","setAddress","street","number","floor","department","locality","postalCode","handleClickOpen","handleClose","handleCancel","handleChange","e","value","target","handleChangeAddress","handlePostalCode","String","length","data","error","errorsito","from","eq","fire","title","icon","showCancelButton","confirmButtonText","confirmButtonColor","states","handleSubmit","preventDefault","insert","medic_license","phone_number","forEach","el","medic_dni","speciality_id","id","timer","text","message","parseInt","role","account","auth","createUserWithEmailAndPassword","sendPasswordResetEmail","then","window","location","reload","handleChipAdd","toAdd","speciality","find","concat","handleChipDelete","toDelete","chips","filter","deleteSpec","textField","shrink","style","map","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Fab, Tooltip, InputLabel, MenuItem, Select } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport AddIcon from '@material-ui/icons/Add';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport supabase from '../../../supabase.config.js';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\n\nconst useStyles = makeStyles((theme) => ({\n    fab: {\n        margin: theme.spacing(2),\n        backgroundColor: '#2c7f7b',\n        fontSize: '35px',\n        border: '3px solid #2c7f7b',\n        '&:hover': {\n            backgroundColor: '#2c7f7b',\n            border: '3px solid #fafafa',\n        },\n    },\n    absolute: {\n        position: 'absolute',\n        bottom: theme.spacing(2),\n        right: theme.spacing(3),\n    },\n    paper: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        listStyle: 'none',\n        padding: theme.spacing(0.5),\n        margin: 0,\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n        backgroundColor: '#3db7b1',\n        color: 'white',\n        fontWeight: 'bold',\n        fontSize: '15px',\n    },\n    popup: {\n        color: '#fafafa',\n        backgroundColor: '#2c7f7b',\n        fontWeight: 'bold',\n        fontSize: '30px',\n    },\n    popupBtn: {\n        color: '#fafafa',\n        padding: theme.spacing(0.5),\n        border: '3px solid #2c7f7b',\n        borderRadius: '5px',\n        backgroundColor: '#2c7f7b',\n        fontWeight: 'bold',\n        fontSize: '15px',\n        '&:hover': {\n            backgroundColor: '#fafafa',\n            color: '#2c7f7b',\n            padding: theme.spacing(0.5),\n        },\n    },\n    select: {\n        width: '177px',\n        textTransform: 'capitalize',\n    },\n}));\n\nconst resetInputs = {\n    name: '',\n    lastname: '',\n    dni: '',\n    license: '',\n    email: '',\n    phoneNumber: '',\n    state: 'active',\n    adressPostalCode: '',\n    birthdate: '',\n    specialities: [],\n};\n\nfunction AdminMedicAdd({ medicSpecialities, firebase }) {\n    const classes = useStyles();\n    const MySwal = withReactContent(Swal);\n    const [input, setInput] = useState(resetInputs);\n    const [open, setOpen] = useState(false);\n    const [chipSpecialities, setChipSpecialities] = useState([]);\n    const [localities, setLocalities] = useState([]);\n    const [address, setAddress] = useState({\n        street: '',\n        number: '',\n        floor: '',\n        department: '',\n        locality: '',\n        postalCode: '',\n        state: '',\n    });\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleCancel = () => {\n        setOpen(false);\n        setInput(resetInputs);\n    };\n\n    const handleChange = (e) => {\n        const value = e.target.value;\n        const name = e.target.name;\n        setInput({ ...input, [name]: value });\n    };\n\n    const handleChangeAddress = async (e) => {\n        const name = e.target.name;\n        const value = e.target.value;\n\n        setAddress({ ...address, [name]: value });\n    };\n\n    const handlePostalCode = async () => {\n        if (\n            address.postalCode !== '' &&\n            String(address.postalCode).length >= 4\n        ) {\n            const { data, error: errorsito } = await supabase\n                .from('localities')\n                .select('name, postal_code, states (name)')\n                .eq('postal_code', address.postalCode);\n            if (errorsito || data.length === 0)\n                return MySwal.fire({\n                    title: 'No existe ese codigo postal.',\n                    icon: 'error',\n                    showCancelButton: false,\n                    confirmButtonText: 'Aceptar',\n                    confirmButtonColor: '#00897B',\n                });\n            setLocalities(data);\n            setAddress({ ...address, state: data[0].states.name });\n        }\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            await supabase.from('medics').insert([\n                {\n                    dni: input.dni,\n                    name: input.name,\n                    lastname: input.lastname,\n                    medic_license: input.license,\n                    email: input.email,\n                    phone_number: input.phoneNumber,\n                    state: input.state,\n                    birthdate: input.birthdate,\n                },\n            ]);\n\n            input.specialities.forEach(async (el) => {\n                await supabase.from('medics_medical_specialities').insert([\n                    {\n                        medic_dni: input.dni,\n                        speciality_id: el.id,\n                    },\n                ]);\n            });\n\n            MySwal.fire({\n                title: 'Se agregó al médico con éxito.',\n                icon: 'success',\n                timer: 2000,\n            });\n        } catch (error) {\n            MySwal.fire({\n                title: 'No se pudo agregar al medico.',\n                text: error.message,\n                icon: 'error',\n            });\n        }\n        await supabase.from('users').insert([\n            {\n                dni: parseInt(input.dni),\n                role: 'medic',\n                email: input.email,\n                account: 'active',\n            },\n        ]);\n\n        await firebase\n            .auth()\n            .createUserWithEmailAndPassword(input.email, String(input.dni));\n\n        await firebase.auth().sendPasswordResetEmail(input.email);\n\n        try {\n            MySwal.fire({\n                title: 'Se creó un nuevo usuario médico!.',\n                text: 'Debe resetear su password. Le llegará el link por mail.',\n                icon: 'success',\n                timer: 2000,\n            }).then(() => window.location.reload());\n        } catch (error) {\n            MySwal.fire({\n                title: 'No se pudo agregar al medico.',\n                text: error.message,\n                icon: 'error',\n            });\n        }\n        setOpen(false);\n    };\n\n    const handleChipAdd = (toAdd) => {\n        const value = toAdd.target.value;\n\n        const speciality = medicSpecialities.find(\n            (speciality) => speciality.name === value\n        );\n        setInput({\n            ...input,\n            specialities: input.specialities.concat(speciality),\n        });\n        setChipSpecialities(chipSpecialities.concat(value));\n    };\n\n    const handleChipDelete = (toDelete) => {\n        setChipSpecialities((chips) =>\n            chips.filter((chip) => chip !== toDelete)\n        );\n        setInput({\n            ...input,\n            specialities: input.specialities.filter(\n                (deleteSpec) => deleteSpec.name !== toDelete\n            ),\n        });\n    };\n\n    return (\n        <div>\n            <Tooltip title='Agregar medico' onClick={handleClickOpen}>\n                <Fab color='primary' className={classes.fab}>\n                    <AddIcon />\n                </Fab>\n            </Tooltip>\n            <Dialog open={open} onClose={handleClose} onSubmit={handleSubmit}>\n                <DialogTitle className={classes.popup}>\n                    AGREGAR NUEVO MEDICO\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Ingrese los datos solicitados.\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin='dense'\n                        name='dni'\n                        label='DNI'\n                        type='number'\n                        value={input.dni}\n                        onChange={handleChange}\n                        fullWidth\n                    />\n                    <TextField\n                        autoFocus\n                        margin='dense'\n                        name='lastname'\n                        label='Apellido/s'\n                        value={input.lastname}\n                        type='text'\n                        onChange={handleChange}\n                        fullWidth\n                    />\n                    <TextField\n                        autoFocus\n                        margin='dense'\n                        value={input.name}\n                        name='name'\n                        label='Nombre/s'\n                        type='text'\n                        onChange={handleChange}\n                        fullWidth\n                    />\n                    <TextField\n                        autoFocus\n                        value={input.license}\n                        margin='dense'\n                        name='license'\n                        label='Matricula'\n                        type='text'\n                        onChange={handleChange}\n                        fullWidth\n                    />\n                    <TextField\n                        autoFocus\n                        margin='dense'\n                        value={input.phoneNumber}\n                        name='phoneNumber'\n                        label='Numero de telefono'\n                        type='text'\n                        onChange={handleChange}\n                        fullWidth\n                    />\n                    <TextField\n                        autoFocus\n                        value={input.email}\n                        margin='dense'\n                        name='email'\n                        label='Email'\n                        type='email'\n                        onChange={handleChange}\n                        fullWidth\n                    />\n                    <TextField\n                        name='birthdate'\n                        label='Fecha de nacimiento'\n                        type='date'\n                        defaultValue='2021-05-14'\n                        onChange={handleChange}\n                        className={classes.textField}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <InputLabel htmlFor='specialityA'>\n                        Especialidades\n                    </InputLabel>\n                    <Select\n                        className={classes.select}\n                        name='specialities'\n                        onChange={handleChipAdd}\n                        inputProps={{\n                            style: { width: '177px' },\n                        }}\n                    >\n                        {medicSpecialities.map((el, index) => (\n                            <MenuItem\n                                key={`speciality-${index}`}\n                                value={el.name}\n                            >\n                                {el.name}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                    <Paper component='ul' className={classes.paper}>\n                        {chipSpecialities.map((data, index) => (\n                            <li key={`speciality-${index}`}>\n                                <Chip\n                                    className={classes.chip}\n                                    label={data}\n                                    onDelete={() => handleChipDelete(data)}\n                                />\n                            </li>\n                        ))}\n                    </Paper>\n                    <p>Direccion</p>\n                    <TextField\n                        autoFocus\n                        value={address.street}\n                        margin='dense'\n                        name='street'\n                        label='Calle'\n                        type='text'\n                        onChange={handleChangeAddress}\n                        fullWidth\n                    />\n                    <TextField\n                        autoFocus\n                        value={address.number}\n                        margin='dense'\n                        name='number'\n                        label='Numero'\n                        type='text'\n                        onChange={handleChangeAddress}\n                        fullWidth\n                    />\n                    <TextField\n                        autoFocus\n                        value={address.floor}\n                        margin='dense'\n                        name='floor'\n                        label='Piso'\n                        type='text'\n                        onChange={handleChangeAddress}\n                        fullWidth\n                    />\n                    <TextField\n                        autoFocus\n                        value={address.postalCode}\n                        margin='dense'\n                        name='postalCode'\n                        label='Codigo postal'\n                        type='text'\n                        onChange={handleChangeAddress}\n                        onBlur={handlePostalCode}\n                        fullWidth\n                    />\n                    <Select name='locality' onChange={handleChangeAddress}>\n                        {localities.length === 0\n                            ? null\n                            : localities.map((el, index) => (\n                                  <MenuItem\n                                      key={`locality-${index}`}\n                                      value={el.name}\n                                      name='locality'\n                                  >\n                                      {el.name}\n                                  </MenuItem>\n                              ))}\n                    </Select>\n                    <TextField\n                        autoFocus\n                        margin='dense'\n                        name='state'\n                        label='Provincia'\n                        value={address.state}\n                        disabled\n                        type='text'\n                        fullWidth\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleCancel} className={classes.popupBtn}>\n                        Cancelar\n                    </Button>\n                    <Button\n                        className={classes.popupBtn}\n                        onClick={handleSubmit}\n                        type='submit'\n                        color='primary'\n                    >\n                        Agregar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default AdminMedicAdd;\n"]},"metadata":{},"sourceType":"module"}