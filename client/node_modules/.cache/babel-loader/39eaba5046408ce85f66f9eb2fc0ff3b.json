{"ast":null,"code":"var _jsxFileName = \"/home/alan/Escritorio/Integra/IntegraApp/src/components/Admin/AdminRegistration/AdminRegistration.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport styles from './AdminRegistration.module.css';\nimport LogoNav from '../../../assets/logo-integra.png';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\nimport supabase from '../../../supabase.config';\nimport Swal from 'sweetalert2';\nimport Styles from './AdminRegistration.module.css';\nimport withReactContent from 'sweetalert2-react-content';\nimport 'firebase/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3)\n  },\n  textField: {\n    width: '300px'\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  button: {\n    backgroundColor: '#27978b',\n    color: '#f0f0f0'\n  }\n}));\n\nfunction AdminRegistration({\n  firebase\n}) {\n  _s();\n\n  const classes = useStyles();\n  const MySwal = withReactContent(Swal);\n  const [input, setInput] = useState({\n    name: '',\n    lastname: '',\n    dni: '',\n    mail: '',\n    birthdate: '',\n    phone: '',\n    root: ''\n  });\n  const [errors, setErrors] = useState({\n    name: false,\n    lastname: false,\n    dni: false,\n    birthdate: false,\n    root: false,\n    mail: false,\n    phone: false\n  });\n  const [errorRequest, setErrorRequest] = useState(false);\n\n  const handleClickOpen = async () => {\n    if (!errors.name && !errors.lastname && !errors.dni && !errors.mail && !errors.birthdate && !errors.root && !errors.phone) {\n      await supabase.from('users').insert([{\n        dni: input.dni,\n        role: 'admin',\n        email: input.mail\n      }]);\n      await supabase.from('admins').insert([{\n        name: input.name,\n        lastname: input.lastname,\n        birthdate: input.birthdate,\n        dni: input.dni,\n        root: input.root,\n        email: input.mail,\n        phone_number: input.phone\n      }]);\n      await firebase.auth().createUserWithEmailAndPassword(input.mail, input.dni);\n\n      try {\n        await firebase.auth().sendPasswordResetEmail(input.mail);\n      } catch (error) {\n        MySwal.fire({\n          title: 'Usuario admin no pudo ser creado.',\n          text: `Mensaje de error ${error}`,\n          icon: 'error'\n        });\n      }\n\n      MySwal.fire({\n        title: 'Usuario admin creado con exito!',\n        text: 'Debera resetear su password. Le llegara el link por mail.',\n        icon: 'success'\n      });\n      setInput({\n        name: '',\n        lastname: '',\n        dni: '',\n        mail: '',\n        birthdate: '',\n        root: '',\n        phone: ''\n      });\n    } else {\n      setErrorRequest(true);\n    }\n  };\n\n  const handleClose = () => {\n    setErrorRequest(false);\n  };\n\n  const handleInputChange = e => {\n    setInput({ ...input,\n      [e.target.name]: e.target.value\n    });\n    setErrors(validate(e.target.name, e.target.value));\n  };\n\n  function validate(inputName, value) {\n    const mailPattern = /[a-zA-Z0-9]+[.]?([a-zA-Z0-9]+)?[@][a-z]{3,9}[.][a-z]{2,5}/g;\n    const numberPattern = /^[0-9\\b]+$/;\n    const passwordPattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n    let errors = {};\n\n    switch (inputName) {\n      case 'name':\n        {\n          if (!value) {\n            errors.name = true;\n          } else {\n            errors.name = false;\n          }\n\n          break;\n        }\n\n      case 'lastname':\n        {\n          if (!value) {\n            errors.lastname = true;\n          } else {\n            errors.lastname = false;\n          }\n\n          break;\n        }\n\n      case 'dni':\n        {\n          if (!numberPattern.test(value) || value.length !== 8) {\n            errors.dni = true;\n          } else {\n            errors.dni = false;\n          }\n\n          break;\n        }\n\n      case 'phone':\n        {\n          if (!numberPattern.test(value) || value.length !== 10) {\n            errors.phone = true;\n          } else {\n            errors.phone = false;\n          }\n\n          break;\n        }\n\n      case 'mail':\n        {\n          if (!mailPattern.test(value)) {\n            errors.mail = true;\n          } else {\n            errors.mail = false;\n          }\n\n          break;\n        }\n\n      case 'birthdate':\n        {\n          if (!value) {\n            errors.birthdate = true;\n          } else {\n            errors.birthdate = false;\n          }\n\n          break;\n        }\n\n      case 'root':\n        {\n          if (!value) {\n            errors.root = true;\n          } else {\n            errors.root = false;\n          }\n\n          break;\n        }\n\n      case 'password':\n        {\n          if (!passwordPattern.test(value)) {\n            errors.password = true;\n          } else {\n            errors.password = false;\n          }\n\n          break;\n        }\n\n      case 'confirmPassword':\n        {\n          if (input.password !== value) {\n            errors.confirmPassword = true;\n          } else {\n            errors.confirmPassword = false;\n          }\n\n          break;\n        }\n\n      default:\n        return null;\n    }\n\n    return errors;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.conteinerAll,\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      open: errorRequest,\n      autoHideDuration: 6000,\n      onClose: handleClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleClose,\n        severity: \"error\",\n        children: \"Error, verifique los datos.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formConteiner,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.imgConteiner,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: LogoNav,\n          className: styles.logo,\n          alt: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputs,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.firstColumn,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.textField,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Nombre\",\n              variant: \"outlined\",\n              id: \"name-input\",\n              type: \"text\",\n              name: \"name\",\n              autoComplete: \"off\",\n              className: classes.textField // size='small'\n              ,\n              value: input.name,\n              onChange: e => handleInputChange(e),\n              ...(errors.name && {\n                error: errors.name,\n                helperText: 'Nombre invalido'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.textField,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Apellido\",\n              variant: \"outlined\",\n              id: \"lastname-input\",\n              type: \"text\",\n              name: \"lastname\",\n              autoComplete: \"off\",\n              className: classes.textField // size='small'\n              ,\n              value: input.lastname,\n              onChange: e => handleInputChange(e),\n              ...(errors.lastname && {\n                error: errors.lastname,\n                helperText: 'Apellido invalido'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.textField,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"DNI\",\n              variant: \"outlined\",\n              id: \"dni-input\",\n              type: \"tel\",\n              name: \"dni\",\n              autoComplete: \"off\",\n              className: classes.textField // size='small'\n              ,\n              value: input.dni,\n              onChange: e => handleInputChange(e),\n              ...(errors.dni && {\n                error: true,\n                helperText: 'Dni invalido'\n              }),\n              inputProps: {\n                maxLength: 8\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.secondColumn,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.textField,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Fecha de nacimiento\",\n              variant: \"outlined\",\n              id: \"date-input\",\n              type: \"date\",\n              name: \"birthdate\",\n              autoComplete: \"off\",\n              className: classes.textField // size='small'\n              ,\n              value: input.birthdate,\n              InputLabelProps: {\n                shrink: true\n              },\n              onChange: e => handleInputChange(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.textField,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"outlined\",\n              className: classes.formControl,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"mail-input\",\n                children: \"Root\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                label: \"Root\",\n                variant: \"outlined\",\n                id: \"mail-input\",\n                type: \"text\",\n                name: \"root\",\n                autoComplete: \"off\",\n                className: classes.textField // size='small'\n                ,\n                value: input.root,\n                InputLabelProps: {\n                  shrink: false\n                },\n                onChange: e => handleInputChange(e),\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"true\",\n                  children: \"Si\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"false\",\n                  children: \"No\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.textField,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"E-mail\",\n              variant: \"outlined\",\n              id: \"mail-input\",\n              type: \"text\",\n              name: \"mail\",\n              autoComplete: \"off\",\n              className: classes.textField // size='small'\n              ,\n              value: input.mail,\n              onChange: e => handleInputChange(e),\n              ...(errors.mail && {\n                error: true,\n                helperText: 'Mail invalido'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: Styles.textField,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"phone\",\n            variant: \"outlined\",\n            id: \"phone-input\",\n            type: \"number\",\n            name: \"phone\",\n            autoComplete: \"off\",\n            size: \"small\",\n            value: input.phone,\n            onChange: e => handleInputChange(e),\n            ...(errors.phoneNumber && {\n              error: true,\n              helperText: 'Telefono invalido'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\" // style={{ borderRadius: 100, margin: 10 }}\n          ,\n          className: classes.button,\n          onClick: handleClickOpen,\n          children: \"Agregar Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AdminRegistration, \"gBCDfN/vpxUzvwg8nzQ7xM1J6uA=\", false, function () {\n  return [useStyles];\n});\n\n_c = AdminRegistration;\nexport default AdminRegistration;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminRegistration\");","map":{"version":3,"sources":["/home/alan/Escritorio/Integra/IntegraApp/src/components/Admin/AdminRegistration/AdminRegistration.jsx"],"names":["React","useState","makeStyles","InputLabel","FormHelperText","FormControl","styles","LogoNav","TextField","Select","MenuItem","Button","Snackbar","Alert","supabase","Swal","Styles","withReactContent","useStyles","theme","root","display","flexWrap","margin","spacing","withoutLabel","marginTop","textField","width","formControl","minWidth","button","backgroundColor","color","AdminRegistration","firebase","classes","MySwal","input","setInput","name","lastname","dni","mail","birthdate","phone","errors","setErrors","errorRequest","setErrorRequest","handleClickOpen","from","insert","role","email","phone_number","auth","createUserWithEmailAndPassword","sendPasswordResetEmail","error","fire","title","text","icon","handleClose","handleInputChange","e","target","value","validate","inputName","mailPattern","numberPattern","passwordPattern","test","length","password","confirmPassword","conteinerAll","formConteiner","imgConteiner","logo","inputs","firstColumn","helperText","maxLength","secondColumn","shrink","phoneNumber"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport styles from './AdminRegistration.module.css';\nimport LogoNav from '../../../assets/logo-integra.png';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\nimport supabase from '../../../supabase.config';\nimport Swal from 'sweetalert2';\nimport Styles from './AdminRegistration.module.css';\nimport withReactContent from 'sweetalert2-react-content';\nimport 'firebase/auth';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    margin: {\n        margin: theme.spacing(1),\n    },\n    withoutLabel: {\n        marginTop: theme.spacing(3),\n    },\n    textField: {\n        width: '300px',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    button: {\n        backgroundColor: '#27978b',\n        color: '#f0f0f0',\n    },\n}));\n\nfunction AdminRegistration({ firebase }) {\n    const classes = useStyles();\n    const MySwal = withReactContent(Swal);\n    const [input, setInput] = useState({\n        name: '',\n        lastname: '',\n        dni: '',\n        mail: '',\n        birthdate: '',\n        phone: '',\n        root: '',\n    });\n    const [errors, setErrors] = useState({\n        name: false,\n        lastname: false,\n        dni: false,\n        birthdate: false,\n        root: false,\n        mail: false,\n        phone: false,\n    });\n\n    const [errorRequest, setErrorRequest] = useState(false);\n\n    const handleClickOpen = async () => {\n        if (\n            !errors.name &&\n            !errors.lastname &&\n            !errors.dni &&\n            !errors.mail &&\n            !errors.birthdate &&\n            !errors.root &&\n            !errors.phone\n        ) {\n            await supabase.from('users').insert([\n                {\n                    dni: input.dni,\n                    role: 'admin',\n                    email: input.mail,\n                },\n            ]);\n\n            await supabase.from('admins').insert([\n                {\n                    name: input.name,\n                    lastname: input.lastname,\n                    birthdate: input.birthdate,\n                    dni: input.dni,\n                    root: input.root,\n                    email: input.mail,\n                    phone_number: input.phone,\n                },\n            ]);\n\n            await firebase\n                .auth()\n                .createUserWithEmailAndPassword(input.mail, input.dni);\n\n            try {\n                await firebase.auth().sendPasswordResetEmail(input.mail);\n            } catch (error) {\n                MySwal.fire({\n                    title: 'Usuario admin no pudo ser creado.',\n                    text: `Mensaje de error ${error}`,\n                    icon: 'error',\n                });\n            }\n            MySwal.fire({\n                title: 'Usuario admin creado con exito!',\n                text: 'Debera resetear su password. Le llegara el link por mail.',\n                icon: 'success',\n            });\n\n            setInput({\n                name: '',\n                lastname: '',\n                dni: '',\n                mail: '',\n                birthdate: '',\n                root: '',\n                phone: '',\n            });\n        } else {\n            setErrorRequest(true);\n        }\n    };\n\n    const handleClose = () => {\n        setErrorRequest(false);\n    };\n\n    const handleInputChange = (e) => {\n        setInput({\n            ...input,\n            [e.target.name]: e.target.value,\n        });\n        setErrors(validate(e.target.name, e.target.value));\n    };\n\n    function validate(inputName, value) {\n        const mailPattern =\n            /[a-zA-Z0-9]+[.]?([a-zA-Z0-9]+)?[@][a-z]{3,9}[.][a-z]{2,5}/g;\n        const numberPattern = /^[0-9\\b]+$/;\n        const passwordPattern =\n            /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n\n        let errors = {};\n        switch (inputName) {\n            case 'name': {\n                if (!value) {\n                    errors.name = true;\n                } else {\n                    errors.name = false;\n                }\n                break;\n            }\n            case 'lastname': {\n                if (!value) {\n                    errors.lastname = true;\n                } else {\n                    errors.lastname = false;\n                }\n                break;\n            }\n            case 'dni': {\n                if (!numberPattern.test(value) || value.length !== 8) {\n                    errors.dni = true;\n                } else {\n                    errors.dni = false;\n                }\n                break;\n            }\n            case 'phone': {\n                if (!numberPattern.test(value) || value.length !== 10) {\n                    errors.phone = true;\n                } else {\n                    errors.phone = false;\n                }\n                break;\n            }\n            case 'mail': {\n                if (!mailPattern.test(value)) {\n                    errors.mail = true;\n                } else {\n                    errors.mail = false;\n                }\n                break;\n            }\n            case 'birthdate': {\n                if (!value) {\n                    errors.birthdate = true;\n                } else {\n                    errors.birthdate = false;\n                }\n                break;\n            }\n            case 'root': {\n                if (!value) {\n                    errors.root = true;\n                } else {\n                    errors.root = false;\n                }\n                break;\n            }\n            case 'password': {\n                if (!passwordPattern.test(value)) {\n                    errors.password = true;\n                } else {\n                    errors.password = false;\n                }\n                break;\n            }\n            case 'confirmPassword': {\n                if (input.password !== value) {\n                    errors.confirmPassword = true;\n                } else {\n                    errors.confirmPassword = false;\n                }\n                break;\n            }\n            default:\n                return null;\n        }\n        return errors;\n    }\n\n    return (\n        <div className={styles.conteinerAll}>\n            <Snackbar\n                open={errorRequest}\n                autoHideDuration={6000}\n                onClose={handleClose}\n            >\n                <Alert onClose={handleClose} severity='error'>\n                    Error, verifique los datos.\n                </Alert>\n            </Snackbar>\n            <div className={styles.formConteiner}>\n                <div className={styles.imgConteiner}>\n                    <img src={LogoNav} className={styles.logo} alt='Logo' />\n                </div>\n                <div className={styles.inputs}>\n                    <div className={styles.firstColumn}>\n                        <div className={styles.textField}>\n                            <TextField\n                                label='Nombre'\n                                variant='outlined'\n                                id='name-input'\n                                type='text'\n                                name='name'\n                                autoComplete='off'\n                                className={classes.textField}\n                                // size='small'\n                                value={input.name}\n                                onChange={(e) => handleInputChange(e)}\n                                {...(errors.name && {\n                                    error: errors.name,\n                                    helperText: 'Nombre invalido',\n                                })}\n                            />\n                        </div>\n                        <div className={styles.textField}>\n                            <TextField\n                                label='Apellido'\n                                variant='outlined'\n                                id='lastname-input'\n                                type='text'\n                                name='lastname'\n                                autoComplete='off'\n                                className={classes.textField}\n                                // size='small'\n                                value={input.lastname}\n                                onChange={(e) => handleInputChange(e)}\n                                {...(errors.lastname && {\n                                    error: errors.lastname,\n                                    helperText: 'Apellido invalido',\n                                })}\n                            />\n                        </div>\n                        <div className={styles.textField}>\n                            <TextField\n                                label='DNI'\n                                variant='outlined'\n                                id='dni-input'\n                                type='tel'\n                                name='dni'\n                                autoComplete='off'\n                                className={classes.textField}\n                                // size='small'\n                                value={input.dni}\n                                onChange={(e) => handleInputChange(e)}\n                                {...(errors.dni && {\n                                    error: true,\n                                    helperText: 'Dni invalido',\n                                })}\n                                inputProps={{ maxLength: 8 }}\n                            />\n                        </div>\n                    </div>\n                    <div className={styles.secondColumn}>\n                        <div className={styles.textField}>\n                            <TextField\n                                label='Fecha de nacimiento'\n                                variant='outlined'\n                                id='date-input'\n                                type='date'\n                                name='birthdate'\n                                autoComplete='off'\n                                className={classes.textField}\n                                // size='small'\n                                value={input.birthdate}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                onChange={(e) => handleInputChange(e)}\n                            />\n                        </div>\n                        <div className={styles.textField}>\n                            <FormControl\n                                variant='outlined'\n                                className={classes.formControl}\n                            >\n                                <InputLabel htmlFor='mail-input'>\n                                    Root\n                                </InputLabel>\n                                {/* <label htmlFor='mail-input'>Root?</label> */}\n                                <Select\n                                    label='Root'\n                                    variant='outlined'\n                                    id='mail-input'\n                                    type='text'\n                                    name='root'\n                                    autoComplete='off'\n                                    className={classes.textField}\n                                    // size='small'\n                                    value={input.root}\n                                    InputLabelProps={{\n                                        shrink: false,\n                                    }}\n                                    onChange={(e) => handleInputChange(e)}\n                                >\n                                    <MenuItem value='true'>Si</MenuItem>\n                                    <MenuItem value='false'>No</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </div>\n                        <div className={styles.textField}>\n                            <TextField\n                                label='E-mail'\n                                variant='outlined'\n                                id='mail-input'\n                                type='text'\n                                name='mail'\n                                autoComplete='off'\n                                className={classes.textField}\n                                // size='small'\n                                value={input.mail}\n                                onChange={(e) => handleInputChange(e)}\n                                {...(errors.mail && {\n                                    error: true,\n                                    helperText: 'Mail invalido',\n                                })}\n                            />\n                        </div>\n                    </div>\n\n                    <div className={Styles.textField}>\n                        <TextField\n                            label='phone'\n                            variant='outlined'\n                            id='phone-input'\n                            type='number'\n                            name='phone'\n                            autoComplete='off'\n                            size='small'\n                            value={input.phone}\n                            onChange={(e) => handleInputChange(e)}\n                            {...(errors.phoneNumber && {\n                                error: true,\n                                helperText: 'Telefono invalido',\n                            })}\n                        />\n                    </div>\n\n                    {/* <div className={Styles.textField}>\n                        <TextField\n                            id='outlined-search'\n                            label='Contraseña'\n                            variant='outlined'\n                            id='password-input'\n                            type='password'\n                            name='password'\n                            autoComplete='off'\n                            size='small'\n                            value={input.password}\n                            onChange={(e) => handleInputChange(e)}\n                            {...(errors.password && {\n                                error: true,\n                                helperText: 'Contraseña invalida',\n                            })}\n                        />\n                    </div>\n                    <div className={Styles.textField}>\n                        <TextField\n                            id='outlined-search'\n                            label='Confirmas contraseña'\n                            variant='outlined'\n                            id='confirm-password-input'\n                            type='password'\n                            name='confirmPassword'\n                            autoComplete='off'\n                            size='small'\n                            value={input.confirmPassword}\n                            onChange={(e) => handleInputChange(e)}\n                            {...(errors.confirmPassword && {\n                                error: true,\n                                helperText: 'Las contraseñas no son iguales',\n                            })}\n                        />\n                    </div> */}\n                </div>\n                <div>\n                    <Button\n                        variant='contained'\n                        color='primary'\n                        // style={{ borderRadius: 100, margin: 10 }}\n                        className={classes.button}\n                        onClick={handleClickOpen}\n                    >\n                        Agregar Admin\n                    </Button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default AdminRegistration;\n"]},"metadata":{},"sourceType":"module"}