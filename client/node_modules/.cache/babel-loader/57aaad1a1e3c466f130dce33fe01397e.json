{"ast":null,"code":"var _jsxFileName = \"/home/alan/Escritorio/Integra/IntegraApp/src/components/Admin/AdminPlansManage/AdminPlans/DeletePlan.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Box, Table, TableBody, TableCell, TableHead, TableRow, TextField, Typography } from '@material-ui/core'; //------------------------makeStyle1---------------------------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  iconFilter: {\n    color: '#fafafa',\n    fontWeight: 'bold',\n    '&:hover': {\n      backgroundColor: '#34a7a1'\n    }\n  },\n  p: {\n    //fontWeight: 'bold',\n    fontSize: '1.3rem',\n    color: '#000000',\n    textAlign: 'rigth'\n  },\n  popup: {\n    color: '#fafafa',\n    backgroundColor: '#2c7f7b',\n    fontWeight: 'bold',\n    fontSize: '30px'\n  },\n  popupBtn: {\n    color: '#fafafa',\n    padding: theme.spacing(0.5),\n    border: '3px solid #2c7f7b',\n    backgroundColor: '#2c7f7b',\n    fontWeight: 'bold',\n    fontSize: '15px',\n    '&:hover': {\n      backgroundColor: lighten('#fafafa', 0.2),\n      color: '#2c7f7b',\n      padding: theme.spacing(0.5)\n    }\n  }\n}));\nexport default function DeletePlan({\n  open,\n  handleSubmit,\n  handleCloseModal,\n  deletePlan,\n  password\n}) {\n  _s();\n\n  const classes = useStyles();\n\n  if (deletePlan.users !== 0) {\n    return /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleCloseModal,\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleSubmit(e, deletePlan.id_plan),\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"form-dialog-title\",\n          className: classes.popup,\n          children: \"BORRAR PLAN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n            className: classes.p,\n            children: `No se puede eliminar un plan si este tiene asignado a socios (${deletePlan.users}). Antes debe cambiar de plan a estos socios, luego podra eliminar el plan.`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            margin: 1,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h8\",\n              gutterBottom: true,\n              component: \"div\",\n              className: classes.p,\n              children: \"BENEFICIOS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              size: \"small\",\n              \"aria-label\": \"purchases\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"NOMBRE\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"DESCRIPCION\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: deletePlan.benefits.map(benefit => /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: benefit.title.toUpperCase()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: benefit.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleCloseModal,\n            color: \"primary\",\n            className: classes.popupBtn,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: handleCloseModal,\n    \"aria-labelledby\": \"form-dialog-title\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleSubmit(e, deletePlan.id_plan),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: \"Delete Plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: `Are you sure you want to delete ${deletePlan.name} ?`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          margin: 1,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h8\",\n            gutterBottom: true,\n            component: \"div\",\n            children: \"Benefits\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            size: \"small\",\n            \"aria-label\": \"purchases\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: deletePlan.benefits.map(benefit => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: benefit.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: benefit.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          error: password.error,\n          id: \"outlined-password-input\",\n          label: \"Password\",\n          type: \"password\",\n          helperText: \"Incorrect Password.\",\n          autoComplete: \"current-password\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseModal,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          color: \"primary\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DeletePlan, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = DeletePlan;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeletePlan\");","map":{"version":3,"sources":["/home/alan/Escritorio/Integra/IntegraApp/src/components/Admin/AdminPlansManage/AdminPlans/DeletePlan.jsx"],"names":["React","lighten","makeStyles","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Box","Table","TableBody","TableCell","TableHead","TableRow","TextField","Typography","useStyles","theme","iconFilter","color","fontWeight","backgroundColor","p","fontSize","textAlign","popup","popupBtn","padding","spacing","border","DeletePlan","open","handleSubmit","handleCloseModal","deletePlan","password","classes","users","e","id_plan","benefits","map","benefit","title","toUpperCase","description","name","error"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport {\n    Box,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    TextField,\n    Typography,\n} from '@material-ui/core';\n\n//------------------------makeStyle1---------------------------------------------------------------------------------------\nconst useStyles = makeStyles((theme) => ({\n    iconFilter: {\n        color: '#fafafa',\n        fontWeight: 'bold',\n        '&:hover': {\n            backgroundColor: '#34a7a1',\n        },\n    },\n    p: {\n        //fontWeight: 'bold',\n        fontSize: '1.3rem',\n        color: '#000000',\n        textAlign: 'rigth',\n    },\n    popup: {\n        color: '#fafafa',\n        backgroundColor: '#2c7f7b',\n        fontWeight: 'bold',\n        fontSize: '30px',\n    },\n    popupBtn: {\n        color: '#fafafa',\n        padding: theme.spacing(0.5),\n        border: '3px solid #2c7f7b',\n        backgroundColor: '#2c7f7b',\n        fontWeight: 'bold',\n        fontSize: '15px',\n        '&:hover': {\n            backgroundColor: lighten('#fafafa', 0.2),\n            color: '#2c7f7b',\n            padding: theme.spacing(0.5),\n        },\n    },\n}));\n\nexport default function DeletePlan({\n    open,\n    handleSubmit,\n    handleCloseModal,\n    deletePlan,\n    password,\n}) {\n    const classes = useStyles();\n\n    if (deletePlan.users !== 0) {\n        return (\n            <Dialog\n                open={open}\n                onClose={handleCloseModal}\n                aria-labelledby='form-dialog-title'\n            >\n                <form onSubmit={(e) => handleSubmit(e, deletePlan.id_plan)}>\n                    <DialogTitle\n                        id='form-dialog-title'\n                        className={classes.popup}\n                    >\n                        BORRAR PLAN\n                    </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText className={classes.p}>\n                            {/*  {`You cannot delete a plan that is assigned to ${deletePlan.users} people. First change this people to another plan and then delete this plan.`} */}\n                            {`No se puede eliminar un plan si este tiene asignado a socios (${deletePlan.users}). Antes debe cambiar de plan a estos socios, luego podra eliminar el plan.`}\n                        </DialogContentText>\n                        <Box margin={1}>\n                            <Typography\n                                variant='h8'\n                                gutterBottom\n                                component='div'\n                                className={classes.p}\n                            >\n                                BENEFICIOS\n                            </Typography>\n                            <Table size='small' aria-label='purchases'>\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>NOMBRE</TableCell>\n                                        <TableCell>DESCRIPCION</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {deletePlan.benefits.map((benefit) => (\n                                        <TableRow>\n                                            <TableCell>\n                                                {benefit.title.toUpperCase()}\n                                            </TableCell>\n                                            <TableCell>\n                                                {benefit.description}\n                                            </TableCell>\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </Box>\n                    </DialogContent>\n\n                    <DialogActions>\n                        <Button\n                            onClick={handleCloseModal}\n                            color='primary'\n                            className={classes.popupBtn}\n                        >\n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n\n    return (\n        <Dialog\n            open={open}\n            onClose={handleCloseModal}\n            aria-labelledby='form-dialog-title'\n        >\n            <form onSubmit={(e) => handleSubmit(e, deletePlan.id_plan)}>\n                <DialogTitle id='form-dialog-title'>Delete Plan</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {`Are you sure you want to delete ${deletePlan.name} ?`}\n                    </DialogContentText>\n                    <Box margin={1}>\n                        <Typography variant='h8' gutterBottom component='div'>\n                            Benefits\n                        </Typography>\n                        <Table size='small' aria-label='purchases'>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>Name</TableCell>\n                                    <TableCell>Description</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {deletePlan.benefits.map((benefit) => (\n                                    <TableRow>\n                                        <TableCell>{benefit.title}</TableCell>\n                                        <TableCell>\n                                            {benefit.description}\n                                        </TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </Box>\n                    <TextField\n                        error={password.error}\n                        id='outlined-password-input'\n                        label='Password'\n                        type='password'\n                        helperText='Incorrect Password.'\n                        autoComplete='current-password'\n                        variant='outlined'\n                    />\n                </DialogContent>\n\n                <DialogActions>\n                    <Button onClick={handleCloseModal} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button type='submit' color='primary'>\n                        Delete\n                    </Button>\n                </DialogActions>\n            </form>\n        </Dialog>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}