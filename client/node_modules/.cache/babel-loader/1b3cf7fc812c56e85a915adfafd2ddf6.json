{"ast":null,"code":"var _jsxFileName = \"/home/alan/Escritorio/Integra/IntegraApp/src/components/Guest/RegStepForm/DatosEmpresa.jsx\",\n    _s = $RefreshSig$();\n\nimport { TextField } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport validator from './Validator.js';\nimport * as styles from './DatosEmpresa.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DatosEmpresa = () => {\n  _s();\n\n  const [textInputs, setTextInputs] = useState({\n    rh_name: ''\n  });\n  const [textInputsNum, setTextInputsNum] = useState({\n    company_phone: '',\n    company_cuit: ''\n  });\n  const [textInputsMix, setTextInputsMix] = useState({\n    bussines_name: '',\n    bussines_group: ''\n  });\n  const [emailInputs, setEmailInputs] = useState({\n    company_email: ''\n  });\n  const [errors, setErrors] = useState({\n    textErrors: {\n      rh_name: ''\n    },\n    textNumErrors: {\n      company_phone: ''\n    },\n    textMixErrors: {\n      bussines_name: '',\n      bussines_group: ''\n    },\n    emailErrors: {\n      company_email: ''\n    }\n  });\n  useEffect(() => {\n    let datosEmpresa = JSON.parse(localStorage.getItem('datosEmpresa'));\n\n    if (datosEmpresa) {\n      setTextInputs({\n        rh_name: datosEmpresa.rh_name\n      });\n      setTextInputsNum({\n        company_phone: datosEmpresa.company_phone,\n        company_cuit: datosEmpresa.company_cuit\n      });\n      setTextInputsMix({\n        bussines_name: datosEmpresa.bussines_name,\n        bussines_group: datosEmpresa.bussines_group\n      });\n      setEmailInputs({\n        company_email: datosEmpresa.company_email\n      });\n      setErrors(errors => ({ ...errors,\n        textErrors: validator({\n          rh_name: datosEmpresa.rh_name\n        }, 'text')\n      }));\n      setErrors(errors => ({ ...errors,\n        textNumErrors: validator({\n          company_phone: datosEmpresa.company_phone\n        }, 'number')\n      }));\n      setErrors(errors => ({ ...errors,\n        textMixErrors: validator({\n          bussines_name: datosEmpresa.bussines_name,\n          bussines_group: datosEmpresa.bussines_group\n        }, 'mix')\n      }));\n      setErrors(errors => ({ ...errors,\n        emailErrors: validator({\n          company_email: datosEmpresa.company_email\n        }, 'email')\n      }));\n    }\n  }, []);\n\n  function saveInLocalStorage() {\n    localStorage.setItem('datosEmpresa', JSON.stringify({ ...textInputs,\n      ...textInputsNum,\n      ...textInputsMix,\n      ...emailInputs\n    }));\n    localStorage.setItem('errorsEmpresa', JSON.stringify({ ...errors\n    }));\n  }\n\n  const handleMixChange = e => {\n    setTextInputsMix(prevState => {\n      return { ...prevState,\n        [e.target.name]: e.target.value\n      };\n    });\n    setErrors({ ...errors,\n      textMixErrors: validator({ ...textInputsMix,\n        [e.target.name]: e.target.value\n      }, 'mix')\n    });\n  };\n\n  const handleTextChange = e => {\n    setTextInputs(prevState => {\n      return { ...prevState,\n        [e.target.name]: e.target.value\n      };\n    });\n    setErrors({ ...errors,\n      textErrors: validator({ ...textInputs,\n        [e.target.name]: e.target.value\n      }, 'text')\n    });\n  };\n\n  const handleNumberChange = e => {\n    setTextInputsNum(prevState => {\n      return { ...prevState,\n        [e.target.name]: e.target.value\n      };\n    });\n    setErrors({ ...errors,\n      textNumErrors: validator({ ...textInputsNum,\n        [e.target.name]: e.target.value\n      }, 'number')\n    });\n  };\n\n  const handleEmailChange = e => {\n    setEmailInputs(prevState => {\n      return { ...prevState,\n        [e.target.name]: e.target.value\n      };\n    });\n    setErrors({ ...errors,\n      emailErrors: validator({ ...emailInputs,\n        [e.target.name]: e.target.value\n      }, 'email')\n    });\n  }; // useEffect(() => {\n  // \treturn ()=>{\n  // \t\tsaveInLocalStorage()\n  // \t}\n  // }, []);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.form,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.title,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Datos de la empresa: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.data,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.firstColumn,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.input,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"bussines_name\",\n            label: \"Razon Social\",\n            variant: \"outlined\",\n            value: textInputsMix.bussines_name,\n            type: \"text\",\n            onChange: e => handleMixChange(e),\n            onBlur: saveInLocalStorage,\n            ...(errors.textMixErrors.bussines_name && {\n              error: !!errors.textMixErrors.bussines_name,\n              helperText: errors.textMixErrors.bussines_name\n            }),\n            error: errors.textErrors.bussines_name && !!errors.textErrors.bussines_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.input,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"bussines_group\",\n            label: \"Grupo Empresarial\",\n            variant: \"outlined\",\n            value: textInputsMix.bussines_group,\n            onChange: e => handleMixChange(e),\n            onBlur: saveInLocalStorage,\n            ...(errors.textMixErrors.bussines_group && {\n              error: errors.textMixErrors.bussines_group,\n              helperText: errors.textMixErrors.bussines_group\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.input,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"rh_name\",\n            label: \"Nombre y Apellido de RRHH\",\n            variant: \"outlined\",\n            value: textInputs.rh_name,\n            onChange: e => handleTextChange(e),\n            onBlur: saveInLocalStorage,\n            ...(errors.textErrors.rh_name && {\n              error: errors.textErrors.rh_name,\n              helperText: errors.textErrors.rh_name\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.secondColumn,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.input,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"company_phone\",\n            label: \"Telefono\",\n            variant: \"outlined\",\n            value: textInputsNum.company_phone,\n            onChange: e => handleNumberChange(e),\n            onBlur: saveInLocalStorage,\n            ...(errors.textNumErrors.company_phone && {\n              error: errors.textNumErrors.company_phone,\n              helperText: errors.textNumErrors.company_phone\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.input,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"company_email\",\n            label: \"E-mail\",\n            variant: \"outlined\",\n            value: emailInputs.company_email,\n            onChange: e => handleEmailChange(e),\n            onBlur: saveInLocalStorage,\n            ...(errors.emailErrors.company_email && {\n              error: errors.emailErrors.company_email,\n              helperText: errors.emailErrors.company_email\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.input,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"company_cuit\",\n            label: \"CUIT\",\n            variant: \"outlined\",\n            value: textInputsNum.company_cuit,\n            onChange: e => handleNumberChange(e),\n            onBlur: saveInLocalStorage,\n            ...(errors.textNumErrors.company_cuit && {\n              error: errors.textNumErrors.company_cuit,\n              helperText: errors.textNumErrors.company_cuit\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DatosEmpresa, \"uVyLpgpAnSq1C1uRHnjsXlufXIw=\");\n\n_c = DatosEmpresa;\nexport default DatosEmpresa;\n\nvar _c;\n\n$RefreshReg$(_c, \"DatosEmpresa\");","map":{"version":3,"sources":["/home/alan/Escritorio/Integra/IntegraApp/src/components/Guest/RegStepForm/DatosEmpresa.jsx"],"names":["TextField","React","useEffect","useState","validator","styles","DatosEmpresa","textInputs","setTextInputs","rh_name","textInputsNum","setTextInputsNum","company_phone","company_cuit","textInputsMix","setTextInputsMix","bussines_name","bussines_group","emailInputs","setEmailInputs","company_email","errors","setErrors","textErrors","textNumErrors","textMixErrors","emailErrors","datosEmpresa","JSON","parse","localStorage","getItem","saveInLocalStorage","setItem","stringify","handleMixChange","e","prevState","target","name","value","handleTextChange","handleNumberChange","handleEmailChange","form","title","data","firstColumn","input","error","helperText","secondColumn"],"mappings":"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","sourcesContent":["import { TextField } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport validator from './Validator.js';\nimport * as styles from './DatosEmpresa.module.css';\n\nconst DatosEmpresa = () => {\n    const [textInputs, setTextInputs] = useState({\n        rh_name: '',\n    });\n    const [textInputsNum, setTextInputsNum] = useState({\n        company_phone: '',\n        company_cuit: '',\n    });\n    const [textInputsMix, setTextInputsMix] = useState({\n        bussines_name: '',\n        bussines_group: '',\n    });\n    const [emailInputs, setEmailInputs] = useState({\n        company_email: '',\n    });\n    const [errors, setErrors] = useState({\n        textErrors: {\n            rh_name: '',\n        },\n        textNumErrors: {\n            company_phone: '',\n        },\n        textMixErrors: {\n            bussines_name: '',\n            bussines_group: '',\n        },\n        emailErrors: {\n            company_email: '',\n        },\n    });\n\n    useEffect(() => {\n        let datosEmpresa = JSON.parse(localStorage.getItem('datosEmpresa'));\n        if (datosEmpresa) {\n            setTextInputs({\n                rh_name: datosEmpresa.rh_name,\n            });\n            setTextInputsNum({\n                company_phone: datosEmpresa.company_phone,\n                company_cuit: datosEmpresa.company_cuit,\n            });\n            setTextInputsMix({\n                bussines_name: datosEmpresa.bussines_name,\n                bussines_group: datosEmpresa.bussines_group,\n            });\n            setEmailInputs({\n                company_email: datosEmpresa.company_email,\n            });\n            setErrors((errors) => ({\n                ...errors,\n                textErrors: validator(\n                    {\n                        rh_name: datosEmpresa.rh_name,\n                    },\n                    'text'\n                ),\n            }));\n            setErrors((errors) => ({\n                ...errors,\n                textNumErrors: validator(\n                    {\n                        company_phone: datosEmpresa.company_phone,\n                    },\n                    'number'\n                ),\n            }));\n            setErrors((errors) => ({\n                ...errors,\n                textMixErrors: validator(\n                    {\n                        bussines_name: datosEmpresa.bussines_name,\n                        bussines_group: datosEmpresa.bussines_group,\n                    },\n                    'mix'\n                ),\n            }));\n            setErrors((errors) => ({\n                ...errors,\n                emailErrors: validator(\n                    {\n                        company_email: datosEmpresa.company_email,\n                    },\n                    'email'\n                ),\n            }));\n        }\n    }, []);\n\n    function saveInLocalStorage() {\n        localStorage.setItem(\n            'datosEmpresa',\n            JSON.stringify({\n                ...textInputs,\n                ...textInputsNum,\n                ...textInputsMix,\n                ...emailInputs,\n            })\n        );\n        localStorage.setItem('errorsEmpresa', JSON.stringify({ ...errors }));\n    }\n\n    const handleMixChange = (e) => {\n        setTextInputsMix((prevState) => {\n            return {\n                ...prevState,\n                [e.target.name]: e.target.value,\n            };\n        });\n        setErrors({\n            ...errors,\n            textMixErrors: validator(\n                { ...textInputsMix, [e.target.name]: e.target.value },\n                'mix'\n            ),\n        });\n    };\n    const handleTextChange = (e) => {\n        setTextInputs((prevState) => {\n            return {\n                ...prevState,\n                [e.target.name]: e.target.value,\n            };\n        });\n        setErrors({\n            ...errors,\n            textErrors: validator(\n                { ...textInputs, [e.target.name]: e.target.value },\n                'text'\n            ),\n        });\n    };\n    const handleNumberChange = (e) => {\n        setTextInputsNum((prevState) => {\n            return {\n                ...prevState,\n                [e.target.name]: e.target.value,\n            };\n        });\n        setErrors({\n            ...errors,\n            textNumErrors: validator(\n                { ...textInputsNum, [e.target.name]: e.target.value },\n                'number'\n            ),\n        });\n    };\n    const handleEmailChange = (e) => {\n        setEmailInputs((prevState) => {\n            return {\n                ...prevState,\n                [e.target.name]: e.target.value,\n            };\n        });\n        setErrors({\n            ...errors,\n            emailErrors: validator(\n                { ...emailInputs, [e.target.name]: e.target.value },\n                'email'\n            ),\n        });\n    };\n\n    // useEffect(() => {\n    // \treturn ()=>{\n    // \t\tsaveInLocalStorage()\n    // \t}\n    // }, []);\n\n    return (\n        <div className={styles.form}>\n            <div className={styles.title}>\n                <h2>Datos de la empresa: </h2>\n            </div>\n            <div className={styles.data}>\n                <div className={styles.firstColumn}>\n                    <div className={styles.input}>\n                        <TextField\n                            name='bussines_name'\n                            label='Razon Social'\n                            variant='outlined'\n                            value={textInputsMix.bussines_name}\n                            type='text'\n                            onChange={(e) => handleMixChange(e)}\n                            onBlur={saveInLocalStorage}\n                            {...(errors.textMixErrors.bussines_name && {\n                                error: !!errors.textMixErrors.bussines_name,\n                                helperText: errors.textMixErrors.bussines_name,\n                            })}\n                            error={\n                                errors.textErrors.bussines_name &&\n                                !!errors.textErrors.bussines_name\n                            }\n                        />\n                    </div>\n                    <div className={styles.input}>\n                        <TextField\n                            name='bussines_group'\n                            label='Grupo Empresarial'\n                            variant='outlined'\n                            value={textInputsMix.bussines_group}\n                            onChange={(e) => handleMixChange(e)}\n                            onBlur={saveInLocalStorage}\n                            {...(errors.textMixErrors.bussines_group && {\n                                error: errors.textMixErrors.bussines_group,\n                                helperText: errors.textMixErrors.bussines_group,\n                            })}\n                        />\n                    </div>\n                    <div className={styles.input}>\n                        <TextField\n                            name='rh_name'\n                            label='Nombre y Apellido de RRHH'\n                            variant='outlined'\n                            value={textInputs.rh_name}\n                            onChange={(e) => handleTextChange(e)}\n                            onBlur={saveInLocalStorage}\n                            {...(errors.textErrors.rh_name && {\n                                error: errors.textErrors.rh_name,\n                                helperText: errors.textErrors.rh_name,\n                            })}\n                        />\n                    </div>\n                </div>\n                <div className={styles.secondColumn}>\n                    <div className={styles.input}>\n                        <TextField\n                            name='company_phone'\n                            label='Telefono'\n                            variant='outlined'\n                            value={textInputsNum.company_phone}\n                            onChange={(e) => handleNumberChange(e)}\n                            onBlur={saveInLocalStorage}\n                            {...(errors.textNumErrors.company_phone && {\n                                error: errors.textNumErrors.company_phone,\n                                helperText: errors.textNumErrors.company_phone,\n                            })}\n                        />\n                    </div>\n                    <div className={styles.input}>\n                        <TextField\n                            name='company_email'\n                            label='E-mail'\n                            variant='outlined'\n                            value={emailInputs.company_email}\n                            onChange={(e) => handleEmailChange(e)}\n                            onBlur={saveInLocalStorage}\n                            {...(errors.emailErrors.company_email && {\n                                error: errors.emailErrors.company_email,\n                                helperText: errors.emailErrors.company_email,\n                            })}\n                        />\n                    </div>\n                    <div className={styles.input}>\n                        <TextField\n                            name='company_cuit'\n                            label='CUIT'\n                            variant='outlined'\n                            value={textInputsNum.company_cuit}\n                            onChange={(e) => handleNumberChange(e)}\n                            onBlur={saveInLocalStorage}\n                            {...(errors.textNumErrors.company_cuit && {\n                                error: errors.textNumErrors.company_cuit,\n                                helperText: errors.textNumErrors.company_cuit,\n                            })}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\nexport default DatosEmpresa;\n"]},"metadata":{},"sourceType":"module"}