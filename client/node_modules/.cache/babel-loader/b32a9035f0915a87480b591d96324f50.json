{"ast":null,"code":"var _jsxFileName = \"/home/alan/Escritorio/Integra/IntegraApp/src/components/Guest/RegStepForm/RegStepper.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport DatosTitular from './DatosTitular';\nimport DatosEmpresa from './DatosEmpresa';\nimport DatosRevision from './DatosRevision';\nimport supabase from '../../../supabase.config';\nimport style from './RegStepper.module.css';\nimport swal from 'sweetalert2';\nimport Declaration from './Declaration';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  backButton: {\n    marginRight: theme.spacing(1),\n    marginLeft: theme.spacing(5),\n    color: '#fafafa',\n    width: 'fit-content',\n    border: '3px solid #2c7f7b',\n    borderRadius: '5px',\n    backgroundColor: '#2c7f7b',\n    fontWeight: 'bold',\n    fontSize: '15px',\n    '&:hover': {\n      backgroundColor: '#fafafa',\n      color: '#2c7f7b'\n    }\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  popupBtn: {\n    color: '#fafafa',\n    width: 'fit-content',\n    marginLeft: '40px',\n    border: '3px solid #2c7f7b',\n    borderRadius: '5px',\n    backgroundColor: '#2c7f7b',\n    fontWeight: 'bold',\n    fontSize: '15px',\n    '&:hover': {\n      backgroundColor: '#fafafa',\n      color: '#2c7f7b'\n    }\n  }\n}));\n\nfunction getSteps() {\n  return ['Datos del Titular', 'Datos de la Empresa', 'Antecedentes de Salud', 'Resumen'];\n}\n\nfunction getStepContent(stepIndex) {\n  switch (stepIndex) {\n    case 0:\n      return /*#__PURE__*/_jsxDEV(DatosTitular, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 20\n      }, this);\n\n    case 1:\n      return /*#__PURE__*/_jsxDEV(DatosEmpresa, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 20\n      }, this);\n\n    case 2:\n      return /*#__PURE__*/_jsxDEV(Declaration, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 20\n      }, this);\n\n    case 3:\n      return /*#__PURE__*/_jsxDEV(DatosRevision, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 20\n      }, this);\n\n    default:\n      return 'Unknown stepIndex';\n  }\n}\n\nexport default function RegStepper() {\n  _s();\n\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = useState(0);\n  const steps = getSteps();\n\n  const alltrue = obj => {\n    let completeError = true;\n\n    for (let error in obj) {\n      completeError = completeError && typeof Object.values(obj[error])[0] !== 'string';\n    }\n\n    return completeError;\n  };\n\n  const handleNext = async () => {\n    switch (activeStep.toString()) {\n      case '0':\n        const errorsTitular = JSON.parse(localStorage.getItem('errorsTitular'));\n\n        if (errorsTitular) {\n          alltrue(errorsTitular) ? setActiveStep(prevActiveStep => prevActiveStep + 1) : new swal('Ups!', 'Debes completar todos los campos');\n        } else new swal('Ups!', 'Por favor complete el formulario.');\n\n        break;\n\n      case '1':\n        const errorsEmpresa = JSON.parse(localStorage.getItem('errorsEmpresa'));\n\n        if (errorsEmpresa) {\n          alltrue(errorsEmpresa) ? setActiveStep(prevActiveStep => prevActiveStep + 1) : new swal('Ups!', 'Debes completar todos los campos');\n        } else new swal('Error', 'Complete el formulario para continuar');\n\n        break;\n\n      case '2':\n        const datosDeclaration = JSON.parse(localStorage.getItem('datosDeclaration'));\n\n        if (datosDeclaration) {\n          if (datosDeclaration.accept) setActiveStep(prevActiveStep => prevActiveStep + 1);else new swal('Ups!', 'Debe aceptar la declaracion Jurada');\n        } else new swal('Ups!', 'No se registraron datos');\n\n        break;\n\n      default:\n        break;\n    }\n\n    if (activeStep === steps.length - 1) {\n      const datosTitular = JSON.parse(localStorage.getItem('datosTitular'));\n      const datosEmpresa = JSON.parse(localStorage.getItem('datosEmpresa'));\n      const datosDeclaration = JSON.parse(localStorage.getItem('datosDeclaration'));\n      const {\n        data: idPartners\n      } = await supabase.from('partners').select('family_group');\n      const lastId = idPartners.sort(function (a, b) {\n        if (a.family_group < b.family_group) {\n          return 1;\n        }\n\n        if (a.family_group > b.family_group) {\n          return -1;\n        }\n\n        return 0;\n      }).shift().family_group + 1;\n      let idCompany = null;\n      const {\n        data: companyData\n      } = await supabase.from('companies').select('id').eq('cuit', datosEmpresa.company_cuit);\n      console.log(companyData, 'companyData');\n\n      if (companyData.length === 0) {\n        const {\n          data: newId,\n          error: errorInsertCompany\n        } = await supabase.from('companies').insert([{\n          business_name: datosEmpresa.bussines_name,\n          cuit: datosEmpresa.company_cuit,\n          phone_number: datosEmpresa.company_phone,\n          email: datosEmpresa.company_email\n        }]);\n        console.log(errorInsertCompany, 'errorInsertCompany');\n        console.log(newId, 'newId');\n        idCompany = newId[0].id;\n      } else {\n        idCompany = companyData[0].id;\n      }\n\n      const {\n        error: partner\n      } = await supabase.from('partners').insert([{\n        dni: datosTitular.dni,\n        name: datosTitular.first_name,\n        lastname: datosTitular.last_name,\n        birthdate: datosTitular.birth_date,\n        phone_number: datosTitular.phone_number,\n        titular: true,\n        family_bond: 'titular',\n        family_group: lastId,\n        state: 'revision pendiente',\n        email: datosTitular.email,\n        company_id: idCompany,\n        gender: datosTitular.gender\n      }]);\n      const {\n        error: address\n      } = await supabase.from('address').insert([{\n        street: datosTitular.street_name,\n        street_number: datosTitular.number,\n        floor: datosTitular.floor && datosTitular.floor,\n        medic_id: null,\n        locality_id: datosTitular.locality.split('-')[0],\n        partner_dni: datosTitular.dni,\n        department: datosTitular.apartment && datosTitular.apartment\n      }]);\n      await supabase.from('medical_records').insert([{\n        partner_dni: datosTitular.dni,\n        declaration: JSON.stringify(datosDeclaration)\n      }]);\n      localStorage.removeItem('datosTitular');\n      localStorage.removeItem('datosDeclaration');\n      localStorage.removeItem('datosEmpresa');\n      localStorage.removeItem('errorsTitular');\n      localStorage.removeItem('errorsDeclaration');\n      localStorage.removeItem('errorsEmpresa');\n      setActiveStep(prevActiveStep => prevActiveStep + 1);\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Stepper, {\n      activeStep: activeStep,\n      alternativeLabel: true,\n      children: steps.map(label => /*#__PURE__*/_jsxDEV(Step, {\n        children: /*#__PURE__*/_jsxDEV(StepLabel, {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }, this)\n      }, label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: activeStep === steps.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.cartel,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"../../assets/icons/medicrecordd.png\",\n            alt: \"medicRecord\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.text,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: style.title,\n              children: \"Su Registro esta Completo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: style.subtitle,\n              children: \"Muchas gracias por su tiempo.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        classname: style.btn,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.instructions,\n          children: getStepContent(activeStep)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            disabled: activeStep === 0,\n            onClick: handleBack,\n            className: classes.backButton,\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.popupBtn,\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleNext,\n            children: activeStep === 3 ? 'Finish' : 'Next'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RegStepper, \"5/ANSN4aidVPv0P4apAyeUUfwXQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = RegStepper;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegStepper\");","map":{"version":3,"sources":["/home/alan/Escritorio/Integra/IntegraApp/src/components/Guest/RegStepForm/RegStepper.jsx"],"names":["React","useState","makeStyles","Stepper","Step","StepLabel","Button","Typography","DatosTitular","DatosEmpresa","DatosRevision","supabase","style","swal","Declaration","useStyles","theme","root","width","backButton","marginRight","spacing","marginLeft","color","border","borderRadius","backgroundColor","fontWeight","fontSize","instructions","marginTop","marginBottom","popupBtn","getSteps","getStepContent","stepIndex","RegStepper","classes","activeStep","setActiveStep","steps","alltrue","obj","completeError","error","Object","values","handleNext","toString","errorsTitular","JSON","parse","localStorage","getItem","prevActiveStep","errorsEmpresa","datosDeclaration","accept","length","datosTitular","datosEmpresa","data","idPartners","from","select","lastId","sort","a","b","family_group","shift","idCompany","companyData","eq","company_cuit","console","log","newId","errorInsertCompany","insert","business_name","bussines_name","cuit","phone_number","company_phone","email","company_email","id","partner","dni","name","first_name","lastname","last_name","birthdate","birth_date","titular","family_bond","state","company_id","gender","address","street","street_name","street_number","number","floor","medic_id","locality_id","locality","split","partner_dni","department","apartment","declaration","stringify","removeItem","handleBack","map","label","cartel","text","title","subtitle","btn"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport DatosTitular from './DatosTitular';\nimport DatosEmpresa from './DatosEmpresa';\nimport DatosRevision from './DatosRevision';\nimport supabase from '../../../supabase.config';\nimport style from './RegStepper.module.css';\nimport swal from 'sweetalert2';\nimport Declaration from './Declaration';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    backButton: {\n        marginRight: theme.spacing(1),\n        marginLeft: theme.spacing(5),\n        color: '#fafafa',\n        width: 'fit-content',\n        border: '3px solid #2c7f7b',\n        borderRadius: '5px',\n        backgroundColor: '#2c7f7b',\n        fontWeight: 'bold',\n        fontSize: '15px',\n        '&:hover': {\n            backgroundColor: '#fafafa',\n            color: '#2c7f7b',\n        },\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    popupBtn: {\n        color: '#fafafa',\n        width: 'fit-content',\n        marginLeft: '40px',\n        border: '3px solid #2c7f7b',\n        borderRadius: '5px',\n        backgroundColor: '#2c7f7b',\n        fontWeight: 'bold',\n        fontSize: '15px',\n        '&:hover': {\n            backgroundColor: '#fafafa',\n            color: '#2c7f7b',\n        },\n    },\n}));\n\nfunction getSteps() {\n    return [\n        'Datos del Titular',\n        'Datos de la Empresa',\n        'Antecedentes de Salud',\n        'Resumen',\n    ];\n}\n\nfunction getStepContent(stepIndex) {\n    switch (stepIndex) {\n        case 0:\n            return <DatosTitular />;\n        case 1:\n            return <DatosEmpresa />;\n        case 2:\n            return <Declaration />;\n        case 3:\n            return <DatosRevision />;\n        default:\n            return 'Unknown stepIndex';\n    }\n}\n\nexport default function RegStepper() {\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = useState(0);\n    const steps = getSteps();\n\n    const alltrue = (obj) => {\n        let completeError = true;\n        for (let error in obj) {\n            completeError =\n                completeError &&\n                typeof Object.values(obj[error])[0] !== 'string';\n        }\n        return completeError;\n    };\n\n    const handleNext = async () => {\n        switch (activeStep.toString()) {\n            case '0':\n                const errorsTitular = JSON.parse(\n                    localStorage.getItem('errorsTitular')\n                );\n                if (errorsTitular) {\n                    alltrue(errorsTitular)\n                        ? setActiveStep((prevActiveStep) => prevActiveStep + 1)\n                        : new swal('Ups!', 'Debes completar todos los campos');\n                } else new swal('Ups!', 'Por favor complete el formulario.');\n                break;\n            case '1':\n                const errorsEmpresa = JSON.parse(\n                    localStorage.getItem('errorsEmpresa')\n                );\n                if (errorsEmpresa) {\n                    alltrue(errorsEmpresa)\n                        ? setActiveStep((prevActiveStep) => prevActiveStep + 1)\n                        : new swal('Ups!', 'Debes completar todos los campos');\n                } else\n                    new swal('Error', 'Complete el formulario para continuar');\n                break;\n            case '2':\n                const datosDeclaration = JSON.parse(\n                    localStorage.getItem('datosDeclaration')\n                );\n                if (datosDeclaration) {\n                    if (datosDeclaration.accept)\n                        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n                    else new swal('Ups!', 'Debe aceptar la declaracion Jurada');\n                } else new swal('Ups!', 'No se registraron datos');\n                break;\n\n            default:\n                break;\n        }\n\n        if (activeStep === steps.length - 1) {\n            const datosTitular = JSON.parse(\n                localStorage.getItem('datosTitular')\n            );\n            const datosEmpresa = JSON.parse(\n                localStorage.getItem('datosEmpresa')\n            );\n            const datosDeclaration = JSON.parse(\n                localStorage.getItem('datosDeclaration')\n            );\n\n            const { data: idPartners } = await supabase\n                .from('partners')\n                .select('family_group');\n\n            const lastId =\n                idPartners\n                    .sort(function (a, b) {\n                        if (a.family_group < b.family_group) {\n                            return 1;\n                        }\n                        if (a.family_group > b.family_group) {\n                            return -1;\n                        }\n                        return 0;\n                    })\n                    .shift().family_group + 1;\n\n            let idCompany = null;\n\n            const { data: companyData } = await supabase\n                .from('companies')\n                .select('id')\n                .eq('cuit', datosEmpresa.company_cuit);\n            console.log(companyData, 'companyData');\n\n            if (companyData.length === 0) {\n                const { data: newId, error: errorInsertCompany } =\n                    await supabase.from('companies').insert([\n                        {\n                            business_name: datosEmpresa.bussines_name,\n                            cuit: datosEmpresa.company_cuit,\n                            phone_number: datosEmpresa.company_phone,\n                            email: datosEmpresa.company_email,\n                        },\n                    ]);\n                console.log(errorInsertCompany, 'errorInsertCompany');\n                console.log(newId, 'newId');\n\n                idCompany = newId[0].id;\n            } else {\n                idCompany = companyData[0].id;\n            }\n\n            const { error: partner } = await supabase.from('partners').insert([\n                {\n                    dni: datosTitular.dni,\n                    name: datosTitular.first_name,\n                    lastname: datosTitular.last_name,\n                    birthdate: datosTitular.birth_date,\n                    phone_number: datosTitular.phone_number,\n                    titular: true,\n                    family_bond: 'titular',\n                    family_group: lastId,\n                    state: 'revision pendiente',\n                    email: datosTitular.email,\n                    company_id: idCompany,\n                    gender: datosTitular.gender,\n                },\n            ]);\n\n            const { error: address } = await supabase.from('address').insert([\n                {\n                    street: datosTitular.street_name,\n                    street_number: datosTitular.number,\n                    floor: datosTitular.floor && datosTitular.floor,\n                    medic_id: null,\n                    locality_id: datosTitular.locality.split('-')[0],\n                    partner_dni: datosTitular.dni,\n                    department:\n                        datosTitular.apartment && datosTitular.apartment,\n                },\n            ]);\n\n            await supabase.from('medical_records').insert([\n                {\n                    partner_dni: datosTitular.dni,\n                    declaration: JSON.stringify(datosDeclaration),\n                },\n            ]);\n            localStorage.removeItem('datosTitular');\n            localStorage.removeItem('datosDeclaration');\n            localStorage.removeItem('datosEmpresa');\n            localStorage.removeItem('errorsTitular');\n            localStorage.removeItem('errorsDeclaration');\n            localStorage.removeItem('errorsEmpresa');\n\n            setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        }\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    return (\n        <div className={classes.root}>\n            <Stepper activeStep={activeStep} alternativeLabel >\n                {steps.map((label) => (\n                    <Step key={label}>\n                        <StepLabel>{label}</StepLabel>\n                    </Step>\n                ))}\n            </Stepper>\n            <div>\n                {activeStep === steps.length ? (\n                    <div>\n                        <div className={style.cartel}>\n                            <img\n                                src='../../assets/icons/medicrecordd.png'\n                                alt='medicRecord'\n                            />\n\n                            <div className={style.text}>\n                                <h3 className={style.title}>\n                                    Su Registro esta Completo\n                                </h3>\n\n                                <h4 className={style.subtitle}>\n                                    Muchas gracias por su tiempo.\n                                </h4>\n                            </div>\n                        </div>\n                    </div>\n                ) : (\n                    <div classname={style.btn}>\n                        <Typography className={classes.instructions}>\n                            {getStepContent(activeStep)}\n                        </Typography>\n                        <div >\n                            <Button\n                                disabled={activeStep === 0}\n                                onClick={handleBack}\n                                className={classes.backButton}\n                            >\n                                Back\n                            </Button>\n                            <Button\n                                className={classes.popupBtn}\n                                variant='contained'\n                                color='primary'\n                                onClick={handleNext}\n                            >\n                                {activeStep === 3 ? 'Finish' : 'Next'}\n                            </Button>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}