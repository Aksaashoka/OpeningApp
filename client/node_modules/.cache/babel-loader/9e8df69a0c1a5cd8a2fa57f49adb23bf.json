{"ast":null,"code":"import { GET_PLANS_BENEFITS, GET_BENEFITS, GET_AFFILIATES, GET_STATES, GET_LOCALITIES, GET_REF_CONTACT } from './constants.actions';\nimport supabase from '../supabase.config';\n\nfunction getPlans() {\n  return async dispatch => {\n    try {\n      const {\n        data: plans\n      } = await supabase.from('plans').select('id, name, price, active, benefits (title, description)');\n      dispatch({\n        type: GET_PLANS_BENEFITS,\n        payload: plans\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n}\n\nfunction getBenefits() {\n  return async dispatch => {\n    try {\n      const {\n        data: benefits\n      } = await supabase.from('benefits').select('title, id, description');\n      dispatch({\n        type: GET_BENEFITS,\n        payload: benefits\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n}\n\nfunction getAffiliates() {\n  return async dispatch => {\n    try {\n      const {\n        data: user,\n        error: errorFetchUserData\n      } = await supabase.from('partners').select('*, plans (id, name)');\n      if (errorFetchUserData) return console.log(errorFetchUserData);\n      dispatch({\n        type: GET_AFFILIATES,\n        payload: user\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n}\n\nfunction getStates() {\n  return async dispatch => {\n    try {\n      const {\n        data: states\n      } = await supabase.from('states').select('id,name');\n      dispatch({\n        type: GET_STATES,\n        payload: states\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n}\n\nfunction getLocalities(idState) {\n  return async dispatch => {\n    if (!idState) {\n      try {\n        const {\n          data: localities\n        } = await supabase.from('localities').select('*');\n        dispatch({\n          type: GET_LOCALITIES,\n          payload: localities\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  };\n}\n\nfunction getRefFromContact(payload) {\n  return {\n    type: GET_REF_CONTACT,\n    payload\n  };\n}\n\nexport { getPlans, getBenefits, getAffiliates, getStates, getLocalities, getRefFromContact };","map":{"version":3,"sources":["/home/alan/Escritorio/Integra/IntegraApp/src/actions/getter.action.js"],"names":["GET_PLANS_BENEFITS","GET_BENEFITS","GET_AFFILIATES","GET_STATES","GET_LOCALITIES","GET_REF_CONTACT","supabase","getPlans","dispatch","data","plans","from","select","type","payload","err","console","log","getBenefits","benefits","getAffiliates","user","error","errorFetchUserData","getStates","states","getLocalities","idState","localities","getRefFromContact"],"mappings":"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","sourcesContent":["import {\n    GET_PLANS_BENEFITS,\n    GET_BENEFITS,\n    GET_AFFILIATES,\n    GET_STATES,\n    GET_LOCALITIES,\n    GET_REF_CONTACT,\n} from './constants.actions';\nimport supabase from '../supabase.config';\n\nfunction getPlans() {\n    return async (dispatch) => {\n        try {\n            const { data: plans } = await supabase\n                .from('plans')\n                .select(\n                    'id, name, price, active, benefits (title, description)'\n                );\n            dispatch({ type: GET_PLANS_BENEFITS, payload: plans });\n        } catch (err) {\n            console.log(err);\n        }\n    };\n}\n\nfunction getBenefits() {\n    return async (dispatch) => {\n        try {\n            const { data: benefits } = await supabase\n                .from('benefits')\n                .select('title, id, description');\n            dispatch({ type: GET_BENEFITS, payload: benefits });\n        } catch (err) {\n            console.log(err);\n        }\n    };\n}\n\nfunction getAffiliates() {\n    return async (dispatch) => {\n        try {\n            const { data: user, error: errorFetchUserData } = await supabase\n                .from('partners')\n                .select('*, plans (id, name)');\n            if (errorFetchUserData) return console.log(errorFetchUserData);\n            dispatch({ type: GET_AFFILIATES, payload: user });\n        } catch (err) {\n            console.log(err);\n        }\n    };\n}\nfunction getStates() {\n    return async (dispatch) => {\n        try {\n            const { data: states } = await supabase\n                .from('states')\n                .select('id,name');\n            dispatch({ type: GET_STATES, payload: states });\n        } catch (err) {\n            console.error(err);\n        }\n    };\n}\n\nfunction getLocalities(idState) {\n    return async (dispatch) => {\n        if (!idState) {\n            try {\n                const { data: localities } = await supabase\n                    .from('localities')\n                    .select('*');\n                dispatch({ type: GET_LOCALITIES, payload: localities });\n            } catch (err) {\n                console.error(err);\n            }\n        }\n    };\n}\n\nfunction getRefFromContact(payload) {\n    return {\n        type: GET_REF_CONTACT,\n        payload,\n    };\n}\nexport {\n    getPlans,\n    getBenefits,\n    getAffiliates,\n    getStates,\n    getLocalities,\n    getRefFromContact,\n};\n"]},"metadata":{},"sourceType":"module"}