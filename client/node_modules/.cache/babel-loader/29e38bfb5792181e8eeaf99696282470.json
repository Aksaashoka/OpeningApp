{"ast":null,"code":"var _jsxFileName = \"/home/alan/Escritorio/Integra/IntegraApp/src/components/Admin/AdminsUsers/TableUsers.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport BlockIcon from '@material-ui/icons/Block';\nimport ClearAllIcon from '@material-ui/icons/ClearAll';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport blue from '@material-ui/core/colors/blue';\nimport Swal from 'sweetalert2';\nimport supabase from '../../../supabase.config.js';\nimport { getAllUsers } from '../../../actions/users.action.js';\nimport { Button, Dialog, DialogTitle, DialogContent, FormControl, Select, DialogActions, TextField } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n\n  if (array.length > 1) {\n    stabilizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n      if (order !== 0) return order;\n      return a[1] - b[1];\n    });\n  }\n\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [{\n  id: 'dni',\n  numeric: false,\n  disablePadding: true,\n  label: 'DNI'\n}, {\n  id: 'email',\n  numeric: false,\n  disablePadding: false,\n  label: 'EMAIL'\n}, {\n  id: 'role',\n  numeric: false,\n  disablePadding: false,\n  label: 'TIPO'\n}, {\n  id: 'account',\n  numeric: false,\n  disablePadding: false,\n  label: 'CUENTA'\n}];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableHead, {\n    className: classes.title,\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        padding: \"checkbox\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          defaultChecked: true,\n          color: \"primary\",\n          indeterminate: numSelected > 0 && numSelected < rowCount,\n          checked: rowCount > 0 && numSelected === rowCount,\n          onChange: onSelectAllClick,\n          inputProps: {\n            'aria-label': 'select all desserts'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), headCells.map((headCell, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n        align: headCell.numeric ? 'right' : 'left',\n        padding: 'default',\n        sortDirection: orderBy === headCell.id ? order : false,\n        children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n          className: classes.title,\n          active: orderBy === headCell.id,\n          direction: orderBy === headCell.id ? order : 'asc',\n          onClick: createSortHandler(headCell.id),\n          children: [headCell.label, orderBy === headCell.id ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.visuallyHidden,\n            children: order === 'desc' ? 'sorted descending' : 'sorted ascending'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 33\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this)\n      }, headCell.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n\n_c = EnhancedTableHead;\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n}; //------------------------EnhancedTableToolbar Style ---------------------------------------------------------------------------------------\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n    backgroundColor: lighten('#34a7a1', 0.3)\n  },\n  highlight: theme.palette.type === 'light' ? {\n    color: '#fafafa',\n    backgroundColor: lighten(blue[500], 0.5),\n    //color barra superior cuando selecciono item\n    fontWeight: 'bold',\n    fontSize: '30px'\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: lighten('#34a7a1', 0.3)\n  },\n  title: {\n    flex: '1 1 100%',\n    fontWeight: 'bold',\n    fontSize: '1.4rem',\n    color: '#fafafa',\n    textAlign: 'center'\n  },\n  filters: {\n    display: 'flex'\n  },\n  iconFilter: {\n    color: '#fafafa',\n    fontWeight: 'bold',\n    '&:hover': {\n      backgroundColor: '#34a7a1'\n    }\n  },\n  iconBlock: {\n    color: '#fafafa',\n    fontWeight: 'bold',\n    '&:hover': {\n      backgroundColor: blue[500]\n    }\n  },\n  popup: {\n    color: '#fafafa',\n    backgroundColor: '#2c7f7b',\n    fontWeight: 'bold',\n    fontSize: '30px'\n  },\n  popupBtn: {\n    color: '#fafafa',\n    padding: theme.spacing(0.5),\n    border: '3px solid #2c7f7b',\n    backgroundColor: '#2c7f7b',\n    fontWeight: 'bold',\n    fontSize: '15px',\n    '&:hover': {\n      backgroundColor: lighten('#fafafa', 0.2),\n      color: '#2c7f7b',\n      padding: theme.spacing(0.5)\n    }\n  }\n}));\n\nconst EnhancedTableToolbar = props => {\n  _s();\n\n  const classes = useToolbarStyles();\n  const {\n    numSelected,\n    handleBlock,\n    list,\n    sendFilter\n  } = props;\n  const [open, setOpen] = React.useState(false);\n  const [input, setInput] = React.useState('');\n  const [optionSelected, setOptionSelected] = React.useState(''); //que opcion elige de filtrado\n\n  const [selectedAccount, setSelectedAccount] = React.useState('');\n  const [selectedRole, setSelectedRole] = React.useState('');\n  const [listFilter, setListFilter] = React.useState([]);\n\n  const handleClickOpen = () => {\n    sendFilter('reset');\n    setOpen(true);\n    setListFilter(list);\n  };\n\n  const hanldeReset = () => {\n    sendFilter('reset');\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChangeType = e => {\n    switch (e.target.value) {\n      case 'dni':\n        setOptionSelected('dni');\n        setInput('');\n        break;\n\n      case 'email':\n        setOptionSelected('email');\n        setInput('');\n        break;\n\n      case 'role':\n        setOptionSelected('role');\n        setSelectedRole('');\n        break;\n\n      case 'account':\n        setOptionSelected('account');\n        setSelectedAccount('');\n        break;\n\n      default:\n        setOptionSelected('');\n    }\n  };\n\n  const handleChangeRole = e => {\n    setSelectedRole(e.target.value);\n  };\n\n  const handleChangeAccount = e => {\n    setSelectedAccount(e.target.value);\n  };\n\n  const handleInput = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (optionSelected === 'dni' || optionSelected === 'email') filter(optionSelected, input);else if (optionSelected === 'role') filter(optionSelected, selectedRole);else filter(optionSelected, selectedAccount);\n  };\n\n  const filter = (option, value) => {\n    if (!value) {\n      alert('Debe completar el campo de texto.');\n    } else {\n      let res = [];\n      let wanted;\n\n      switch (option) {\n        case 'dni':\n          //eslint-disable-next-line\n          wanted = listFilter.find(user => user.dni == value);\n\n          if (wanted) {\n            res.push(wanted);\n            sendFilter(res);\n            setInput('');\n            setOpen(false);\n            setOptionSelected('');\n          } else alert(`no existe`);\n\n          break;\n\n        case 'email':\n          //eslint-disable-next-line\n          wanted = listFilter.find(user => user.email == value);\n\n          if (wanted) {\n            res.push(wanted);\n            sendFilter(res);\n            setInput('');\n            setOpen(false);\n            setOptionSelected('');\n          } else alert(`no existe`);\n\n          break;\n\n        case 'role':\n          //eslint-disable-next-line\n          res = listFilter.filter(user => user.role == value);\n          if (res.length > 0) sendFilter(res);else {\n            sendFilter('reset');\n            alert(`no se encontraron resultados`);\n          }\n          setSelectedRole('');\n          setOptionSelected('');\n          setOpen(false);\n          break;\n\n        default:\n          //eslint-disable-next-line\n          res = listFilter.filter(user => user.account == value);\n          res.length > 0 ? sendFilter(res) : alert(`no se encontraron resultados`);\n          setSelectedRole('');\n          setOptionSelected('');\n          setOpen(false);\n          break;\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Toolbar, {\n    className: clsx(classes.root, {\n      [classes.highlight]: numSelected > 0\n    }),\n    children: [numSelected > 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.title,\n      color: \"inherit\",\n      variant: \"subtitle1\",\n      component: \"div\",\n      children: [numSelected, \" selected\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.title,\n      variant: \"h6\",\n      id: \"tableTitle\",\n      component: \"div\",\n      children: \"USUARIOS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 17\n    }, this), numSelected > 0 ? /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Activar/Desactivar Usuarios\",\n      onClick: handleBlock,\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"Edit\",\n        className: classes.iconBlock,\n        children: /*#__PURE__*/_jsxDEV(BlockIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.filters,\n        children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Filtro\",\n          onClick: handleClickOpen,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"filter list\",\n            className: classes.iconFilter,\n            children: /*#__PURE__*/_jsxDEV(FilterListIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Borrar Filtro\",\n          onClick: hanldeReset,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"reset\",\n            className: classes.iconFilter,\n            children: /*#__PURE__*/_jsxDEV(ClearAllIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        disableBackdropClick: true,\n        disableEscapeKeyDown: true,\n        open: open,\n        onClose: handleClose,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          className: classes.popup,\n          children: \"FILTRADO POR:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                inputProps: {\n                  style: {\n                    width: '177px'\n                  },\n                  id: 'outlined-age-native-simple',\n                  name: 'Filter'\n                },\n                variant: \"outlined\",\n                native: true,\n                value: optionSelected,\n                onChange: e => handleChangeType(e),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  \"aria-label\": \"None\",\n                  value: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"dni\",\n                  children: \"DNI\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"email\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"role\",\n                  children: \"Role\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"account\",\n                  children: \"Account\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 33\n            }, this), optionSelected === 'dni' || optionSelected === 'email' ? /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-basic\",\n              label: optionSelected.toUpperCase(),\n              variant: \"outlined\",\n              value: input,\n              onChange: e => handleInput(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 37\n            }, this) : optionSelected === 'role' ? /*#__PURE__*/_jsxDEV(FormControl, {\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                inputProps: {\n                  style: {\n                    width: '177px'\n                  }\n                },\n                native: true,\n                value: selectedRole,\n                onChange: e => handleChangeRole(e),\n                variant: \"outlined\",\n                size: \"small\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  \"aria-label\": \"None\",\n                  value: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 437,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"admin\",\n                  children: \"Admin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"affiliate\",\n                  children: \"Afilliate\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 442,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"medic\",\n                  children: \"Medic\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 37\n            }, this) : optionSelected === 'account' ? /*#__PURE__*/_jsxDEV(FormControl, {\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                inputProps: {\n                  style: {\n                    width: '177px'\n                  }\n                },\n                native: true,\n                value: selectedAccount,\n                onChange: e => handleChangeAccount(e),\n                variant: \"outlined\",\n                size: \"small\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  \"aria-label\": \"None\",\n                  value: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"active\",\n                  children: \"Active\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"inactive\",\n                  children: \"Inactive\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 37\n            }, this) : optionSelected === '' ? null : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClose,\n              className: classes.popupBtn,\n              children: \"Cancelar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              className: classes.popupBtn,\n              children: \"Filtrar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 329,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EnhancedTableToolbar, \"JeSxPuFM5L4G9xVDeUXeGo/XZ9Y=\", false, function () {\n  return [useToolbarStyles];\n});\n\n_c2 = EnhancedTableToolbar;\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n}; //-------------------- Style Table Users\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  },\n  title: {\n    color: '#212121',\n    fontWeight: 'bold',\n    backgroundColor: lighten('#34a7a1', 0.6)\n  },\n  rowColor: {\n    backgroundColor: lighten('#e0e0e0', 0.3),\n    ':checked': {\n      color: blue[500]\n    }\n  }\n}));\nexport default function TableUsers({\n  rows,\n  handleFilter,\n  allUsers\n}) {\n  _s2();\n\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('account');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const dispatch = useDispatch();\n\n  const sendFilter = filterRows => {\n    handleFilter(filterRows);\n  };\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.dni);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (event, dni) => {\n    const selectedIndex = selected.indexOf(Number(dni));\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, dni);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleBlock = async () => {\n    await Swal.fire({\n      title: 'Select field validation',\n      input: 'select',\n      inputOptions: {\n        Active: 'Active',\n        Inactive: 'Inactive'\n      },\n      inputPlaceholder: 'Select an action',\n      showCancelButton: true,\n      inputValidator: async res => {\n        if (res) {\n          for (let i = 0; i < selected.length; i++) {\n            //actualizo base\n            await supabase.from('users').update({\n              account: res.toLocaleLowerCase()\n            }).eq('dni', selected[i]); //actualizo desde firebase\n          } //actualizar la pagina y desactivar los check\n\n\n          dispatch(getAllUsers());\n          Swal.fire({\n            title: `Success!`,\n            text: `La accion ${res.toUpperCase()} se completo de forma exitosa.`,\n            icon: 'success',\n            confirmButtonText: 'OK'\n          });\n        } else {\n          console.log('res no existe');\n        }\n      }\n    });\n  }; // const { value: filter } = await Swal.fire({\n  //   title: 'Select field validation',\n  //   input: 'select',\n  //   backdrop:true,\n  //   inputOptions: {\n  //       Active: 'Active',\n  //       Inactive: 'Inactive',\n  //       Dni:'Dni',\n  //       Email:'Email',\n  //       Role:'Role'\n  //   },\n  //   inputPlaceholder: 'Select an action',\n  //   showCancelButton: true,\n  //   inputValidator: (filter) => {\n  //     return new Promise((resolve) => {\n  //       resolve(filter);\n  //     })\n  //     .then((value) =>{\n  //       if (value=== 'Dni' || value === 'Email' || value === 'Role') {\n  //         console.log('agregar text', value)\n  //       } else {\n  //         //filtrar\n  //         console.log('hacer filtro')\n  //       }\n  //     })\n  // }\n  // })\n  // if (filter=== 'Dni' || filter === 'Email' || filter === 'Role') {\n  //   resolve()\n  // } else {\n  //   console.log('filtrar por tipo')\n  // }\n  // console.log('filter',filter)\n  // debugger;\n  //   if(filter=== 'Dni' || filter === 'Email' || filter === 'Role'){\n  //     const { value: type } = await Swal.fire({\n  //       input: `${type}`,\n  //       inputLabel: `Selected ${type}`,\n  //       inputPlaceholder: `Enter the ${type}`\n  //     })\n  //       Swal.fire(`anda el if`)\n  //   }else{\n  //     Swal.fire(`anda el else`)\n  //   }\n\n\n  const isSelected = dni => selected.indexOf(dni) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(EnhancedTableToolbar, {\n        numSelected: selected.length,\n        handleBlock: handleBlock,\n        list: allUsers,\n        sendFilter: sendFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: classes.table,\n          \"aria-labelledby\": \"tableTitle\",\n          size: \"small\",\n          \"aria-label\": \"enhanced table\",\n          children: [/*#__PURE__*/_jsxDEV(EnhancedTableHead, {\n            classes: classes,\n            numSelected: selected.length,\n            order: order,\n            orderBy: orderBy,\n            onSelectAllClick: handleSelectAllClick,\n            onRequestSort: handleRequestSort,\n            rowCount: rows.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n              const isItemSelected = isSelected(row.dni);\n              const labelId = `enhanced-table-checkbox-${index}`;\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                onClick: event => handleClick(event, row.dni),\n                role: \"checkbox\",\n                \"aria-checked\": isItemSelected,\n                tabIndex: -1,\n                selected: isItemSelected,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  padding: \"checkbox\",\n                  className: index % 2 === 1 ? classes.rowColor : null,\n                  children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    defaultChecked: true,\n                    color: \"primary\",\n                    className: classes.rowColor,\n                    checked: isItemSelected,\n                    inputProps: {\n                      'aria-labelledby': labelId\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 737,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 729,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  className: index % 2 === 1 ? classes.rowColor : null,\n                  children: row.dni\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 748,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  className: index % 2 === 1 ? classes.rowColor : null,\n                  children: row.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 758,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  className: index % 2 === 1 ? classes.rowColor : null,\n                  children: row.role\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 768,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  className: index % 2 === 1 ? classes.rowColor : null,\n                  children: row.account\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 778,\n                  columnNumber: 45\n                }, this)]\n              }, row.dni, true, {\n                fileName: _jsxFileName,\n                lineNumber: 718,\n                columnNumber: 41\n              }, this);\n            }), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n              style: {\n                height: 33 * emptyRows\n              },\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 6\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 793,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 792,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 708,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        className: classes.root,\n        rowsPerPageOptions: [5, 10, 25],\n        component: \"div\",\n        count: rows.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onChangePage: handleChangePage,\n        onChangeRowsPerPage: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 799,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 685,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 684,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(TableUsers, \"zx0jOQWfrnZwH6hBSTouPRkuQ2Y=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c3 = TableUsers;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"EnhancedTableHead\");\n$RefreshReg$(_c2, \"EnhancedTableToolbar\");\n$RefreshReg$(_c3, \"TableUsers\");","map":{"version":3,"sources":["/home/alan/Escritorio/Integra/IntegraApp/src/components/Admin/AdminsUsers/TableUsers.jsx"],"names":["React","useDispatch","PropTypes","clsx","lighten","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Tooltip","Typography","Paper","Checkbox","IconButton","BlockIcon","ClearAllIcon","FilterListIcon","blue","Swal","supabase","getAllUsers","Button","Dialog","DialogTitle","DialogContent","FormControl","Select","DialogActions","TextField","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","length","sort","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","classes","onSelectAllClick","numSelected","rowCount","onRequestSort","createSortHandler","property","event","title","headCell","visuallyHidden","propTypes","object","isRequired","number","func","oneOf","string","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","backgroundColor","highlight","palette","type","color","fontWeight","fontSize","text","primary","flex","textAlign","filters","display","iconFilter","iconBlock","popup","popupBtn","padding","border","EnhancedTableToolbar","handleBlock","list","sendFilter","open","setOpen","useState","input","setInput","optionSelected","setOptionSelected","selectedAccount","setSelectedAccount","selectedRole","setSelectedRole","listFilter","setListFilter","handleClickOpen","hanldeReset","handleClose","handleChangeType","e","target","value","handleChangeRole","handleChangeAccount","handleInput","handleSubmit","preventDefault","filter","option","alert","res","wanted","find","user","dni","push","email","role","account","style","width","name","toUpperCase","useStyles","paper","marginBottom","table","minWidth","clip","height","margin","overflow","position","top","rowColor","TableUsers","rows","handleFilter","allUsers","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","dispatch","filterRows","handleRequestSort","isAsc","handleSelectAllClick","checked","newSelecteds","n","handleClick","selectedIndex","indexOf","Number","newSelected","concat","slice","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","fire","inputOptions","Active","Inactive","inputPlaceholder","showCancelButton","inputValidator","i","from","update","toLocaleLowerCase","eq","icon","confirmButtonText","console","log","isSelected","emptyRows","Math","min","row","isItemSelected","labelId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport BlockIcon from '@material-ui/icons/Block';\nimport ClearAllIcon from '@material-ui/icons/ClearAll';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport blue from '@material-ui/core/colors/blue';\nimport Swal from 'sweetalert2';\nimport supabase from '../../../supabase.config.js';\nimport { getAllUsers } from '../../../actions/users.action.js';\nimport {\n    Button,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    FormControl,\n    Select,\n    DialogActions,\n    TextField,\n} from '@material-ui/core';\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    if (array.length > 1) {\n        stabilizedThis.sort((a, b) => {\n            const order = comparator(a[0], b[0]);\n            if (order !== 0) return order;\n            return a[1] - b[1];\n        });\n    }\n\n    return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n    { id: 'dni', numeric: false, disablePadding: true, label: 'DNI' },\n    { id: 'email', numeric: false, disablePadding: false, label: 'EMAIL' },\n    { id: 'role', numeric: false, disablePadding: false, label: 'TIPO' },\n    { id: 'account', numeric: false, disablePadding: false, label: 'CUENTA' },\n];\n\nfunction EnhancedTableHead(props) {\n    const {\n        classes,\n        onSelectAllClick,\n        order,\n        orderBy,\n        numSelected,\n        rowCount,\n        onRequestSort,\n    } = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead className={classes.title}>\n            <TableRow>\n                <TableCell padding='checkbox'>\n                    <Checkbox\n                        defaultChecked\n                        color='primary'\n                        indeterminate={\n                            numSelected > 0 && numSelected < rowCount\n                        }\n                        checked={rowCount > 0 && numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{ 'aria-label': 'select all desserts' }}\n                    />\n                </TableCell>\n                {headCells.map((headCell, index) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? 'right' : 'left'}\n                        padding={'default'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            className={classes.title}\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                                    {order === 'desc'\n                                        ? 'sorted descending'\n                                        : 'sorted ascending'}\n                                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n};\n//------------------------EnhancedTableToolbar Style ---------------------------------------------------------------------------------------\nconst useToolbarStyles = makeStyles((theme) => ({\n    root: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n        backgroundColor: lighten('#34a7a1', 0.3),\n    },\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                  color: '#fafafa',\n                  backgroundColor: lighten(blue[500], 0.5), //color barra superior cuando selecciono item\n                  fontWeight: 'bold',\n                  fontSize: '30px',\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: lighten('#34a7a1', 0.3),\n              },\n    title: {\n        flex: '1 1 100%',\n        fontWeight: 'bold',\n        fontSize: '1.4rem',\n        color: '#fafafa',\n        textAlign: 'center',\n    },\n    filters: {\n        display: 'flex',\n    },\n    iconFilter: {\n        color: '#fafafa',\n        fontWeight: 'bold',\n        '&:hover': {\n            backgroundColor: '#34a7a1',\n        },\n    },\n    iconBlock: {\n        color: '#fafafa',\n        fontWeight: 'bold',\n        '&:hover': {\n            backgroundColor: blue[500],\n        },\n    },\n    popup: {\n        color: '#fafafa',\n        backgroundColor: '#2c7f7b',\n        fontWeight: 'bold',\n        fontSize: '30px',\n    },\n\n    popupBtn: {\n        color: '#fafafa',\n        padding: theme.spacing(0.5),\n        border: '3px solid #2c7f7b',\n        backgroundColor: '#2c7f7b',\n        fontWeight: 'bold',\n        fontSize: '15px',\n        '&:hover': {\n            backgroundColor: lighten('#fafafa', 0.2),\n            color: '#2c7f7b',\n            padding: theme.spacing(0.5),\n        },\n    },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n    const classes = useToolbarStyles();\n    const { numSelected, handleBlock, list, sendFilter } = props;\n    const [open, setOpen] = React.useState(false);\n    const [input, setInput] = React.useState('');\n    const [optionSelected, setOptionSelected] = React.useState(''); //que opcion elige de filtrado\n    const [selectedAccount, setSelectedAccount] = React.useState('');\n    const [selectedRole, setSelectedRole] = React.useState('');\n    const [listFilter, setListFilter] = React.useState([]);\n\n    const handleClickOpen = () => {\n        sendFilter('reset');\n        setOpen(true);\n        setListFilter(list);\n    };\n    const hanldeReset = () => {\n        sendFilter('reset');\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleChangeType = (e) => {\n        switch (e.target.value) {\n            case 'dni':\n                setOptionSelected('dni');\n                setInput('');\n                break;\n            case 'email':\n                setOptionSelected('email');\n                setInput('');\n                break;\n            case 'role':\n                setOptionSelected('role');\n                setSelectedRole('');\n                break;\n            case 'account':\n                setOptionSelected('account');\n                setSelectedAccount('');\n                break;\n            default:\n                setOptionSelected('');\n        }\n    };\n\n    const handleChangeRole = (e) => {\n        setSelectedRole(e.target.value);\n    };\n\n    const handleChangeAccount = (e) => {\n        setSelectedAccount(e.target.value);\n    };\n\n    const handleInput = (e) => {\n        setInput(e.target.value);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (optionSelected === 'dni' || optionSelected === 'email')\n            filter(optionSelected, input);\n        else if (optionSelected === 'role')\n            filter(optionSelected, selectedRole);\n        else filter(optionSelected, selectedAccount);\n    };\n\n    const filter = (option, value) => {\n        if (!value) {\n            alert('Debe completar el campo de texto.');\n        } else {\n            let res = [];\n            let wanted;\n            switch (option) {\n                case 'dni':\n                    //eslint-disable-next-line\n                    wanted = listFilter.find((user) => user.dni == value);\n                    if (wanted) {\n                        res.push(wanted);\n                        sendFilter(res);\n                        setInput('');\n                        setOpen(false);\n                        setOptionSelected('');\n                    } else alert(`no existe`);\n                    break;\n                case 'email':\n                    //eslint-disable-next-line\n                    wanted = listFilter.find((user) => user.email == value);\n                    if (wanted) {\n                        res.push(wanted);\n                        sendFilter(res);\n                        setInput('');\n                        setOpen(false);\n                        setOptionSelected('');\n                    } else alert(`no existe`);\n                    break;\n                case 'role':\n                    //eslint-disable-next-line\n                    res = listFilter.filter((user) => user.role == value);\n\n                    if (res.length > 0) sendFilter(res);\n                    else {\n                        sendFilter('reset');\n                        alert(`no se encontraron resultados`);\n                    }\n                    setSelectedRole('');\n                    setOptionSelected('');\n                    setOpen(false);\n                    break;\n                default:\n                    //eslint-disable-next-line\n                    res = listFilter.filter((user) => user.account == value);\n                    res.length > 0\n                        ? sendFilter(res)\n                        : alert(`no se encontraron resultados`);\n                    setSelectedRole('');\n                    setOptionSelected('');\n                    setOpen(false);\n                    break;\n            }\n        }\n    };\n\n    return (\n        <Toolbar\n            className={clsx(classes.root, {\n                [classes.highlight]: numSelected > 0,\n            })}\n        >\n            {numSelected > 0 ? (\n                <Typography\n                    className={classes.title}\n                    color='inherit'\n                    variant='subtitle1'\n                    component='div'\n                >\n                    {numSelected} selected\n                </Typography>\n            ) : (\n                <Typography\n                    className={classes.title}\n                    variant='h6'\n                    id='tableTitle'\n                    component='div'\n                >\n                    USUARIOS\n                </Typography>\n            )}\n\n            {numSelected > 0 ? (\n                <Tooltip\n                    title='Activar/Desactivar Usuarios'\n                    onClick={handleBlock}\n                >\n                    <IconButton aria-label='Edit' className={classes.iconBlock}>\n                        <BlockIcon />\n                    </IconButton>\n                </Tooltip>\n            ) : (\n                <div>\n                    <div className={classes.filters}>\n                        <Tooltip title='Filtro' onClick={handleClickOpen}>\n                            <IconButton\n                                aria-label='filter list'\n                                className={classes.iconFilter}\n                            >\n                                <FilterListIcon />\n                            </IconButton>\n                        </Tooltip>\n                        <Tooltip title='Borrar Filtro' onClick={hanldeReset}>\n                            <IconButton\n                                aria-label='reset'\n                                className={classes.iconFilter}\n                            >\n                                <ClearAllIcon />\n                            </IconButton>\n                        </Tooltip>\n                    </div>\n                    <Dialog\n                        disableBackdropClick\n                        disableEscapeKeyDown\n                        open={open}\n                        onClose={handleClose}\n                    >\n                        <DialogTitle className={classes.popup}>\n                            FILTRADO POR:\n                        </DialogTitle>\n                        <form onSubmit={handleSubmit}>\n                            <DialogContent>\n                                <FormControl>\n                                    <Select\n                                        inputProps={{\n                                            style: { width: '177px' },\n                                            id: 'outlined-age-native-simple',\n                                            name: 'Filter',\n                                        }}\n                                        variant='outlined'\n                                        native\n                                        value={optionSelected}\n                                        onChange={(e) => handleChangeType(e)}\n                                    >\n                                        <option aria-label='None' value='' />\n                                        <option value='dni'>DNI</option>\n                                        <option value='email'>Email</option>\n                                        <option value='role'>Role</option>\n                                        <option value='account'>Account</option>\n                                    </Select>\n                                </FormControl>\n\n                                {optionSelected === 'dni' ||\n                                optionSelected === 'email' ? (\n                                    <TextField\n                                        id='outlined-basic'\n                                        label={optionSelected.toUpperCase()}\n                                        variant='outlined'\n                                        value={input}\n                                        onChange={(e) => handleInput(e)}\n                                    />\n                                ) : optionSelected === 'role' ? (\n                                    <FormControl>\n                                        <Select\n                                            inputProps={{\n                                                style: { width: '177px' },\n                                            }}\n                                            native\n                                            value={selectedRole}\n                                            onChange={(e) =>\n                                                handleChangeRole(e)\n                                            }\n                                            variant='outlined'\n                                            size='small'\n                                        >\n                                            <option\n                                                aria-label='None'\n                                                value=''\n                                            />\n                                            <option value='admin'>Admin</option>\n                                            <option value='affiliate'>\n                                                Afilliate\n                                            </option>\n                                            <option value='medic'>Medic</option>\n                                        </Select>\n                                    </FormControl>\n                                ) : optionSelected === 'account' ? (\n                                    <FormControl>\n                                        <Select\n                                            inputProps={{\n                                                style: { width: '177px' },\n                                            }}\n                                            native\n                                            value={selectedAccount}\n                                            onChange={(e) =>\n                                                handleChangeAccount(e)\n                                            }\n                                            variant='outlined'\n                                            size='small'\n                                        >\n                                            <option\n                                                aria-label='None'\n                                                value=''\n                                            />\n                                            <option value='active'>\n                                                Active\n                                            </option>\n                                            <option value='inactive'>\n                                                Inactive\n                                            </option>\n                                        </Select>\n                                    </FormControl>\n                                ) : optionSelected === '' ? null : null}\n                            </DialogContent>\n                            <DialogActions>\n                                <Button\n                                    onClick={handleClose}\n                                    className={classes.popupBtn}\n                                >\n                                    Cancelar\n                                </Button>\n                                <Button\n                                    type='submit'\n                                    className={classes.popupBtn}\n                                >\n                                    Filtrar\n                                </Button>\n                            </DialogActions>\n                        </form>\n                    </Dialog>\n                </div>\n            )}\n        </Toolbar>\n    );\n};\n\nEnhancedTableToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired,\n};\n\n//-------------------- Style Table Users\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n    title: {\n        color: '#212121',\n        fontWeight: 'bold',\n        backgroundColor: lighten('#34a7a1', 0.6),\n    },\n\n    rowColor: {\n        backgroundColor: lighten('#e0e0e0', 0.3),\n        ':checked': {\n            color: blue[500],\n        },\n    },\n}));\n\nexport default function TableUsers({ rows, handleFilter, allUsers }) {\n    const classes = useStyles();\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('account');\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n    const dispatch = useDispatch();\n\n    const sendFilter = (filterRows) => {\n        handleFilter(filterRows);\n    };\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = rows.map((n) => n.dni);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, dni) => {\n        const selectedIndex = selected.indexOf(Number(dni));\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, dni);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n        setSelected(newSelected);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const handleBlock = async () => {\n        await Swal.fire({\n            title: 'Select field validation',\n            input: 'select',\n            inputOptions: {\n                Active: 'Active',\n                Inactive: 'Inactive',\n            },\n            inputPlaceholder: 'Select an action',\n            showCancelButton: true,\n            inputValidator: async (res) => {\n                if (res) {\n                    for (let i = 0; i < selected.length; i++) {\n                        //actualizo base\n                        await supabase\n                            .from('users')\n                            .update({ account: res.toLocaleLowerCase() })\n                            .eq('dni', selected[i]);\n                        //actualizo desde firebase\n                    }\n                    //actualizar la pagina y desactivar los check\n                    dispatch(getAllUsers());\n                    Swal.fire({\n                        title: `Success!`,\n                        text: `La accion ${res.toUpperCase()} se completo de forma exitosa.`,\n                        icon: 'success',\n                        confirmButtonText: 'OK',\n                    });\n                } else {\n                    console.log('res no existe');\n                }\n            },\n        });\n    };\n\n    // const { value: filter } = await Swal.fire({\n    //   title: 'Select field validation',\n    //   input: 'select',\n    //   backdrop:true,\n    //   inputOptions: {\n    //       Active: 'Active',\n    //       Inactive: 'Inactive',\n    //       Dni:'Dni',\n    //       Email:'Email',\n    //       Role:'Role'\n    //   },\n    //   inputPlaceholder: 'Select an action',\n    //   showCancelButton: true,\n    //   inputValidator: (filter) => {\n    //     return new Promise((resolve) => {\n    //       resolve(filter);\n    //     })\n    //     .then((value) =>{\n    //       if (value=== 'Dni' || value === 'Email' || value === 'Role') {\n    //         console.log('agregar text', value)\n\n    //       } else {\n    //         //filtrar\n    //         console.log('hacer filtro')\n    //       }\n    //     })\n    // }\n    // })\n    // if (filter=== 'Dni' || filter === 'Email' || filter === 'Role') {\n    //   resolve()\n    // } else {\n    //   console.log('filtrar por tipo')\n    // }\n\n    // console.log('filter',filter)\n    // debugger;\n    //   if(filter=== 'Dni' || filter === 'Email' || filter === 'Role'){\n    //     const { value: type } = await Swal.fire({\n    //       input: `${type}`,\n    //       inputLabel: `Selected ${type}`,\n    //       inputPlaceholder: `Enter the ${type}`\n    //     })\n\n    //       Swal.fire(`anda el if`)\n    //   }else{\n    //     Swal.fire(`anda el else`)\n    //   }\n\n    const isSelected = (dni) => selected.indexOf(dni) !== -1;\n\n    const emptyRows =\n        rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <EnhancedTableToolbar\n                    numSelected={selected.length}\n                    handleBlock={handleBlock}\n                    list={allUsers}\n                    sendFilter={sendFilter}\n                />\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby='tableTitle'\n                        size='small'\n                        aria-label='enhanced table'\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            numSelected={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={rows.length}\n                        />\n                        <TableBody>\n                            {stableSort(rows, getComparator(order, orderBy))\n                                .slice(\n                                    page * rowsPerPage,\n                                    page * rowsPerPage + rowsPerPage\n                                )\n                                .map((row, index) => {\n                                    const isItemSelected = isSelected(row.dni);\n                                    const labelId = `enhanced-table-checkbox-${index}`;\n                                    return (\n                                        <TableRow\n                                            hover\n                                            onClick={(event) =>\n                                                handleClick(event, row.dni)\n                                            }\n                                            role='checkbox'\n                                            aria-checked={isItemSelected}\n                                            tabIndex={-1}\n                                            key={row.dni}\n                                            selected={isItemSelected}\n                                        >\n                                            <TableCell\n                                                padding='checkbox'\n                                                className={\n                                                    index % 2 === 1\n                                                        ? classes.rowColor\n                                                        : null\n                                                }\n                                            >\n                                                <Checkbox\n                                                    defaultChecked\n                                                    color='primary'\n                                                    className={classes.rowColor}\n                                                    checked={isItemSelected}\n                                                    inputProps={{\n                                                        'aria-labelledby':\n                                                            labelId,\n                                                    }}\n                                                />\n                                            </TableCell>\n                                            <TableCell\n                                                align='left'\n                                                className={\n                                                    index % 2 === 1\n                                                        ? classes.rowColor\n                                                        : null\n                                                }\n                                            >\n                                                {row.dni}\n                                            </TableCell>\n                                            <TableCell\n                                                align='left'\n                                                className={\n                                                    index % 2 === 1\n                                                        ? classes.rowColor\n                                                        : null\n                                                }\n                                            >\n                                                {row.email}\n                                            </TableCell>\n                                            <TableCell\n                                                align='left'\n                                                className={\n                                                    index % 2 === 1\n                                                        ? classes.rowColor\n                                                        : null\n                                                }\n                                            >\n                                                {row.role}\n                                            </TableCell>\n                                            <TableCell\n                                                align='left'\n                                                className={\n                                                    index % 2 === 1\n                                                        ? classes.rowColor\n                                                        : null\n                                                }\n                                            >\n                                                {row.account}\n                                            </TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: 33 * emptyRows }}>\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    className={classes.root}\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component='div'\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}