{"ast":null,"code":"var _jsxFileName = \"/home/alan/Escritorio/Integra/IntegraApp/src/components/Medic/ConsultsTable/ConsultsTable.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport blue from '@material-ui/core/colors/blue';\nimport 'firebase/auth';\nimport supabase from '../../../supabase.config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [{\n  id: 'date',\n  numeric: false,\n  disablePadding: false,\n  label: 'Fecha'\n}, {\n  id: 'partnerDni',\n  numeric: true,\n  disablePadding: false,\n  label: 'DNI paciente'\n}, {\n  id: 'patient',\n  numeric: false,\n  disablePadding: false,\n  label: 'Nombre del paciente'\n}, {\n  id: 'reason',\n  numeric: false,\n  disablePadding: false,\n  label: 'Razón'\n}, {\n  id: 'diagnosis',\n  numeric: false,\n  disablePadding: true,\n  label: 'Diagnóstico'\n}, {\n  id: 'observations',\n  numeric: false,\n  disablePadding: false,\n  label: 'Observaciones'\n}];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    order,\n    orderBy,\n    onRequestSort\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableHead, {\n    className: classes.title,\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      children: headCells.map((headCell, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"left\",\n        padding: \"default\",\n        sortDirection: orderBy === headCell.id ? order : false,\n        children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n          className: classes.title,\n          active: orderBy === headCell.id,\n          direction: orderBy === headCell.id ? order : 'asc',\n          onClick: createSortHandler(headCell.id),\n          children: [headCell.label, orderBy === headCell.id ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.visuallyHidden,\n            children: order === 'desc' ? 'sorted descending' : 'sorted ascending'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 33\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this)\n      }, `${headCell.id}-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n}\n\n_c = EnhancedTableHead;\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n}; //------------------------makeStyle1---------------------------------------------------------------------------------------\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(0),\n    paddingRight: theme.spacing(0),\n    backgroundColor: lighten('#34a7a1', 0.3) //color barra superior '\n\n  },\n  highlight: theme.palette.type === 'light' ? {\n    color: '#fafafa',\n    backgroundColor: lighten(blue[500], 0.5),\n    //color barra superior cuando selecciono item\n    fontWeight: 'bold',\n    fontSize: '30px'\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: lighten('#34a7a1', 0.3)\n  },\n  title: {\n    flex: '1 1 100%',\n    fontWeight: 'bold',\n    fontSize: '1.4rem',\n    color: '#fafafa',\n    textAlign: 'center'\n  },\n  filters: {\n    display: 'flex'\n  },\n  iconFilter: {\n    color: '#fafafa',\n    fontWeight: 'bold',\n    '&:hover': {\n      backgroundColor: '#34a7a1'\n    }\n  },\n  iconBlock: {\n    color: '#fafafa',\n    fontWeight: 'bold',\n    '&:hover': {\n      backgroundColor: lighten('#34a7a1', 0.8)\n    }\n  },\n  input: {\n    margin: theme.spacing(1),\n    size: 'small',\n    width: '50%',\n    backgroundColor: '#ffffff',\n    borderRadius: '5px'\n  }\n}));\n\nconst EnhancedTableToolbar = props => {\n  _s();\n\n  const classes = useToolbarStyles();\n  const {\n    numSelected,\n    setToShowRows\n  } = props;\n  const [inputSearch, setInputSearch] = useState('');\n  let userDni = JSON.parse(localStorage.getItem('userdata')).dni;\n\n  const fetchConsult = async dni => {\n    if (!dni) {\n      const {\n        data: consults\n      } = await supabase.from('medical_consultations').select('*,partners:partner_dni(dni,name,lastname)').eq('medic_dni', userDni);\n      setToShowRows(consults);\n    } else {\n      const {\n        data: consults\n      } = await supabase.from('medical_consultations').select('*,partners:partner_dni(dni,name,lastname)').eq('medic_dni', userDni);\n      let array = consults.filter(co => co.partners.dni.toString().includes(dni));\n      setToShowRows(array);\n    }\n  };\n\n  const handleInputSearch = e => {\n    setInputSearch(e.target.value);\n    fetchConsult(inputSearch);\n  };\n\n  useEffect(() => {\n    fetchConsult(); //eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Toolbar, {\n    className: clsx(classes.root, {\n      [classes.highlight]: numSelected > 0\n    }),\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      className: classes.input,\n      type: \"text\",\n      size: \"small\",\n      id: \"outlined-basic\",\n      label: \"DNI paciente\",\n      variant: \"outlined\",\n      onChange: handleInputSearch,\n      value: inputSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.title,\n      variant: \"h6\",\n      id: \"tableTitle\",\n      component: \"div\",\n      children: \"MIS CONSULTAS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EnhancedTableToolbar, \"Xac0w2f0pQBlc9BRjLH4KuGp38w=\", false, function () {\n  return [useToolbarStyles];\n});\n\n_c2 = EnhancedTableToolbar;\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n}; //-------------------- EnhancedTableToolbar Style\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    position: 'relative'\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  },\n  title: {\n    color: '#212121',\n    fontWeight: 'bold',\n    backgroundColor: lighten('#34a7a1', 0.6)\n  },\n  titleDos: {\n    flex: '1 1 100%',\n    fontWeight: 'bold',\n    fontSize: '1.4rem',\n    color: '#D9DCDF',\n    textAlign: 'center'\n  },\n  rowColor: {\n    backgroundColor: lighten('#e0e0e0', 0.3),\n    ':checked': {\n      color: blue[500]\n    }\n  },\n  iconFilter: {\n    color: 'rgba(0, 0, 0, 0.47)',\n    fontWeight: 'bold',\n    '&:hover': {\n      backgroundColor: lighten('#34a7a1', 0.8)\n    }\n  }\n}));\nexport default function ConsultsTable() {\n  _s2();\n\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [toShowRows, setToShowRows] = React.useState([]);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = toShowRows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, toShowRows.length - page * rowsPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(EnhancedTableToolbar, {\n        numSelected: selected.length,\n        setToShowRows: setToShowRows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 17\n      }, this), toShowRows.length !== 0 ? /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: classes.table,\n          \"aria-labelledby\": \"tableTitle\",\n          size: \"small\",\n          \"aria-label\": \"enhanced table\",\n          children: [/*#__PURE__*/_jsxDEV(EnhancedTableHead, {\n            classes: classes,\n            numSelected: selected.length,\n            order: order,\n            orderBy: orderBy,\n            onSelectAllClick: handleSelectAllClick,\n            onRequestSort: handleRequestSort,\n            rowCount: toShowRows.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [stableSort(toShowRows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n              const isItemSelected = isSelected(row.name);\n              const labelId = `enhanced-table-checkbox-${index}`;\n              let patientName = `${row.partners.name} ${row.partners.lastname}`;\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                role: \"checkbox\",\n                \"aria-checked\": isItemSelected,\n                tabIndex: -1,\n                selected: isItemSelected,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  className: index % 2 === 1 ? classes.rowColor : null,\n                  children: row.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  className: index % 2 === 1 ? classes.rowColor : null,\n                  component: \"th\",\n                  id: labelId,\n                  scope: \"row\",\n                  padding: \"default\",\n                  children: row.partners.dni\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  className: index % 2 === 1 ? classes.rowColor : null,\n                  children: patientName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  className: index % 2 === 1 ? classes.rowColor : null,\n                  children: row.reason\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  className: index % 2 === 1 ? classes.rowColor : null,\n                  children: row.diagnosis\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 437,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  className: index % 2 === 1 ? classes.rowColor : null,\n                  children: row.observations\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 49\n                }, this)]\n              }, row.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 45\n              }, this);\n            }), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n              style: {\n                height: 33 * emptyRows\n              },\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 10\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.titleDos,\n          variant: \"h6\",\n          id: \"tableTitle\",\n          component: \"div\",\n          children: \"No Tiene consultas realizadas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        className: classes.root,\n        rowsPerPageOptions: [5, 10, 15, 20],\n        component: \"div\",\n        count: toShowRows.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onChangePage: handleChangePage,\n        onChangeRowsPerPage: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 347,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(ConsultsTable, \"QuWSPSjV96ijvDJnMtaLbbqRf9o=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = ConsultsTable;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"EnhancedTableHead\");\n$RefreshReg$(_c2, \"EnhancedTableToolbar\");\n$RefreshReg$(_c3, \"ConsultsTable\");","map":{"version":3,"sources":["/home/alan/Escritorio/Integra/IntegraApp/src/components/Medic/ConsultsTable/ConsultsTable.jsx"],"names":["React","useEffect","useState","PropTypes","clsx","lighten","makeStyles","TextField","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","blue","supabase","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","classes","onRequestSort","createSortHandler","property","event","title","headCell","visuallyHidden","propTypes","object","isRequired","numSelected","number","func","onSelectAllClick","oneOf","string","rowCount","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","backgroundColor","highlight","palette","type","color","fontWeight","fontSize","text","primary","flex","textAlign","filters","display","iconFilter","iconBlock","input","margin","size","width","borderRadius","EnhancedTableToolbar","setToShowRows","inputSearch","setInputSearch","userDni","JSON","parse","localStorage","getItem","dni","fetchConsult","data","consults","from","select","eq","filter","co","partners","toString","includes","handleInputSearch","e","target","value","useStyles","position","paper","marginBottom","table","minWidth","border","clip","height","overflow","padding","top","titleDos","rowColor","ConsultsTable","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","toShowRows","handleRequestSort","isAsc","handleSelectAllClick","checked","newSelecteds","n","name","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","isSelected","indexOf","emptyRows","Math","min","length","slice","row","isItemSelected","labelId","patientName","lastname","date","reason","diagnosis","observations"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport blue from '@material-ui/core/colors/blue';\nimport 'firebase/auth';\nimport supabase from '../../../supabase.config';\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n    {\n        id: 'date',\n        numeric: false,\n        disablePadding: false,\n        label: 'Fecha',\n    },\n    {\n        id: 'partnerDni',\n        numeric: true,\n        disablePadding: false,\n        label: 'DNI paciente',\n    },\n    {\n        id: 'patient',\n        numeric: false,\n        disablePadding: false,\n        label: 'Nombre del paciente',\n    },\n    {\n        id: 'reason',\n        numeric: false,\n        disablePadding: false,\n        label: 'Razón',\n    },\n    {\n        id: 'diagnosis',\n        numeric: false,\n        disablePadding: true,\n        label: 'Diagnóstico',\n    },\n    {\n        id: 'observations',\n        numeric: false,\n        disablePadding: false,\n        label: 'Observaciones',\n    },\n];\n\nfunction EnhancedTableHead(props) {\n    const { classes, order, orderBy, onRequestSort } = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead className={classes.title}>\n            <TableRow>\n                {headCells.map((headCell, index) => (\n                    <TableCell\n                        key={`${headCell.id}-${index}`}\n                        align='left'\n                        padding='default'\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            className={classes.title}\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                                    {order === 'desc'\n                                        ? 'sorted descending'\n                                        : 'sorted ascending'}\n                                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n};\n\n//------------------------makeStyle1---------------------------------------------------------------------------------------\nconst useToolbarStyles = makeStyles((theme) => ({\n    root: {\n        paddingLeft: theme.spacing(0),\n        paddingRight: theme.spacing(0),\n        backgroundColor: lighten('#34a7a1', 0.3),\n\n        //color barra superior '\n    },\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                  color: '#fafafa',\n                  backgroundColor: lighten(blue[500], 0.5), //color barra superior cuando selecciono item\n                  fontWeight: 'bold',\n                  fontSize: '30px',\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: lighten('#34a7a1', 0.3),\n              },\n    title: {\n        flex: '1 1 100%',\n        fontWeight: 'bold',\n        fontSize: '1.4rem',\n        color: '#fafafa',\n        textAlign: 'center',\n    },\n    filters: {\n        display: 'flex',\n    },\n    iconFilter: {\n        color: '#fafafa',\n        fontWeight: 'bold',\n        '&:hover': {\n            backgroundColor: '#34a7a1',\n        },\n    },\n    iconBlock: {\n        color: '#fafafa',\n        fontWeight: 'bold',\n        '&:hover': {\n            backgroundColor: lighten('#34a7a1', 0.8),\n        },\n    },\n    input: {\n        margin: theme.spacing(1),\n        size: 'small',\n        width: '50%',\n        backgroundColor: '#ffffff',\n        borderRadius: '5px',\n    },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n    const classes = useToolbarStyles();\n    const { numSelected, setToShowRows } = props;\n    const [inputSearch, setInputSearch] = useState('');\n    let userDni = JSON.parse(localStorage.getItem('userdata')).dni;\n\n    const fetchConsult = async (dni) => {\n        if (!dni) {\n            const { data: consults } = await supabase\n                .from('medical_consultations')\n                .select('*,partners:partner_dni(dni,name,lastname)')\n                .eq('medic_dni', userDni);\n\n            setToShowRows(consults);\n        } else {\n            const { data: consults } = await supabase\n                .from('medical_consultations')\n                .select('*,partners:partner_dni(dni,name,lastname)')\n                .eq('medic_dni', userDni);\n            let array = consults.filter((co) =>\n                co.partners.dni.toString().includes(dni)\n            );\n            setToShowRows(array);\n        }\n    };\n\n    const handleInputSearch = (e) => {\n        setInputSearch(e.target.value);\n        fetchConsult(inputSearch);\n    };\n\n    useEffect(() => {\n        fetchConsult();\n        //eslint-disable-next-line\n    }, []);\n\n    return (\n        <Toolbar\n            className={clsx(classes.root, {\n                [classes.highlight]: numSelected > 0,\n            })}\n        >\n            <TextField\n                className={classes.input}\n                type='text'\n                size='small'\n                id='outlined-basic'\n                label='DNI paciente'\n                variant='outlined'\n                onChange={handleInputSearch}\n                value={inputSearch}\n            />\n            <Typography\n                className={classes.title}\n                variant='h6'\n                id='tableTitle'\n                component='div'\n            >\n                MIS CONSULTAS\n            </Typography>\n        </Toolbar>\n    );\n};\n\nEnhancedTableToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired,\n};\n\n//-------------------- EnhancedTableToolbar Style\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        position: 'relative',\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n    title: {\n        color: '#212121',\n        fontWeight: 'bold',\n        backgroundColor: lighten('#34a7a1', 0.6),\n    },\n    titleDos: {\n        flex: '1 1 100%',\n        fontWeight: 'bold',\n        fontSize: '1.4rem',\n        color: '#D9DCDF',\n        textAlign: 'center',\n    },\n    rowColor: {\n        backgroundColor: lighten('#e0e0e0', 0.3),\n        ':checked': {\n            color: blue[500],\n        },\n    },\n    iconFilter: {\n        color: 'rgba(0, 0, 0, 0.47)',\n        fontWeight: 'bold',\n        '&:hover': {\n            backgroundColor: lighten('#34a7a1', 0.8),\n        },\n    },\n}));\n\nexport default function ConsultsTable() {\n    const classes = useStyles();\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('calories');\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n    const [toShowRows, setToShowRows] = React.useState([]);\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = toShowRows.map((n) => n.name);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const isSelected = (name) => selected.indexOf(name) !== -1;\n\n    const emptyRows =\n        rowsPerPage -\n        Math.min(rowsPerPage, toShowRows.length - page * rowsPerPage);\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <EnhancedTableToolbar\n                    numSelected={selected.length}\n                    setToShowRows={setToShowRows}\n                />\n                {toShowRows.length !== 0 ? (\n                    <TableContainer>\n                        <Table\n                            className={classes.table}\n                            aria-labelledby='tableTitle'\n                            size='small'\n                            aria-label='enhanced table'\n                        >\n                            <EnhancedTableHead\n                                classes={classes}\n                                numSelected={selected.length}\n                                order={order}\n                                orderBy={orderBy}\n                                onSelectAllClick={handleSelectAllClick}\n                                onRequestSort={handleRequestSort}\n                                rowCount={toShowRows.length}\n                            />\n                            <TableBody>\n                                {stableSort(\n                                    toShowRows,\n                                    getComparator(order, orderBy)\n                                )\n                                    .slice(\n                                        page * rowsPerPage,\n                                        page * rowsPerPage + rowsPerPage\n                                    )\n                                    .map((row, index) => {\n                                        const isItemSelected = isSelected(\n                                            row.name\n                                        );\n                                        const labelId = `enhanced-table-checkbox-${index}`;\n                                        let patientName = `${row.partners.name} ${row.partners.lastname}`;\n                                        return (\n                                            <TableRow\n                                                hover\n                                                role='checkbox'\n                                                aria-checked={isItemSelected}\n                                                tabIndex={-1}\n                                                key={row.name}\n                                                selected={isItemSelected}\n                                            >\n                                                <TableCell\n                                                    align='left'\n                                                    className={\n                                                        index % 2 === 1\n                                                            ? classes.rowColor\n                                                            : null\n                                                    }\n                                                >\n                                                    {row.date}\n                                                </TableCell>\n                                                <TableCell\n                                                    className={\n                                                        index % 2 === 1\n                                                            ? classes.rowColor\n                                                            : null\n                                                    }\n                                                    component='th'\n                                                    id={labelId}\n                                                    scope='row'\n                                                    padding='default'\n                                                >\n                                                    {row.partners.dni}\n                                                </TableCell>\n                                                <TableCell\n                                                    align='left'\n                                                    className={\n                                                        index % 2 === 1\n                                                            ? classes.rowColor\n                                                            : null\n                                                    }\n                                                >\n                                                    {patientName}\n                                                </TableCell>\n                                                <TableCell\n                                                    align='left'\n                                                    className={\n                                                        index % 2 === 1\n                                                            ? classes.rowColor\n                                                            : null\n                                                    }\n                                                >\n                                                    {row.reason}\n                                                </TableCell>\n                                                <TableCell\n                                                    align='left'\n                                                    className={\n                                                        index % 2 === 1\n                                                            ? classes.rowColor\n                                                            : null\n                                                    }\n                                                >\n                                                    {row.diagnosis}\n                                                </TableCell>\n                                                <TableCell\n                                                    align='left'\n                                                    className={\n                                                        index % 2 === 1\n                                                            ? classes.rowColor\n                                                            : null\n                                                    }\n                                                >\n                                                    {row.observations}\n                                                </TableCell>\n                                            </TableRow>\n                                        );\n                                    })}\n                                {emptyRows > 0 && (\n                                    <TableRow\n                                        style={{ height: 33 * emptyRows }}\n                                    >\n                                        <TableCell colSpan={10} />\n                                    </TableRow>\n                                )}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                ) : (\n                    <TableContainer>\n                        <Typography\n                            className={classes.titleDos}\n                            variant='h6'\n                            id='tableTitle'\n                            component='div'\n                        >\n                            No Tiene consultas realizadas\n                        </Typography>\n                    </TableContainer>\n                )}\n                <TablePagination\n                    className={classes.root}\n                    rowsPerPageOptions={[5, 10, 15, 20]}\n                    component='div'\n                    count={toShowRows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}