{"ast":null,"code":"var _jsxFileName = \"/home/alan/Escritorio/Integra/IntegraApp/src/components/Medic/Consults/Orders/Orders.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { blue } from '@material-ui/core/colors';\nimport { Button, List, ListItem, Avatar, TextField, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport styles from './Orders.module.css'; // import { setMedicines } from '../../../../actions/consult.action';\n\nimport CheckIcon from '@material-ui/icons/Check';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[300],\n    color: blue[100],\n    '&:hover': {\n      backgroundColor: blue[800]\n    }\n  }\n});\nexport default function Orders({\n  handleEvent\n}) {\n  _s();\n\n  let classes = useStyles(); // Estado de apertura del diálogo\n\n  let [open, setOpen] = React.useState(false); // Función que al hacer click abre el diálogo\n\n  let handleClickOpen = e => {\n    setOpen(true);\n  };\n\n  let [neworder, setNeworder] = useState(''); // Cuando abre el diálogo de mostrar medicamentos se fija si hay\n  // algo cargado en el localstorage (por si anteriormente\n  // lo había cargado y vuelto a cerrar)\n\n  let [orders, setOrders] = useState(JSON.parse(localStorage.getItem('orders')) || []);\n  let [ok, setOk] = useState(false);\n\n  let handleChange = e => {\n    //no puede quedar vacío ni ser solo espacios\n    let ord = e.target.value;\n    let ordregex = /[0-9a-zA-ZÀ-ÿ\\u00f1\\u00d1]+[ ]?[0-9a-z A-ZÀ-ÿ\\u00f1\\u00d1]*$/;\n\n    if (ordregex.test(ord)) {\n      // si no está vacío\n      setOk(true); // deja agregarlo\n    } else {\n      setOk(false);\n    }\n\n    setNeworder(ord);\n  }; // Si hago click sobre el medicamento lo quita\n\n\n  let handleItemRemove = value => {\n    let newords = orders.filter(e => e !== value);\n    setOrders(newords);\n    return;\n  };\n\n  let handlePlus = e => {\n    setOrders([...orders, neworder]);\n    setNeworder('');\n    setOk(false); //limpie el imput\n  };\n\n  let handleClose = () => {\n    setNeworder('');\n    setOk(false);\n    setOpen(false);\n  };\n\n  let handleSave = () => {\n    handleEvent(orders);\n    localStorage.setItem('orders', JSON.stringify(orders));\n    setNeworder('');\n    setOk(false);\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: styles.addmed,\n      size: \"small\",\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: handleClickOpen,\n      children: \"Agregar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: \"Estudios complementarios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Agregue a continuaci\\xF3n los estudios indicados al paciente.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: [orders && orders.map((ord, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            onClick: () => handleItemRemove(ord),\n            name: ord,\n            children: ord\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 33\n          }, this)), /*#__PURE__*/_jsxDEV(ListItem, {\n            autoFocus: true,\n            button: true,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              autoFocus: true,\n              margin: \"dense\",\n              id: \"name\",\n              label: \"nuevo estudio\",\n              type: \"text\",\n              fullWidth: true,\n              onChange: handleChange,\n              value: neworder\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this), ok && /*#__PURE__*/_jsxDEV(Avatar, {\n              className: classes.avatar,\n              children: /*#__PURE__*/_jsxDEV(CheckIcon, {\n                onClick: () => handlePlus()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), !!orders.length && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSave,\n          size: \"small\",\n          variant: \"outlined\",\n          color: \"primary\",\n          children: \"Guardar\"\n        }, 'savemed', false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Orders, \"sMH1OntX9VeTD1Pgh/8T2+YIp04=\", false, function () {\n  return [useStyles];\n});\n\n_c = Orders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"sources":["/home/alan/Escritorio/Integra/IntegraApp/src/components/Medic/Consults/Orders/Orders.jsx"],"names":["React","useState","makeStyles","blue","Button","List","ListItem","Avatar","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","styles","CheckIcon","useStyles","avatar","backgroundColor","color","Orders","handleEvent","classes","open","setOpen","handleClickOpen","e","neworder","setNeworder","orders","setOrders","JSON","parse","localStorage","getItem","ok","setOk","handleChange","ord","target","value","ordregex","test","handleItemRemove","newords","filter","handlePlus","handleClose","handleSave","setItem","stringify","addmed","map","index","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { blue } from '@material-ui/core/colors';\nimport {\n    Button,\n    List,\n    ListItem,\n    Avatar,\n    TextField,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n} from '@material-ui/core';\n\nimport styles from './Orders.module.css';\n// import { setMedicines } from '../../../../actions/consult.action';\n\nimport CheckIcon from '@material-ui/icons/Check';\n\nconst useStyles = makeStyles({\n    avatar: {\n        backgroundColor: blue[300],\n        color: blue[100],\n        '&:hover': {\n            backgroundColor: blue[800],\n        },\n    },\n});\n\nexport default function Orders({ handleEvent }) {\n    let classes = useStyles();\n\n    // Estado de apertura del diálogo\n    let [open, setOpen] = React.useState(false);\n\n    // Función que al hacer click abre el diálogo\n    let handleClickOpen = (e) => {\n        setOpen(true);\n    };\n\n    let [neworder, setNeworder] = useState('');\n\n    // Cuando abre el diálogo de mostrar medicamentos se fija si hay\n    // algo cargado en el localstorage (por si anteriormente\n    // lo había cargado y vuelto a cerrar)\n    let [orders, setOrders] = useState(\n        JSON.parse(localStorage.getItem('orders')) || []\n    );\n    let [ok, setOk] = useState(false);\n\n    let handleChange = (e) => {\n        //no puede quedar vacío ni ser solo espacios\n        let ord = e.target.value;\n        let ordregex =\n            /[0-9a-zA-ZÀ-ÿ\\u00f1\\u00d1]+[ ]?[0-9a-z A-ZÀ-ÿ\\u00f1\\u00d1]*$/;\n        if (ordregex.test(ord)) {\n            // si no está vacío\n            setOk(true); // deja agregarlo\n        } else {\n            setOk(false);\n        }\n        setNeworder(ord);\n    };\n\n    // Si hago click sobre el medicamento lo quita\n    let handleItemRemove = (value) => {\n        let newords = orders.filter((e) => e !== value);\n        setOrders(newords);\n        return;\n    };\n\n    let handlePlus = (e) => {\n        setOrders([...orders, neworder]);\n        setNeworder('');\n        setOk(false);\n        //limpie el imput\n    };\n\n    let handleClose = () => {\n        setNeworder('');\n        setOk(false);\n        setOpen(false);\n    };\n\n    let handleSave = () => {\n        handleEvent(orders);\n        localStorage.setItem('orders', JSON.stringify(orders));\n        setNeworder('');\n        setOk(false);\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <Button\n                className={styles.addmed}\n                size='small'\n                variant='outlined'\n                color='primary'\n                onClick={handleClickOpen}\n            >\n                Agregar\n            </Button>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby='form-dialog-title'\n            >\n                <DialogTitle id='form-dialog-title'>\n                    Estudios complementarios\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Agregue a continuación los estudios indicados al\n                        paciente.\n                    </DialogContentText>\n                    <List>\n                        {orders &&\n                            orders.map((ord, index) => (\n                                <ListItem\n                                    button\n                                    onClick={() => handleItemRemove(ord)}\n                                    key={index}\n                                    name={ord}\n                                >\n                                    {ord}\n                                </ListItem>\n                            ))}\n                        <ListItem autoFocus button>\n                            <TextField\n                                autoFocus\n                                margin='dense'\n                                id='name'\n                                label='nuevo estudio'\n                                type='text'\n                                fullWidth\n                                onChange={handleChange}\n                                value={neworder}\n                            />\n                            {ok && (\n                                <Avatar className={classes.avatar}>\n                                    <CheckIcon onClick={() => handlePlus()} />\n                                </Avatar>\n                            )}\n                        </ListItem>\n                    </List>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color='primary'>\n                        Cancelar\n                    </Button>\n                    {!!orders.length && (\n                        <Button\n                            onClick={handleSave}\n                            key={'savemed'}\n                            size='small'\n                            variant='outlined'\n                            color='primary'\n                        >\n                            Guardar\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}