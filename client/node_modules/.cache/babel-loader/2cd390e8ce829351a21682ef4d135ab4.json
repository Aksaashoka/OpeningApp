{"ast":null,"code":"var _jsxFileName = \"/home/alan/Escritorio/Integra/IntegraApp/src/components/Guest/RegStepForm/DatosTitular.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport styles from './DatosTitular.module.css';\nimport validator from './Validator';\nimport useQuery from '../../../hooks/query';\nimport supabase from '../../../supabase.config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DatosTitular = () => {\n  _s();\n\n  const [allStates, setAllStates] = useState([]);\n  const [allLocalities, setAllLocalities] = useState([]);\n\n  const provincias = async () => {\n    const {\n      data: Prov\n    } = await supabase.from('states').select();\n    setAllStates(Prov);\n  };\n\n  const localidades = async provincia => {\n    let idprov = provincia.split('-')[0];\n    const {\n      data: local\n    } = await supabase.from('localities').select('id, state_id,name').eq('state_id', Number(idprov));\n    setAllLocalities(local);\n    return local;\n  };\n\n  useEffect(() => {\n    provincias();\n  }, []);\n  const [textInputs, setTextInputs] = useState({\n    first_name: '',\n    last_name: '',\n    occupation: ''\n  });\n  const [textInputsNum, setInputsTextNum] = useState({\n    dni: '',\n    cuil: '',\n    phone_number: '',\n    number: ''\n  });\n  const [textInputsMix, setInputsTextMix] = useState({\n    street_name: ''\n  });\n  const [dateInputs, setDateInputs] = useState({\n    birth_date: ''\n  });\n  const [selectInputs, setSelectInputs] = useState({\n    marital_status: '',\n    gender: '',\n    state: '',\n    locality: ''\n  });\n  const [emailInputs, setEmailInputs] = useState({\n    email: ''\n  });\n  const [apartmentInput, setApartmentInput] = useState({\n    apartment: ''\n  });\n  const [errors, setErrors] = useState({\n    textErrors: {\n      first_name: '',\n      last_name: '',\n      occupation: ''\n    },\n    textNumErrors: {\n      dni: '',\n      cuil: '',\n      phone_number: '',\n      number: ''\n    },\n    textMixErrors: {\n      street_name: ''\n    },\n    dateErrors: {\n      birth_date: ''\n    },\n    selectErrors: {\n      marital_status: '',\n      gender: '',\n      locality: '',\n      state: ''\n    },\n    emailErrors: {\n      email: ''\n    }\n  });\n  let dataQuery = {\n    name: useQuery().get('first_name'),\n    email: useQuery().get('email'),\n    dni: useQuery().get('dni'),\n    phone: useQuery().get('phone_number')\n  };\n  useEffect(() => {\n    const datosTitular = JSON.parse(localStorage.getItem('datosTitular'));\n\n    if (dataQuery) {\n      setTextInputs({ ...textInputs,\n        first_name: dataQuery.name\n      });\n      setInputsTextNum({ ...textInputsNum,\n        dni: dataQuery.dni,\n        phone_number: dataQuery.phone_number\n      });\n      setEmailInputs({\n        email: dataQuery.email\n      });\n    }\n\n    if (datosTitular) {\n      setTextInputs({\n        first_name: datosTitular.first_name,\n        last_name: datosTitular.last_name,\n        occupation: datosTitular.occupation\n      });\n      setInputsTextNum({\n        dni: datosTitular.dni,\n        cuil: datosTitular.cuil,\n        phone_number: datosTitular.phone_number,\n        number: datosTitular.number\n      });\n      setInputsTextMix({\n        street_name: datosTitular.street_name\n      });\n      setEmailInputs({\n        email: datosTitular.email\n      });\n      setDateInputs({\n        birth_date: datosTitular.birth_date\n      });\n      setSelectInputs({\n        marital_status: datosTitular.marital_status,\n        gender: datosTitular.gender,\n        locality: datosTitular.locality,\n        //falta\n        state: datosTitular.state\n      });\n      setApartmentInput({\n        apartment: datosTitular.apartment\n      });\n      setErrors(errors => ({ ...errors,\n        textErrors: validator({\n          first_name: datosTitular.first_name,\n          last_name: datosTitular.last_name,\n          occupation: datosTitular.occupation\n        }, 'text')\n      }));\n      setErrors(errors => ({ ...errors,\n        textNumErrors: validator({\n          dni: datosTitular.dni,\n          cuil: datosTitular.cuil,\n          phone_number: datosTitular.phone_number,\n          number: datosTitular.number\n        }, 'number')\n      }));\n      setErrors(errors => ({ ...errors,\n        textMixErrors: validator({\n          street_name: datosTitular.street_name\n        }, 'mix')\n      }));\n      setErrors(errors => ({ ...errors,\n        dateErrors: validator({\n          birth_date: datosTitular.birth_date\n        }, 'date')\n      }));\n      setErrors(errors => ({ ...errors,\n        emailErrors: validator({\n          email: datosTitular.email\n        }, 'email')\n      }));\n      setErrors(errors => ({ ...errors,\n        selectErrors: validator({\n          marital_status: datosTitular.marital_status,\n          gender: datosTitular.gender,\n          locality: datosTitular.locality,\n          //falta\n          state: datosTitular.state\n        }, 'radio')\n      }));\n    } //eslint-disable-next-line\n\n  }, []);\n\n  function saveInLocalStorage() {\n    localStorage.setItem('datosTitular', JSON.stringify({ ...textInputs,\n      ...textInputsNum,\n      ...textInputsMix,\n      ...dateInputs,\n      ...emailInputs,\n      ...selectInputs,\n      ...apartmentInput\n    }));\n    localStorage.setItem('errorsTitular', JSON.stringify({ ...errors\n    }));\n  }\n\n  const handleTextChange = e => {\n    setTextInputs({ ...textInputs,\n      [e.target.name]: e.target.value\n    });\n    setErrors({ ...errors,\n      textErrors: validator({ ...textInputs,\n        [e.target.name]: e.target.value\n      }, 'text')\n    });\n  };\n\n  const handleTextNumberChange = e => {\n    setInputsTextNum({ ...textInputsNum,\n      [e.target.name]: e.target.value\n    });\n    setErrors({ ...errors,\n      textNumErrors: validator({ ...textInputsNum,\n        [e.target.name]: e.target.value\n      }, 'number')\n    });\n  };\n\n  const handleTextMixChange = e => {\n    setInputsTextMix({ ...textInputsMix,\n      [e.target.name]: e.target.value\n    });\n    setErrors({ ...errors,\n      textMixErrors: validator({ ...textInputsMix,\n        [e.target.name]: e.target.value\n      }, 'mix')\n    });\n  };\n\n  const handleDateChange = e => {\n    setDateInputs({ ...dateInputs,\n      [e.target.name]: e.target.value\n    });\n    setErrors({ ...errors,\n      dateErrors: validator({ ...dateInputs,\n        [e.target.name]: e.target.value\n      }, 'date')\n    });\n  };\n\n  const handleSelectChange = e => {\n    setSelectInputs({ ...selectInputs,\n      [e.target.name]: e.target.value\n    });\n    setErrors({ ...errors,\n      selectErrors: validator({ ...selectInputs,\n        [e.target.name]: e.target.value\n      }, 'radio')\n    });\n  };\n\n  const handleEmailChange = e => {\n    setEmailInputs({ ...emailInputs,\n      [e.target.name]: e.target.value\n    });\n    setErrors({ ...errors,\n      emailErrors: validator({ ...emailInputs,\n        [e.target.name]: e.target.value\n      }, 'email')\n    });\n  };\n\n  useEffect(() => {\n    localidades(selectInputs.state);\n  }, [selectInputs.state]);\n  const states = allStates.map(s => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: `${s.id}-${s.name}`,\n      children: s.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 16\n    }, this);\n  }); //1-buenos aires\n\n  const localities = allLocalities && allLocalities //eslint-disable-next-line\n  .filter(l => l.state_id == selectInputs.state.split('-')[0]).map(l => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: `${l.id}-${l.name}`,\n      children: l.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 24\n    }, this);\n  }); // console.log(\"localities\", localities);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.form,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.personalData,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.firstColumn,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: \"Datos del titular\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.input,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"first_name-input\",\n            label: \"Nombre\",\n            type: \"text\",\n            name: \"first_name\",\n            autoComplete: \"off\",\n            value: textInputs.first_name,\n            variant: \"outlined\",\n            onChange: e => handleTextChange(e),\n            ...(errors.textErrors.first_name && {\n              error: !!errors.textErrors.first_name,\n              helperText: 'Nombre invalido'\n            }),\n            onBlur: saveInLocalStorage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.input,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"last_name-input\",\n            label: \"Apellido\",\n            type: \"text\",\n            name: \"last_name\",\n            autoComplete: \"off\",\n            value: textInputs.last_name,\n            variant: \"outlined\",\n            onChange: e => handleTextChange(e),\n            ...(errors.textErrors.last_name && {\n              error: !!errors.textErrors.last_name,\n              helperText: 'Nombre invalido'\n            }),\n            onBlur: saveInLocalStorage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.input,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"outlined\",\n            error: errors.selectErrors.gender,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"gender-select\",\n              children: \"Sexo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              native: true,\n              value: selectInputs.gender,\n              onChange: e => handleSelectChange(e),\n              label: \"Genero\",\n              inputProps: {\n                name: 'gender',\n                id: 'gender-select',\n                style: {\n                  width: '177px'\n                }\n              },\n              onBlur: saveInLocalStorage,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                \"aria-label\": \"None\",\n                value: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 'Masculino',\n                children: \"Masculino\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 'Femenino',\n                children: \"Femenino\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 'Otro',\n                children: \"Otro\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.input,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"dni-input\",\n            label: \"DNI\",\n            type: \"text\",\n            name: \"dni\",\n            autoComplete: \"off\",\n            value: textInputsNum.dni,\n            variant: \"outlined\",\n            onChange: e => handleTextNumberChange(e),\n            ...(errors.textNumErrors.dni && {\n              error: !!errors.textNumErrors.dni,\n              helperText: 'Dni invalido'\n            }),\n            inputProps: {\n              maxLength: 8\n            },\n            onBlur: saveInLocalStorage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.input,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"cuil-input\",\n            label: \"CUIL\",\n            type: \"text\",\n            name: \"cuil\",\n            autoComplete: \"off\",\n            value: textInputsNum.cuil,\n            variant: \"outlined\",\n            onChange: e => handleTextNumberChange(e),\n            ...(errors.textNumErrors.cuil && {\n              error: !!errors.textNumErrors.cuil,\n              helperText: 'CUIL invalida.'\n            }),\n            onBlur: saveInLocalStorage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.input,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"phone-input\",\n            label: \"Tel\\xE9fono\",\n            type: \"text\",\n            name: \"phone_number\",\n            autoComplete: \"off\",\n            value: textInputsNum.phone_number,\n            variant: \"outlined\",\n            onChange: e => handleTextNumberChange(e),\n            ...(errors.textNumErrors.phone_number && {\n              error: !!errors.textNumErrors.phone_number,\n              helperText: 'Teléfono invalido'\n            }),\n            inputProps: {\n              maxLength: 12\n            },\n            onBlur: saveInLocalStorage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.secondColumn,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: ` `\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.input,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"mail-input\",\n            label: \"Email\",\n            type: \"text\",\n            name: \"email\",\n            autoComplete: \"off\",\n            value: emailInputs.email,\n            variant: \"outlined\",\n            onChange: e => handleEmailChange(e),\n            ...(errors.emailErrors.email && {\n              error: !!errors.emailErrors.email,\n              helperText: 'Email invalido'\n            }),\n            onBlur: saveInLocalStorage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.input,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"occupation-input\",\n            label: \"Ocupacion\",\n            type: \"text\",\n            name: \"occupation\",\n            autoComplete: \"off\",\n            value: textInputs.occupation,\n            variant: \"outlined\",\n            onChange: e => handleTextChange(e),\n            ...(errors.textErrors.occupation && {\n              error: !!errors.textErrors.occupation,\n              helperText: 'Debe ingresar una ocupacion'\n            }),\n            onBlur: saveInLocalStorage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.input,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"outlined\",\n            error: errors.selectErrors.marital_status,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"marital_status-select\",\n              children: \"Estado civil\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              native: true,\n              value: selectInputs.marital_status,\n              onChange: e => handleSelectChange(e),\n              label: \"Estado civil\",\n              inputProps: {\n                name: 'marital_status',\n                id: 'marital_status-select',\n                style: {\n                  width: '177px'\n                }\n              },\n              onBlur: saveInLocalStorage,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                \"aria-label\": \"None\",\n                value: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 'Casado/a',\n                children: \"Casado/a\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 'Soltero/a',\n                children: \"Soltero/a\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.input,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"birth\",\n            label: \"Birthday\",\n            name: \"birth_date\",\n            type: \"date\",\n            variant: \"outlined\" // style={{width:'177px'}}\n            ,\n            InputLabelProps: {\n              shrink: true\n            },\n            onChange: handleDateChange,\n            value: dateInputs.birth_date,\n            error: !!errors.dateErrors.birth_date,\n            helperText: errors.dateErrors.birth_date && errors.dateErrors.birth_date,\n            onBlur: saveInLocalStorage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.addressData,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"\",\n        children: \"Direcci\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.input,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"street_name-input\",\n          label: \"Calle\",\n          type: \"text\",\n          name: \"street_name\",\n          autoComplete: \"off\",\n          value: textInputsMix.street_name,\n          variant: \"outlined\",\n          onChange: e => handleTextMixChange(e),\n          ...(errors.textMixErrors.street_name && {\n            error: !!errors.textMixErrors.street_name,\n            helperText: 'Calle invalida'\n          }),\n          onBlur: saveInLocalStorage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.input,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"number-input\",\n          label: \"Numero\",\n          type: \"text\",\n          name: \"number\",\n          autoComplete: \"off\",\n          value: textInputsNum.number,\n          variant: \"outlined\",\n          onChange: e => handleTextNumberChange(e),\n          ...(errors.textNumErrors.number && {\n            error: !!errors.textNumErrors.number,\n            helperText: 'Numero invalido'\n          }),\n          onBlur: saveInLocalStorage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.input,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"floor-input\",\n          label: \"Piso\",\n          type: \"text\",\n          name: \"floor\",\n          autoComplete: \"off\",\n          value: apartmentInput.floor,\n          variant: \"outlined\",\n          onChange: e => setApartmentInput({\n            [e.target.name]: e.target.value\n          }),\n          onBlur: saveInLocalStorage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.input,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"apartment-input\",\n          label: \"Depto\",\n          type: \"text\",\n          name: \"apartment\",\n          autoComplete: \"off\",\n          value: apartmentInput.apartment,\n          variant: \"outlined\",\n          onChange: e => setApartmentInput({\n            [e.target.name]: e.target.value\n          }),\n          onBlur: saveInLocalStorage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.input,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"marital_status-select\",\n            children: \"Provincia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            native: true,\n            value: selectInputs.state,\n            onChange: e => handleSelectChange(e),\n            label: \"Provincia\",\n            name: \"state\",\n            InputLabelProps: {\n              shrink: true\n            },\n            inputProps: {\n              id: 'state-select',\n              style: {\n                width: '177px'\n              }\n            },\n            onBlur: saveInLocalStorage,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              \"aria-label\": \"None\",\n              value: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 29\n            }, this), states]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.input,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"locality-select\",\n            children: \"Localidad\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            native: true,\n            value: selectInputs.locality,\n            onChange: e => handleSelectChange(e),\n            label: \"Localidad\",\n            name: \"locality\",\n            InputLabelProps: {\n              shrink: true\n            },\n            inputProps: {\n              id: 'locality-select',\n              style: {\n                width: '177px'\n              }\n            },\n            onBlur: saveInLocalStorage,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              \"aria-label\": \"None\",\n              value: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 29\n            }, this), localities]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 304,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DatosTitular, \"6tzhwfiig3Atn1sRKFRAMkzY6yE=\", false, function () {\n  return [useQuery, useQuery, useQuery, useQuery];\n});\n\n_c = DatosTitular;\nexport default DatosTitular;\n\nvar _c;\n\n$RefreshReg$(_c, \"DatosTitular\");","map":{"version":3,"sources":["/home/alan/Escritorio/Integra/IntegraApp/src/components/Guest/RegStepForm/DatosTitular.jsx"],"names":["React","useEffect","useState","Select","TextField","InputLabel","FormControl","styles","validator","useQuery","supabase","DatosTitular","allStates","setAllStates","allLocalities","setAllLocalities","provincias","data","Prov","from","select","localidades","provincia","idprov","split","local","eq","Number","textInputs","setTextInputs","first_name","last_name","occupation","textInputsNum","setInputsTextNum","dni","cuil","phone_number","number","textInputsMix","setInputsTextMix","street_name","dateInputs","setDateInputs","birth_date","selectInputs","setSelectInputs","marital_status","gender","state","locality","emailInputs","setEmailInputs","email","apartmentInput","setApartmentInput","apartment","errors","setErrors","textErrors","textNumErrors","textMixErrors","dateErrors","selectErrors","emailErrors","dataQuery","name","get","phone","datosTitular","JSON","parse","localStorage","getItem","saveInLocalStorage","setItem","stringify","handleTextChange","e","target","value","handleTextNumberChange","handleTextMixChange","handleDateChange","handleSelectChange","handleEmailChange","states","map","s","id","localities","filter","l","state_id","form","personalData","firstColumn","input","error","helperText","style","width","maxLength","secondColumn","shrink","addressData","floor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport styles from './DatosTitular.module.css';\nimport validator from './Validator';\nimport useQuery from '../../../hooks/query';\nimport supabase from '../../../supabase.config';\n\nconst DatosTitular = () => {\n    const [allStates, setAllStates] = useState([]);\n    const [allLocalities, setAllLocalities] = useState([]);\n\n    const provincias = async () => {\n        const { data: Prov } = await supabase.from('states').select();\n        setAllStates(Prov);\n    };\n    const localidades = async (provincia) => {\n        let idprov = provincia.split('-')[0];\n        const { data: local } = await supabase\n            .from('localities')\n            .select('id, state_id,name')\n            .eq('state_id', Number(idprov));\n        setAllLocalities(local);\n\n        return local;\n    };\n\n    useEffect(() => {\n        provincias();\n    }, []);\n\n    const [textInputs, setTextInputs] = useState({\n        first_name: '',\n        last_name: '',\n        occupation: '',\n    });\n    const [textInputsNum, setInputsTextNum] = useState({\n        dni: '',\n        cuil: '',\n        phone_number: '',\n        number: '',\n    });\n    const [textInputsMix, setInputsTextMix] = useState({\n        street_name: '',\n    });\n    const [dateInputs, setDateInputs] = useState({\n        birth_date: '',\n    });\n    const [selectInputs, setSelectInputs] = useState({\n        marital_status: '',\n        gender: '',\n        state: '',\n        locality: '',\n    });\n    const [emailInputs, setEmailInputs] = useState({ email: '' });\n    const [apartmentInput, setApartmentInput] = useState({ apartment: '' });\n    const [errors, setErrors] = useState({\n        textErrors: {\n            first_name: '',\n            last_name: '',\n            occupation: '',\n        },\n        textNumErrors: {\n            dni: '',\n            cuil: '',\n            phone_number: '',\n            number: '',\n        },\n        textMixErrors: {\n            street_name: '',\n        },\n        dateErrors: { birth_date: '' },\n        selectErrors: {\n            marital_status: '',\n            gender: '',\n            locality: '',\n            state: '',\n        },\n        emailErrors: { email: '' },\n    });\n    let dataQuery = {\n        name: useQuery().get('first_name'),\n        email: useQuery().get('email'),\n        dni: useQuery().get('dni'),\n        phone: useQuery().get('phone_number'),\n    };\n    useEffect(() => {\n        const datosTitular = JSON.parse(localStorage.getItem('datosTitular'));\n\n        if (dataQuery) {\n            setTextInputs({ ...textInputs, first_name: dataQuery.name });\n            setInputsTextNum({\n                ...textInputsNum,\n                dni: dataQuery.dni,\n                phone_number: dataQuery.phone_number,\n            });\n            setEmailInputs({\n                email: dataQuery.email,\n            });\n        }\n        if (datosTitular) {\n            setTextInputs({\n                first_name: datosTitular.first_name,\n                last_name: datosTitular.last_name,\n                occupation: datosTitular.occupation,\n            });\n            setInputsTextNum({\n                dni: datosTitular.dni,\n                cuil: datosTitular.cuil,\n                phone_number: datosTitular.phone_number,\n                number: datosTitular.number,\n            });\n            setInputsTextMix({\n                street_name: datosTitular.street_name,\n            });\n            setEmailInputs({\n                email: datosTitular.email,\n            });\n            setDateInputs({\n                birth_date: datosTitular.birth_date,\n            });\n            setSelectInputs({\n                marital_status: datosTitular.marital_status,\n                gender: datosTitular.gender,\n                locality: datosTitular.locality, //falta\n                state: datosTitular.state,\n            });\n            setApartmentInput({ apartment: datosTitular.apartment });\n\n            setErrors((errors) => ({\n                ...errors,\n                textErrors: validator(\n                    {\n                        first_name: datosTitular.first_name,\n                        last_name: datosTitular.last_name,\n                        occupation: datosTitular.occupation,\n                    },\n                    'text'\n                ),\n            }));\n            setErrors((errors) => ({\n                ...errors,\n                textNumErrors: validator(\n                    {\n                        dni: datosTitular.dni,\n                        cuil: datosTitular.cuil,\n                        phone_number: datosTitular.phone_number,\n                        number: datosTitular.number,\n                    },\n                    'number'\n                ),\n            }));\n            setErrors((errors) => ({\n                ...errors,\n                textMixErrors: validator(\n                    {\n                        street_name: datosTitular.street_name,\n                    },\n                    'mix'\n                ),\n            }));\n            setErrors((errors) => ({\n                ...errors,\n                dateErrors: validator(\n                    {\n                        birth_date: datosTitular.birth_date,\n                    },\n                    'date'\n                ),\n            }));\n            setErrors((errors) => ({\n                ...errors,\n                emailErrors: validator(\n                    {\n                        email: datosTitular.email,\n                    },\n                    'email'\n                ),\n            }));\n            setErrors((errors) => ({\n                ...errors,\n                selectErrors: validator(\n                    {\n                        marital_status: datosTitular.marital_status,\n                        gender: datosTitular.gender,\n                        locality: datosTitular.locality, //falta\n                        state: datosTitular.state,\n                    },\n                    'radio'\n                ),\n            }));\n        }\n        //eslint-disable-next-line\n    }, []);\n\n    function saveInLocalStorage() {\n        localStorage.setItem(\n            'datosTitular',\n            JSON.stringify({\n                ...textInputs,\n                ...textInputsNum,\n                ...textInputsMix,\n                ...dateInputs,\n                ...emailInputs,\n                ...selectInputs,\n                ...apartmentInput,\n            })\n        );\n        localStorage.setItem('errorsTitular', JSON.stringify({ ...errors }));\n    }\n\n    const handleTextChange = (e) => {\n        setTextInputs({ ...textInputs, [e.target.name]: e.target.value });\n\n        setErrors({\n            ...errors,\n            textErrors: validator(\n                { ...textInputs, [e.target.name]: e.target.value },\n                'text'\n            ),\n        });\n    };\n    const handleTextNumberChange = (e) => {\n        setInputsTextNum({ ...textInputsNum, [e.target.name]: e.target.value });\n\n        setErrors({\n            ...errors,\n            textNumErrors: validator(\n                { ...textInputsNum, [e.target.name]: e.target.value },\n                'number'\n            ),\n        });\n    };\n    const handleTextMixChange = (e) => {\n        setInputsTextMix({ ...textInputsMix, [e.target.name]: e.target.value });\n\n        setErrors({\n            ...errors,\n            textMixErrors: validator(\n                { ...textInputsMix, [e.target.name]: e.target.value },\n                'mix'\n            ),\n        });\n    };\n\n    const handleDateChange = (e) => {\n        setDateInputs({ ...dateInputs, [e.target.name]: e.target.value });\n\n        setErrors({\n            ...errors,\n            dateErrors: validator(\n                { ...dateInputs, [e.target.name]: e.target.value },\n                'date'\n            ),\n        });\n    };\n\n    const handleSelectChange = (e) => {\n        setSelectInputs({ ...selectInputs, [e.target.name]: e.target.value });\n\n        setErrors({\n            ...errors,\n            selectErrors: validator(\n                { ...selectInputs, [e.target.name]: e.target.value },\n                'radio'\n            ),\n        });\n    };\n\n    const handleEmailChange = (e) => {\n        setEmailInputs({\n            ...emailInputs,\n            [e.target.name]: e.target.value,\n        });\n        setErrors({\n            ...errors,\n            emailErrors: validator(\n                { ...emailInputs, [e.target.name]: e.target.value },\n                'email'\n            ),\n        });\n    };\n\n    useEffect(() => {\n        localidades(selectInputs.state);\n    }, [selectInputs.state]);\n\n    const states = allStates.map((s) => {\n        return <option value={`${s.id}-${s.name}`}>{s.name}</option>;\n    });\n    //1-buenos aires\n    const localities =\n        allLocalities &&\n        allLocalities\n            //eslint-disable-next-line\n            .filter((l) => l.state_id == selectInputs.state.split('-')[0])\n            .map((l) => {\n                return <option value={`${l.id}-${l.name}`}>{l.name}</option>;\n            });\n    // console.log(\"localities\", localities);\n    return (\n        <div className={styles.form}>\n            <div className={styles.personalData}>\n                <div className={styles.firstColumn}>\n                    <label htmlFor=''>Datos del titular</label>\n                    <div className={styles.input}>\n                        <TextField\n                            id='first_name-input'\n                            label='Nombre'\n                            type='text'\n                            name='first_name'\n                            autoComplete='off'\n                            value={textInputs.first_name}\n                            variant='outlined'\n                            onChange={(e) => handleTextChange(e)}\n                            {...(errors.textErrors.first_name && {\n                                error: !!errors.textErrors.first_name,\n                                helperText: 'Nombre invalido',\n                            })}\n                            onBlur={saveInLocalStorage}\n                        />\n                    </div>\n                    <div className={styles.input}>\n                        <TextField\n                            id='last_name-input'\n                            label='Apellido'\n                            type='text'\n                            name='last_name'\n                            autoComplete='off'\n                            value={textInputs.last_name}\n                            variant='outlined'\n                            onChange={(e) => handleTextChange(e)}\n                            {...(errors.textErrors.last_name && {\n                                error: !!errors.textErrors.last_name,\n                                helperText: 'Nombre invalido',\n                            })}\n                            onBlur={saveInLocalStorage}\n                        />\n                    </div>\n                    <div className={styles.input}>\n                        <FormControl\n                            variant='outlined'\n                            error={errors.selectErrors.gender}\n                        >\n                            <InputLabel htmlFor='gender-select'>\n                                Sexo\n                            </InputLabel>\n                            <Select\n                                native\n                                value={selectInputs.gender}\n                                onChange={(e) => handleSelectChange(e)}\n                                label='Genero'\n                                inputProps={{\n                                    name: 'gender',\n                                    id: 'gender-select',\n                                    style: { width: '177px' },\n                                }}\n                                onBlur={saveInLocalStorage}\n                            >\n                                <option aria-label='None' value='' />\n                                <option value={'Masculino'}>Masculino</option>\n                                <option value={'Femenino'}>Femenino</option>\n                                <option value={'Otro'}>Otro</option>\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <div className={styles.input}>\n                        <TextField\n                            id='dni-input'\n                            label='DNI'\n                            type='text'\n                            name='dni'\n                            autoComplete='off'\n                            value={textInputsNum.dni}\n                            variant='outlined'\n                            onChange={(e) => handleTextNumberChange(e)}\n                            {...(errors.textNumErrors.dni && {\n                                error: !!errors.textNumErrors.dni,\n                                helperText: 'Dni invalido',\n                            })}\n                            inputProps={{ maxLength: 8 }}\n                            onBlur={saveInLocalStorage}\n                        />\n                    </div>\n                    <div className={styles.input}>\n                        <TextField\n                            id='cuil-input'\n                            label='CUIL'\n                            type='text'\n                            name='cuil'\n                            autoComplete='off'\n                            value={textInputsNum.cuil}\n                            variant='outlined'\n                            onChange={(e) => handleTextNumberChange(e)}\n                            {...(errors.textNumErrors.cuil && {\n                                error: !!errors.textNumErrors.cuil,\n                                helperText: 'CUIL invalida.',\n                            })}\n                            onBlur={saveInLocalStorage}\n                        />\n                    </div>\n                    <div className={styles.input}>\n                        <TextField\n                            id='phone-input'\n                            label='Teléfono'\n                            type='text'\n                            name='phone_number'\n                            autoComplete='off'\n                            value={textInputsNum.phone_number}\n                            variant='outlined'\n                            onChange={(e) => handleTextNumberChange(e)}\n                            {...(errors.textNumErrors.phone_number && {\n                                error: !!errors.textNumErrors.phone_number,\n                                helperText: 'Teléfono invalido',\n                            })}\n                            inputProps={{ maxLength: 12 }}\n                            onBlur={saveInLocalStorage}\n                        />\n                    </div>\n                </div>\n                <div className={styles.secondColumn}>\n                    <label>{` `}</label>\n                    <div className={styles.input}>\n                        <TextField\n                            id='mail-input'\n                            label='Email'\n                            type='text'\n                            name='email'\n                            autoComplete='off'\n                            value={emailInputs.email}\n                            variant='outlined'\n                            onChange={(e) => handleEmailChange(e)}\n                            {...(errors.emailErrors.email && {\n                                error: !!errors.emailErrors.email,\n                                helperText: 'Email invalido',\n                            })}\n                            onBlur={saveInLocalStorage}\n                        />\n                    </div>\n                    <div className={styles.input}>\n                        <TextField\n                            id='occupation-input'\n                            label='Ocupacion'\n                            type='text'\n                            name='occupation'\n                            autoComplete='off'\n                            value={textInputs.occupation}\n                            variant='outlined'\n                            onChange={(e) => handleTextChange(e)}\n                            {...(errors.textErrors.occupation && {\n                                error: !!errors.textErrors.occupation,\n                                helperText: 'Debe ingresar una ocupacion',\n                            })}\n                            onBlur={saveInLocalStorage}\n                        />\n                    </div>\n                    <div className={styles.input}>\n                        <FormControl\n                            variant='outlined'\n                            error={errors.selectErrors.marital_status}\n                        >\n                            <InputLabel htmlFor='marital_status-select'>\n                                Estado civil\n                            </InputLabel>\n                            <Select\n                                native\n                                value={selectInputs.marital_status}\n                                onChange={(e) => handleSelectChange(e)}\n                                label='Estado civil'\n                                inputProps={{\n                                    name: 'marital_status',\n                                    id: 'marital_status-select',\n                                    style: { width: '177px' },\n                                }}\n                                onBlur={saveInLocalStorage}\n                            >\n                                <option aria-label='None' value='' />\n                                <option value={'Casado/a'}>Casado/a</option>\n                                <option value={'Soltero/a'}>Soltero/a</option>\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <div className={styles.input}>\n                        <TextField\n                            id='birth'\n                            label='Birthday'\n                            name='birth_date'\n                            type='date'\n                            variant='outlined'\n                            // style={{width:'177px'}}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            onChange={handleDateChange}\n                            value={dateInputs.birth_date}\n                            error={!!errors.dateErrors.birth_date}\n                            helperText={\n                                errors.dateErrors.birth_date &&\n                                errors.dateErrors.birth_date\n                            }\n                            onBlur={saveInLocalStorage}\n                        />\n                    </div>\n                </div>\n            </div>\n            <div className={styles.addressData}>\n                <label htmlFor=''>Dirección</label>\n                <div className={styles.input}>\n                    <TextField\n                        id='street_name-input'\n                        label='Calle'\n                        type='text'\n                        name='street_name'\n                        autoComplete='off'\n                        value={textInputsMix.street_name}\n                        variant='outlined'\n                        onChange={(e) => handleTextMixChange(e)}\n                        {...(errors.textMixErrors.street_name && {\n                            error: !!errors.textMixErrors.street_name,\n                            helperText: 'Calle invalida',\n                        })}\n                        onBlur={saveInLocalStorage}\n                    />\n                </div>\n                <div className={styles.input}>\n                    <TextField\n                        id='number-input'\n                        label='Numero'\n                        type='text'\n                        name='number'\n                        autoComplete='off'\n                        value={textInputsNum.number}\n                        variant='outlined'\n                        onChange={(e) => handleTextNumberChange(e)}\n                        {...(errors.textNumErrors.number && {\n                            error: !!errors.textNumErrors.number,\n                            helperText: 'Numero invalido',\n                        })}\n                        onBlur={saveInLocalStorage}\n                    />\n                </div>\n                <div className={styles.input}>\n                    <TextField\n                        id='floor-input'\n                        label='Piso'\n                        type='text'\n                        name='floor'\n                        autoComplete='off'\n                        value={apartmentInput.floor}\n                        variant='outlined'\n                        onChange={(e) =>\n                            setApartmentInput({\n                                [e.target.name]: e.target.value,\n                            })\n                        }\n                        onBlur={saveInLocalStorage}\n                    />\n                </div>\n                <div className={styles.input}>\n                    <TextField\n                        id='apartment-input'\n                        label='Depto'\n                        type='text'\n                        name='apartment'\n                        autoComplete='off'\n                        value={apartmentInput.apartment}\n                        variant='outlined'\n                        onChange={(e) =>\n                            setApartmentInput({\n                                [e.target.name]: e.target.value,\n                            })\n                        }\n                        onBlur={saveInLocalStorage}\n                    />\n                </div>\n                <div className={styles.input}>\n                    <FormControl variant='outlined'>\n                        <InputLabel htmlFor='marital_status-select'>\n                            Provincia\n                        </InputLabel>\n                        <Select\n                            native\n                            value={selectInputs.state}\n                            onChange={(e) => handleSelectChange(e)}\n                            label='Provincia'\n                            name='state'\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            inputProps={{\n                                id: 'state-select',\n                                style: { width: '177px' },\n                            }}\n                            onBlur={saveInLocalStorage}\n                        >\n                            <option aria-label='None' value='' />\n                            {states}\n                        </Select>\n                    </FormControl>\n                </div>\n                <div className={styles.input}>\n                    <FormControl variant='outlined'>\n                        <InputLabel htmlFor='locality-select'>\n                            Localidad\n                        </InputLabel>\n                        <Select\n                            native\n                            value={selectInputs.locality}\n                            onChange={(e) => handleSelectChange(e)}\n                            label='Localidad'\n                            name='locality'\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            inputProps={{\n                                id: 'locality-select',\n                                style: { width: '177px' },\n                            }}\n                            onBlur={saveInLocalStorage}\n                        >\n                            <option aria-label='None' value='' />\n                            {localities}\n                        </Select>\n                    </FormControl>\n                </div>\n            </div>\n        </div>\n    );\n};\nexport default DatosTitular;\n"]},"metadata":{},"sourceType":"module"}