{"ast":null,"code":"var _jsxFileName = \"/home/alan/Escritorio/Integra/IntegraApp/src/components/Guest/LandingPage/PopUp.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PopUp = ({\n  news,\n  closePopup,\n  show\n}) => {\n  _s();\n\n  const descriptionElementRef = useRef(null);\n  const {\n    img,\n    title,\n    description\n  } = news;\n  useEffect(() => {\n    if (show) {\n      const {\n        current: descriptionElement\n      } = descriptionElementRef;\n\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [show]);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: show,\n    onClose: closePopup,\n    scroll: \"paper\",\n    \"aria-labelledby\": \"scroll-dialog-title\",\n    \"aria-describedby\": \"scroll-dialog-description\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"scroll-dialog-title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: img,\n      alt: \"Header news.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n        id: \"scroll-dialog-description\",\n        ref: descriptionElementRef,\n        tabIndex: -1,\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: closePopup,\n        color: \"primary\",\n        children: \"Cerrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PopUp, \"d/bWg/HXvWRoozvsNhnacQJSQcA=\");\n\n_c = PopUp;\nexport default PopUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopUp\");","map":{"version":3,"sources":["/home/alan/Escritorio/Integra/IntegraApp/src/components/Guest/LandingPage/PopUp.jsx"],"names":["React","useEffect","useRef","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","PopUp","news","closePopup","show","descriptionElementRef","img","title","description","current","descriptionElement","focus"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,UAAR;AAAoBC,EAAAA;AAApB,CAAD,KAAgC;AAAA;;AAC1C,QAAMC,qBAAqB,GAAGX,MAAM,CAAC,IAAD,CAApC;AACA,QAAM;AAAEY,IAAAA,GAAF;AAAOC,IAAAA,KAAP;AAAcC,IAAAA;AAAd,MAA8BN,IAApC;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIW,IAAJ,EAAU;AACN,YAAM;AAAEK,QAAAA,OAAO,EAAEC;AAAX,UAAkCL,qBAAxC;;AACA,UAAIK,kBAAkB,KAAK,IAA3B,EAAiC;AAC7BA,QAAAA,kBAAkB,CAACC,KAAnB;AACH;AACJ;AACJ,GAPQ,EAON,CAACP,IAAD,CAPM,CAAT;AASA,sBACI,QAAC,MAAD;AACI,IAAA,IAAI,EAAEA,IADV;AAEI,IAAA,OAAO,EAAED,UAFb;AAGI,IAAA,MAAM,EAAC,OAHX;AAII,uBAAgB,qBAJpB;AAKI,wBAAiB,2BALrB;AAAA,4BAOI,QAAC,WAAD;AAAa,MAAA,EAAE,EAAC,qBAAhB;AAAA,gBAAuCI;AAAvC;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI;AAAK,MAAA,GAAG,EAAED,GAAV;AAAe,MAAA,GAAG,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,YARJ,eASI,QAAC,aAAD;AAAe,MAAA,QAAQ,EAAE,IAAzB;AAAA,6BACI,QAAC,iBAAD;AACI,QAAA,EAAE,EAAC,2BADP;AAEI,QAAA,GAAG,EAAED,qBAFT;AAGI,QAAA,QAAQ,EAAE,CAAC,CAHf;AAAA,kBAKKG;AALL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YATJ,eAkBI,QAAC,aAAD;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEL,UAAjB;AAA6B,QAAA,KAAK,EAAC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CAvCD;;GAAMF,K;;KAAAA,K;AAyCN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst PopUp = ({ news, closePopup, show }) => {\n    const descriptionElementRef = useRef(null);\n    const { img, title, description } = news;\n\n    useEffect(() => {\n        if (show) {\n            const { current: descriptionElement } = descriptionElementRef;\n            if (descriptionElement !== null) {\n                descriptionElement.focus();\n            }\n        }\n    }, [show]);\n\n    return (\n        <Dialog\n            open={show}\n            onClose={closePopup}\n            scroll='paper'\n            aria-labelledby='scroll-dialog-title'\n            aria-describedby='scroll-dialog-description'\n        >\n            <DialogTitle id='scroll-dialog-title'>{title}</DialogTitle>\n            <img src={img} alt='Header news.' />\n            <DialogContent dividers={true}>\n                <DialogContentText\n                    id='scroll-dialog-description'\n                    ref={descriptionElementRef}\n                    tabIndex={-1}\n                >\n                    {description}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={closePopup} color='primary'>\n                    Cerrar\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default PopUp;\n"]},"metadata":{},"sourceType":"module"}