{"ast":null,"code":"var _jsxFileName = \"/home/alan/Escritorio/Integra/IntegraApp/src/components/Affiliate/AffiliateDoctors/Favs.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport InfoIcon from '@material-ui/icons/Info';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport blue from '@material-ui/core/colors/blue';\nimport 'firebase/auth';\nimport Swal from 'sweetalert2';\nimport { Avatar } from '@material-ui/core';\nimport supabase from '../../../supabase.config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [{\n  id: 'actions',\n  numeric: false,\n  disablePadding: false,\n  label: 'ACCIONES'\n}, {\n  id: 'profilePic',\n  numeric: false,\n  disablePadding: false,\n  label: 'FOTO'\n}, {\n  id: 'name',\n  numeric: false,\n  disablePadding: true,\n  label: 'NOMBRE'\n}, {\n  id: 'lastname',\n  numeric: false,\n  disablePadding: false,\n  label: 'APELLIDO'\n}, {\n  id: 'specialties',\n  numeric: false,\n  disablePadding: false,\n  label: 'ESPECIALIDAD'\n}];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    order,\n    orderBy,\n    onRequestSort\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableHead, {\n    className: classes.title,\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      children: headCells.map((headCell, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"left\",\n        padding: \"default\",\n        sortDirection: orderBy === headCell.id ? order : false,\n        children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n          className: classes.title,\n          active: orderBy === headCell.id,\n          direction: orderBy === headCell.id ? order : 'asc',\n          onClick: createSortHandler(headCell.id),\n          children: [headCell.label, orderBy === headCell.id ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.visuallyHidden,\n            children: order === 'desc' ? 'sorted descending' : 'sorted ascending'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 33\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this)\n      }, `${headCell.id}-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n\n_c = EnhancedTableHead;\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n}; //------------------------makeStyle1---------------------------------------------------------------------------------------\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(0),\n    paddingRight: theme.spacing(0),\n    backgroundColor: lighten('#34a7a1', 0.3) //color barra superior '\n\n  },\n  highlight: theme.palette.type === 'light' ? {\n    color: '#fafafa',\n    backgroundColor: lighten(blue[500], 0.5),\n    //color barra superior cuando selecciono item\n    fontWeight: 'bold',\n    fontSize: '30px'\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: lighten('#34a7a1', 0.3)\n  },\n  title: {\n    flex: '1 1 100%',\n    fontWeight: 'bold',\n    fontSize: '1.4rem',\n    color: '#fafafa',\n    textAlign: 'center'\n  },\n  filters: {\n    display: 'flex'\n  },\n  iconFilter: {\n    color: '#fafafa',\n    fontWeight: 'bold',\n    '&:hover': {\n      backgroundColor: '#34a7a1'\n    }\n  },\n  iconBlock: {\n    color: '#fafafa',\n    fontWeight: 'bold',\n    '&:hover': {\n      backgroundColor: lighten('#34a7a1', 0.8)\n    }\n  }\n}));\n\nconst EnhancedTableToolbar = props => {\n  _s();\n\n  const classes = useToolbarStyles();\n  const {\n    numSelected,\n    setToShowRows,\n    deleteFav\n  } = props;\n  let userDni = JSON.parse(localStorage.getItem('userdata')).dni;\n\n  const fetchFavs = async userDni => {\n    const {\n      data: medics,\n      error: errorFetchMedics\n    } = await supabase.from('favorites').select('medics(dni, name, lastname, medic_license, email, phone_number, profilePic, medical_specialities (id, name), address(street, street_number, floor, department, localities(id_locality, name, postal_code,states(id,name)))))').eq('partner_dni', userDni);\n    let array = [];\n\n    for (let ad of medics) {\n      array.push(ad.medics);\n    }\n\n    if (errorFetchMedics) return console.log(errorFetchMedics);\n    setToShowRows(array);\n  };\n\n  useEffect(() => {\n    fetchFavs(userDni); //eslint-disable-next-line\n  }, [deleteFav]);\n  return /*#__PURE__*/_jsxDEV(Toolbar, {\n    className: clsx(classes.root, {\n      [classes.highlight]: numSelected > 0\n    }),\n    children: /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.title,\n      variant: \"h6\",\n      id: \"tableTitle\",\n      component: \"div\",\n      children: \"MEDICOS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EnhancedTableToolbar, \"Q+1MfdDrXvVLxvYsnjcqnbQhrzM=\", false, function () {\n  return [useToolbarStyles];\n});\n\n_c2 = EnhancedTableToolbar;\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n}; //-------------------- EnhancedTableToolbar Style\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    position: 'relative'\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  },\n  title: {\n    color: '#212121',\n    fontWeight: 'bold',\n    backgroundColor: lighten('#34a7a1', 0.6)\n  },\n  rowColor: {\n    backgroundColor: lighten('#e0e0e0', 0.3),\n    ':checked': {\n      color: blue[500]\n    }\n  },\n  iconFilter: {\n    color: 'rgba(0, 0, 0, 0.47)',\n    fontWeight: 'bold',\n    '&:hover': {\n      backgroundColor: lighten('#34a7a1', 0.8)\n    }\n  }\n}));\nexport default function Favs() {\n  _s2();\n\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5); //eslint-disable-next-line\n\n  const [listMedics, setListMedics] = React.useState([]);\n  const [medicSpecialities, setMedicSpecialities] = React.useState([]); //eslint-disable-next-line\n\n  const [medicData, setMedicData] = React.useState(null);\n  const [toShowRows, setToShowRows] = React.useState([]);\n  const [deleteFavNoti, setDeleteFavNoti] = React.useState(false);\n  let userDni = JSON.parse(localStorage.getItem('userdata')).dni;\n\n  const deleteFav = async medicDni => {\n    const {\n      error\n    } = await supabase.from('favorites').delete().eq('medic_dni', medicDni).eq('partner_dni', userDni);\n    Swal.fire({\n      icon: 'success',\n      title: 'MÃ©dico eliminado de favoritos',\n      showConfirmButton: false,\n      timer: 1500\n    });\n    setDeleteFavNoti(true);\n    setDeleteFavNoti(false);\n    if (error) return console.log(error);\n  };\n\n  const fetchSpecialities = async () => {\n    const {\n      data: specialities,\n      error: errorFetchSpecialities\n    } = await supabase.from('medical_specialities').select('name, id');\n    if (errorFetchSpecialities) return console.log(errorFetchSpecialities);\n    setMedicSpecialities(specialities);\n  };\n\n  React.useEffect(() => {\n    fetchSpecialities();\n  }, []);\n\n  const handleDeleteFav = row => {\n    deleteFav(row.dni);\n  };\n\n  const handleInfo = medicData => {\n    setMedicData(medicData);\n    let floor = medicData.address[0].floor !== null ? `Piso: ${medicData.address[0].floor}` : '';\n    let department = medicData.address[0].department !== null ? `Depto.: ${medicData.address[0].department}` : '';\n    Swal.fire({\n      position: 'bottom',\n      title: `Dr. ${medicData.name} ${medicData.lastname}`,\n      html: `<p>Email: ${medicData.email}</p>` + `<p>TelÃ©fono: ${medicData.phone_number}</p>` + `<p>DirecciÃ³n: ${medicData.address[0].street + ' ' + medicData.address[0].street_number}</p>` + `<p>${floor + ' ' + department}</p>` + `<p>${medicData.address[0].localities.name}</p>` + `<p>${medicData.address[0].localities.states.name}</p>`,\n      imageUrl: medicData.profilePic,\n      imageWidth: 300,\n      imageHeight: 300,\n      imageAlt: 'Custom image'\n    });\n  };\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = toShowRows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, toShowRows.length - page * rowsPerPage);\n  const rows = listMedics;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(EnhancedTableToolbar, {\n        numSelected: selected.length,\n        setToShowRows: setToShowRows,\n        toShowRows: toShowRows,\n        rows: rows,\n        medicSpecialities: medicSpecialities,\n        deleteFav: deleteFavNoti\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: classes.table,\n          \"aria-labelledby\": \"tableTitle\",\n          size: \"small\",\n          \"aria-label\": \"enhanced table\",\n          children: [/*#__PURE__*/_jsxDEV(EnhancedTableHead, {\n            classes: classes,\n            numSelected: selected.length,\n            order: order,\n            orderBy: orderBy,\n            onSelectAllClick: handleSelectAllClick,\n            onRequestSort: handleRequestSort,\n            rowCount: toShowRows.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [stableSort(toShowRows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n              const isItemSelected = isSelected(row.name);\n              const labelId = `enhanced-table-checkbox-${index}`;\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true // onClick={(event) => handleClick(event, row.name)}\n                ,\n                role: \"checkbox\",\n                \"aria-checked\": isItemSelected,\n                tabIndex: -1,\n                selected: isItemSelected,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  className: index % 2 === 1 ? classes.rowColor : null,\n                  children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"Mas info.\",\n                    className: classes.iconFilter,\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      \"aria-label\": \"Mas info.\",\n                      children: /*#__PURE__*/_jsxDEV(InfoIcon, {\n                        onClick: () => handleInfo(row)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 443,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 442,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 436,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"Mas info.\",\n                    className: classes.iconFilter,\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      \"aria-label\": \"Mas info.\",\n                      children: /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {\n                        onClick: () => handleDeleteFav(row)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 457,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 456,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 450,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  className: index % 2 === 1 ? classes.rowColor : null,\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    alt: \"Profile Picture\",\n                    src: row.profilePic\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 475,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  className: index % 2 === 1 ? classes.rowColor : null,\n                  component: \"th\",\n                  id: labelId,\n                  scope: \"row\",\n                  padding: \"default\",\n                  children: row.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  className: index % 2 === 1 ? classes.rowColor : null,\n                  children: row.lastname\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  className: index % 2 === 1 ? classes.rowColor : null,\n                  children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                    children: row.medical_specialities.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: \"Clinica\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 513,\n                      columnNumber: 57\n                    }, this) : row.medical_specialities.map(s => /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: s.name.charAt(0).toUpperCase() + s.name.slice(1)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 517,\n                      columnNumber: 65\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 510,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 45\n                }, this)]\n              }, row.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 41\n              }, this);\n            }), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n              style: {\n                height: 33 * emptyRows\n              },\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 10\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        className: classes.root,\n        rowsPerPageOptions: [5, 10, 15, 20],\n        component: \"div\",\n        count: toShowRows.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onChangePage: handleChangePage,\n        onChangeRowsPerPage: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 379,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Favs, \"6bawSzkb5yA60MDDJY4P51zQsO0=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = Favs;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"EnhancedTableHead\");\n$RefreshReg$(_c2, \"EnhancedTableToolbar\");\n$RefreshReg$(_c3, \"Favs\");","map":{"version":3,"sources":["/home/alan/Escritorio/Integra/IntegraApp/src/components/Affiliate/AffiliateDoctors/Favs.jsx"],"names":["React","useEffect","PropTypes","clsx","lighten","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","IconButton","Tooltip","InfoIcon","DeleteForeverIcon","blue","Swal","Avatar","supabase","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","classes","onRequestSort","createSortHandler","property","event","title","headCell","visuallyHidden","propTypes","object","isRequired","numSelected","number","func","onSelectAllClick","oneOf","string","rowCount","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","backgroundColor","highlight","palette","type","color","fontWeight","fontSize","text","primary","flex","textAlign","filters","display","iconFilter","iconBlock","EnhancedTableToolbar","setToShowRows","deleteFav","userDni","JSON","parse","localStorage","getItem","dni","fetchFavs","data","medics","error","errorFetchMedics","from","select","eq","ad","push","console","log","useStyles","width","position","paper","marginBottom","table","minWidth","border","clip","height","margin","overflow","padding","top","rowColor","Favs","setOrder","useState","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","listMedics","setListMedics","medicSpecialities","setMedicSpecialities","medicData","setMedicData","toShowRows","deleteFavNoti","setDeleteFavNoti","medicDni","delete","fire","icon","showConfirmButton","timer","fetchSpecialities","specialities","errorFetchSpecialities","handleDeleteFav","row","handleInfo","floor","address","department","name","lastname","html","email","phone_number","street","street_number","localities","states","imageUrl","profilePic","imageWidth","imageHeight","imageAlt","handleRequestSort","isAsc","handleSelectAllClick","target","checked","newSelecteds","n","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","isSelected","indexOf","emptyRows","Math","min","length","rows","slice","isItemSelected","labelId","medical_specialities","s","charAt","toUpperCase"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,IAAP,MAAiB,+BAAjB;AACA,OAAO,eAAP;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,QAAP,MAAqB,0BAArB;;;AAEA,SAASC,oBAAT,CAA8BC,CAA9B,EAAiCC,CAAjC,EAAoCC,OAApC,EAA6C;AACzC,MAAID,CAAC,CAACC,OAAD,CAAD,GAAaF,CAAC,CAACE,OAAD,CAAlB,EAA6B;AACzB,WAAO,CAAC,CAAR;AACH;;AACD,MAAID,CAAC,CAACC,OAAD,CAAD,GAAaF,CAAC,CAACE,OAAD,CAAlB,EAA6B;AACzB,WAAO,CAAP;AACH;;AACD,SAAO,CAAP;AACH;;AAED,SAASC,aAAT,CAAuBC,KAAvB,EAA8BF,OAA9B,EAAuC;AACnC,SAAOE,KAAK,KAAK,MAAV,GACD,CAACJ,CAAD,EAAIC,CAAJ,KAAUF,oBAAoB,CAACC,CAAD,EAAIC,CAAJ,EAAOC,OAAP,CAD7B,GAED,CAACF,CAAD,EAAIC,CAAJ,KAAU,CAACF,oBAAoB,CAACC,CAAD,EAAIC,CAAJ,EAAOC,OAAP,CAFrC;AAGH;;AAED,SAASG,UAAT,CAAoBC,KAApB,EAA2BC,UAA3B,EAAuC;AACnC,QAAMC,cAAc,GAAGF,KAAK,CAACG,GAAN,CAAU,CAACC,EAAD,EAAKC,KAAL,KAAe,CAACD,EAAD,EAAKC,KAAL,CAAzB,CAAvB;AACAH,EAAAA,cAAc,CAACI,IAAf,CAAoB,CAACZ,CAAD,EAAIC,CAAJ,KAAU;AAC1B,UAAMG,KAAK,GAAGG,UAAU,CAACP,CAAC,CAAC,CAAD,CAAF,EAAOC,CAAC,CAAC,CAAD,CAAR,CAAxB;AACA,QAAIG,KAAK,KAAK,CAAd,EAAiB,OAAOA,KAAP;AACjB,WAAOJ,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAC,CAAC,CAAD,CAAf;AACH,GAJD;AAKA,SAAOO,cAAc,CAACC,GAAf,CAAoBC,EAAD,IAAQA,EAAE,CAAC,CAAD,CAA7B,CAAP;AACH;;AAED,MAAMG,SAAS,GAAG,CACd;AACIC,EAAAA,EAAE,EAAE,SADR;AAEIC,EAAAA,OAAO,EAAE,KAFb;AAGIC,EAAAA,cAAc,EAAE,KAHpB;AAIIC,EAAAA,KAAK,EAAE;AAJX,CADc,EAOd;AACIH,EAAAA,EAAE,EAAE,YADR;AAEIC,EAAAA,OAAO,EAAE,KAFb;AAGIC,EAAAA,cAAc,EAAE,KAHpB;AAIIC,EAAAA,KAAK,EAAE;AAJX,CAPc,EAad;AAAEH,EAAAA,EAAE,EAAE,MAAN;AAAcC,EAAAA,OAAO,EAAE,KAAvB;AAA8BC,EAAAA,cAAc,EAAE,IAA9C;AAAoDC,EAAAA,KAAK,EAAE;AAA3D,CAbc,EAcd;AACIH,EAAAA,EAAE,EAAE,UADR;AAEIC,EAAAA,OAAO,EAAE,KAFb;AAGIC,EAAAA,cAAc,EAAE,KAHpB;AAIIC,EAAAA,KAAK,EAAE;AAJX,CAdc,EAoBd;AACIH,EAAAA,EAAE,EAAE,aADR;AAEIC,EAAAA,OAAO,EAAE,KAFb;AAGIC,EAAAA,cAAc,EAAE,KAHpB;AAIIC,EAAAA,KAAK,EAAE;AAJX,CApBc,CAAlB;;AA4BA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAC9B,QAAM;AAAEC,IAAAA,OAAF;AAAWhB,IAAAA,KAAX;AAAkBF,IAAAA,OAAlB;AAA2BmB,IAAAA;AAA3B,MAA6CF,KAAnD;;AACA,QAAMG,iBAAiB,GAAIC,QAAD,IAAeC,KAAD,IAAW;AAC/CH,IAAAA,aAAa,CAACG,KAAD,EAAQD,QAAR,CAAb;AACH,GAFD;;AAIA,sBACI,QAAC,SAAD;AAAW,IAAA,SAAS,EAAEH,OAAO,CAACK,KAA9B;AAAA,2BACI,QAAC,QAAD;AAAA,gBACKZ,SAAS,CAACJ,GAAV,CAAc,CAACiB,QAAD,EAAWf,KAAX,kBACX,QAAC,SAAD;AAEI,QAAA,KAAK,EAAC,MAFV;AAGI,QAAA,OAAO,EAAC,SAHZ;AAII,QAAA,aAAa,EAAET,OAAO,KAAKwB,QAAQ,CAACZ,EAArB,GAA0BV,KAA1B,GAAkC,KAJrD;AAAA,+BAMI,QAAC,cAAD;AACI,UAAA,SAAS,EAAEgB,OAAO,CAACK,KADvB;AAEI,UAAA,MAAM,EAAEvB,OAAO,KAAKwB,QAAQ,CAACZ,EAFjC;AAGI,UAAA,SAAS,EAAEZ,OAAO,KAAKwB,QAAQ,CAACZ,EAArB,GAA0BV,KAA1B,GAAkC,KAHjD;AAII,UAAA,OAAO,EAAEkB,iBAAiB,CAACI,QAAQ,CAACZ,EAAV,CAJ9B;AAAA,qBAMKY,QAAQ,CAACT,KANd,EAOKf,OAAO,KAAKwB,QAAQ,CAACZ,EAArB,gBACG;AAAM,YAAA,SAAS,EAAEM,OAAO,CAACO,cAAzB;AAAA,sBACKvB,KAAK,KAAK,MAAV,GACK,mBADL,GAEK;AAHV;AAAA;AAAA;AAAA;AAAA,kBADH,GAMG,IAbR;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ,SACU,GAAEsB,QAAQ,CAACZ,EAAG,IAAGH,KAAM,EADjC;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH;;KApCQO,iB;AAsCTA,iBAAiB,CAACU,SAAlB,GAA8B;AAC1BR,EAAAA,OAAO,EAAE5C,SAAS,CAACqD,MAAV,CAAiBC,UADA;AAE1BC,EAAAA,WAAW,EAAEvD,SAAS,CAACwD,MAAV,CAAiBF,UAFJ;AAG1BT,EAAAA,aAAa,EAAE7C,SAAS,CAACyD,IAAV,CAAeH,UAHJ;AAI1BI,EAAAA,gBAAgB,EAAE1D,SAAS,CAACyD,IAAV,CAAeH,UAJP;AAK1B1B,EAAAA,KAAK,EAAE5B,SAAS,CAAC2D,KAAV,CAAgB,CAAC,KAAD,EAAQ,MAAR,CAAhB,EAAiCL,UALd;AAM1B5B,EAAAA,OAAO,EAAE1B,SAAS,CAAC4D,MAAV,CAAiBN,UANA;AAO1BO,EAAAA,QAAQ,EAAE7D,SAAS,CAACwD,MAAV,CAAiBF;AAPD,CAA9B,C,CAUA;;AACA,MAAMQ,gBAAgB,GAAG3D,UAAU,CAAE4D,KAAD,KAAY;AAC5CC,EAAAA,IAAI,EAAE;AACFC,IAAAA,WAAW,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADX;AAEFC,IAAAA,YAAY,EAAEJ,KAAK,CAACG,OAAN,CAAc,CAAd,CAFZ;AAGFE,IAAAA,eAAe,EAAElE,OAAO,CAAC,SAAD,EAAY,GAAZ,CAHtB,CAKF;;AALE,GADsC;AAQ5CmE,EAAAA,SAAS,EACLN,KAAK,CAACO,OAAN,CAAcC,IAAd,KAAuB,OAAvB,GACM;AACIC,IAAAA,KAAK,EAAE,SADX;AAEIJ,IAAAA,eAAe,EAAElE,OAAO,CAACiB,IAAI,CAAC,GAAD,CAAL,EAAY,GAAZ,CAF5B;AAE8C;AAC1CsD,IAAAA,UAAU,EAAE,MAHhB;AAIIC,IAAAA,QAAQ,EAAE;AAJd,GADN,GAOM;AACIF,IAAAA,KAAK,EAAET,KAAK,CAACO,OAAN,CAAcK,IAAd,CAAmBC,OAD9B;AAEIR,IAAAA,eAAe,EAAElE,OAAO,CAAC,SAAD,EAAY,GAAZ;AAF5B,GAhBkC;AAoB5C+C,EAAAA,KAAK,EAAE;AACH4B,IAAAA,IAAI,EAAE,UADH;AAEHJ,IAAAA,UAAU,EAAE,MAFT;AAGHC,IAAAA,QAAQ,EAAE,QAHP;AAIHF,IAAAA,KAAK,EAAE,SAJJ;AAKHM,IAAAA,SAAS,EAAE;AALR,GApBqC;AA2B5CC,EAAAA,OAAO,EAAE;AACLC,IAAAA,OAAO,EAAE;AADJ,GA3BmC;AA8B5CC,EAAAA,UAAU,EAAE;AACRT,IAAAA,KAAK,EAAE,SADC;AAERC,IAAAA,UAAU,EAAE,MAFJ;AAGR,eAAW;AACPL,MAAAA,eAAe,EAAE;AADV;AAHH,GA9BgC;AAqC5Cc,EAAAA,SAAS,EAAE;AACPV,IAAAA,KAAK,EAAE,SADA;AAEPC,IAAAA,UAAU,EAAE,MAFL;AAGP,eAAW;AACPL,MAAAA,eAAe,EAAElE,OAAO,CAAC,SAAD,EAAY,GAAZ;AADjB;AAHJ;AArCiC,CAAZ,CAAD,CAAnC;;AA8CA,MAAMiF,oBAAoB,GAAIxC,KAAD,IAAW;AAAA;;AACpC,QAAMC,OAAO,GAAGkB,gBAAgB,EAAhC;AACA,QAAM;AAAEP,IAAAA,WAAF;AAAe6B,IAAAA,aAAf;AAA8BC,IAAAA;AAA9B,MAA4C1C,KAAlD;AACA,MAAI2C,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,EAA6CC,GAA3D;;AAEA,QAAMC,SAAS,GAAG,MAAON,OAAP,IAAmB;AACjC,UAAM;AAAEO,MAAAA,IAAI,EAAEC,MAAR;AAAgBC,MAAAA,KAAK,EAAEC;AAAvB,QAA4C,MAAM1E,QAAQ,CAC3D2E,IADmD,CAC9C,WAD8C,EAEnDC,MAFmD,CAGhD,8NAHgD,EAKnDC,EALmD,CAKhD,aALgD,EAKjCb,OALiC,CAAxD;AAMA,QAAIxD,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIsE,EAAT,IAAeN,MAAf,EAAuB;AACnBhE,MAAAA,KAAK,CAACuE,IAAN,CAAWD,EAAE,CAACN,MAAd;AACH;;AACD,QAAIE,gBAAJ,EAAsB,OAAOM,OAAO,CAACC,GAAR,CAAYP,gBAAZ,CAAP;AACtBZ,IAAAA,aAAa,CAACtD,KAAD,CAAb;AACH,GAbD;;AAeA/B,EAAAA,SAAS,CAAC,MAAM;AACZ6F,IAAAA,SAAS,CAACN,OAAD,CAAT,CADY,CAEZ;AACH,GAHQ,EAGN,CAACD,SAAD,CAHM,CAAT;AAKA,sBACI,QAAC,OAAD;AACI,IAAA,SAAS,EAAEpF,IAAI,CAAC2C,OAAO,CAACoB,IAAT,EAAe;AAC1B,OAACpB,OAAO,CAACyB,SAAT,GAAqBd,WAAW,GAAG;AADT,KAAf,CADnB;AAAA,2BAKI,QAAC,UAAD;AACI,MAAA,SAAS,EAAEX,OAAO,CAACK,KADvB;AAEI,MAAA,OAAO,EAAC,IAFZ;AAGI,MAAA,EAAE,EAAC,YAHP;AAII,MAAA,SAAS,EAAC,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAzCD;;GAAMkC,oB;UACcrB,gB;;;MADdqB,oB;AA2CNA,oBAAoB,CAAC/B,SAArB,GAAiC;AAC7BG,EAAAA,WAAW,EAAEvD,SAAS,CAACwD,MAAV,CAAiBF;AADD,CAAjC,C,CAIA;;AACA,MAAMkD,SAAS,GAAGrG,UAAU,CAAE4D,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFyC,IAAAA,KAAK,EAAE,MADL;AAEFC,IAAAA,QAAQ,EAAE;AAFR,GAD+B;AAKrCC,EAAAA,KAAK,EAAE;AACHF,IAAAA,KAAK,EAAE,MADJ;AAEHG,IAAAA,YAAY,EAAE7C,KAAK,CAACG,OAAN,CAAc,CAAd;AAFX,GAL8B;AASrC2C,EAAAA,KAAK,EAAE;AACHC,IAAAA,QAAQ,EAAE;AADP,GAT8B;AAYrC3D,EAAAA,cAAc,EAAE;AACZ4D,IAAAA,MAAM,EAAE,CADI;AAEZC,IAAAA,IAAI,EAAE,eAFM;AAGZC,IAAAA,MAAM,EAAE,CAHI;AAIZC,IAAAA,MAAM,EAAE,CAAC,CAJG;AAKZC,IAAAA,QAAQ,EAAE,QALE;AAMZC,IAAAA,OAAO,EAAE,CANG;AAOZV,IAAAA,QAAQ,EAAE,UAPE;AAQZW,IAAAA,GAAG,EAAE,EARO;AASZZ,IAAAA,KAAK,EAAE;AATK,GAZqB;AAuBrCxD,EAAAA,KAAK,EAAE;AACHuB,IAAAA,KAAK,EAAE,SADJ;AAEHC,IAAAA,UAAU,EAAE,MAFT;AAGHL,IAAAA,eAAe,EAAElE,OAAO,CAAC,SAAD,EAAY,GAAZ;AAHrB,GAvB8B;AA4BrCoH,EAAAA,QAAQ,EAAE;AACNlD,IAAAA,eAAe,EAAElE,OAAO,CAAC,SAAD,EAAY,GAAZ,CADlB;AAEN,gBAAY;AACRsE,MAAAA,KAAK,EAAErD,IAAI,CAAC,GAAD;AADH;AAFN,GA5B2B;AAkCrC8D,EAAAA,UAAU,EAAE;AACRT,IAAAA,KAAK,EAAE,qBADC;AAERC,IAAAA,UAAU,EAAE,MAFJ;AAGR,eAAW;AACPL,MAAAA,eAAe,EAAElE,OAAO,CAAC,SAAD,EAAY,GAAZ;AADjB;AAHH;AAlCyB,CAAZ,CAAD,CAA5B;AA2CA,eAAe,SAASqH,IAAT,GAAgB;AAAA;;AAC3B,QAAM3E,OAAO,GAAG4D,SAAS,EAAzB;AACA,QAAM,CAAC5E,KAAD,EAAQ4F,QAAR,IAAoB1H,KAAK,CAAC2H,QAAN,CAAe,KAAf,CAA1B;AACA,QAAM,CAAC/F,OAAD,EAAUgG,UAAV,IAAwB5H,KAAK,CAAC2H,QAAN,CAAe,UAAf,CAA9B;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0B9H,KAAK,CAAC2H,QAAN,CAAe,EAAf,CAAhC;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBhI,KAAK,CAAC2H,QAAN,CAAe,CAAf,CAAxB;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgClI,KAAK,CAAC2H,QAAN,CAAe,CAAf,CAAtC,CAN2B,CAO3B;;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BpI,KAAK,CAAC2H,QAAN,CAAe,EAAf,CAApC;AACA,QAAM,CAACU,iBAAD,EAAoBC,oBAApB,IAA4CtI,KAAK,CAAC2H,QAAN,CAAe,EAAf,CAAlD,CAT2B,CAW3B;;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4BxI,KAAK,CAAC2H,QAAN,CAAe,IAAf,CAAlC;AACA,QAAM,CAACc,UAAD,EAAanD,aAAb,IAA8BtF,KAAK,CAAC2H,QAAN,CAAe,EAAf,CAApC;AACA,QAAM,CAACe,aAAD,EAAgBC,gBAAhB,IAAoC3I,KAAK,CAAC2H,QAAN,CAAe,KAAf,CAA1C;AACA,MAAInC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,EAA6CC,GAA3D;;AAEA,QAAMN,SAAS,GAAG,MAAOqD,QAAP,IAAoB;AAClC,UAAM;AAAE3C,MAAAA;AAAF,QAAY,MAAMzE,QAAQ,CAC3B2E,IADmB,CACd,WADc,EAEnB0C,MAFmB,GAGnBxC,EAHmB,CAGhB,WAHgB,EAGHuC,QAHG,EAInBvC,EAJmB,CAIhB,aAJgB,EAIDb,OAJC,CAAxB;AAKAlE,IAAAA,IAAI,CAACwH,IAAL,CAAU;AACNC,MAAAA,IAAI,EAAE,SADA;AAEN5F,MAAAA,KAAK,EAAE,+BAFD;AAGN6F,MAAAA,iBAAiB,EAAE,KAHb;AAINC,MAAAA,KAAK,EAAE;AAJD,KAAV;AAMAN,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAA,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACA,QAAI1C,KAAJ,EAAW,OAAOO,OAAO,CAACC,GAAR,CAAYR,KAAZ,CAAP;AACd,GAfD;;AAiBA,QAAMiD,iBAAiB,GAAG,YAAY;AAClC,UAAM;AAAEnD,MAAAA,IAAI,EAAEoD,YAAR;AAAsBlD,MAAAA,KAAK,EAAEmD;AAA7B,QACF,MAAM5H,QAAQ,CAAC2E,IAAT,CAAc,sBAAd,EAAsCC,MAAtC,CAA6C,UAA7C,CADV;AAEA,QAAIgD,sBAAJ,EAA4B,OAAO5C,OAAO,CAACC,GAAR,CAAY2C,sBAAZ,CAAP;AAC5Bd,IAAAA,oBAAoB,CAACa,YAAD,CAApB;AACH,GALD;;AAOAnJ,EAAAA,KAAK,CAACC,SAAN,CAAgB,MAAM;AAClBiJ,IAAAA,iBAAiB;AACpB,GAFD,EAEG,EAFH;;AAIA,QAAMG,eAAe,GAAIC,GAAD,IAAS;AAC7B/D,IAAAA,SAAS,CAAC+D,GAAG,CAACzD,GAAL,CAAT;AACH,GAFD;;AAIA,QAAM0D,UAAU,GAAIhB,SAAD,IAAe;AAC9BC,IAAAA,YAAY,CAACD,SAAD,CAAZ;AACA,QAAIiB,KAAK,GACLjB,SAAS,CAACkB,OAAV,CAAkB,CAAlB,EAAqBD,KAArB,KAA+B,IAA/B,GACO,SAAQjB,SAAS,CAACkB,OAAV,CAAkB,CAAlB,EAAqBD,KAAM,EAD1C,GAEM,EAHV;AAIA,QAAIE,UAAU,GACVnB,SAAS,CAACkB,OAAV,CAAkB,CAAlB,EAAqBC,UAArB,KAAoC,IAApC,GACO,WAAUnB,SAAS,CAACkB,OAAV,CAAkB,CAAlB,EAAqBC,UAAW,EADjD,GAEM,EAHV;AAIApI,IAAAA,IAAI,CAACwH,IAAL,CAAU;AACNlC,MAAAA,QAAQ,EAAE,QADJ;AAENzD,MAAAA,KAAK,EAAG,OAAMoF,SAAS,CAACoB,IAAK,IAAGpB,SAAS,CAACqB,QAAS,EAF7C;AAGNC,MAAAA,IAAI,EACC,aAAYtB,SAAS,CAACuB,KAAM,MAA7B,GACC,gBAAevB,SAAS,CAACwB,YAAa,MADvC,GAEC,iBACGxB,SAAS,CAACkB,OAAV,CAAkB,CAAlB,EAAqBO,MAArB,GACA,GADA,GAEAzB,SAAS,CAACkB,OAAV,CAAkB,CAAlB,EAAqBQ,aACxB,MAND,GAOC,MAAKT,KAAK,GAAG,GAAR,GAAcE,UAAW,MAP/B,GAQC,MAAKnB,SAAS,CAACkB,OAAV,CAAkB,CAAlB,EAAqBS,UAArB,CAAgCP,IAAK,MAR3C,GASC,MAAKpB,SAAS,CAACkB,OAAV,CAAkB,CAAlB,EAAqBS,UAArB,CAAgCC,MAAhC,CAAuCR,IAAK,MAbhD;AAcNS,MAAAA,QAAQ,EAAE7B,SAAS,CAAC8B,UAdd;AAeNC,MAAAA,UAAU,EAAE,GAfN;AAgBNC,MAAAA,WAAW,EAAE,GAhBP;AAiBNC,MAAAA,QAAQ,EAAE;AAjBJ,KAAV;AAmBH,GA7BD;;AA+BA,QAAMC,iBAAiB,GAAG,CAACvH,KAAD,EAAQD,QAAR,KAAqB;AAC3C,UAAMyH,KAAK,GAAG9I,OAAO,KAAKqB,QAAZ,IAAwBnB,KAAK,KAAK,KAAhD;AACA4F,IAAAA,QAAQ,CAACgD,KAAK,GAAG,MAAH,GAAY,KAAlB,CAAR;AACA9C,IAAAA,UAAU,CAAC3E,QAAD,CAAV;AACH,GAJD;;AAMA,QAAM0H,oBAAoB,GAAIzH,KAAD,IAAW;AACpC,QAAIA,KAAK,CAAC0H,MAAN,CAAaC,OAAjB,EAA0B;AACtB,YAAMC,YAAY,GAAGrC,UAAU,CAACtG,GAAX,CAAgB4I,CAAD,IAAOA,CAAC,CAACpB,IAAxB,CAArB;AACA7B,MAAAA,WAAW,CAACgD,YAAD,CAAX;AACA;AACH;;AACDhD,IAAAA,WAAW,CAAC,EAAD,CAAX;AACH,GAPD;;AASA,QAAMkD,gBAAgB,GAAG,CAAC9H,KAAD,EAAQ+H,OAAR,KAAoB;AACzCjD,IAAAA,OAAO,CAACiD,OAAD,CAAP;AACH,GAFD;;AAIA,QAAMC,uBAAuB,GAAIhI,KAAD,IAAW;AACvCgF,IAAAA,cAAc,CAACiD,QAAQ,CAACjI,KAAK,CAAC0H,MAAN,CAAaQ,KAAd,EAAqB,EAArB,CAAT,CAAd;AACApD,IAAAA,OAAO,CAAC,CAAD,CAAP;AACH,GAHD;;AAKA,QAAMqD,UAAU,GAAI1B,IAAD,IAAU9B,QAAQ,CAACyD,OAAT,CAAiB3B,IAAjB,MAA2B,CAAC,CAAzD;;AAEA,QAAM4B,SAAS,GACXtD,WAAW,GACXuD,IAAI,CAACC,GAAL,CAASxD,WAAT,EAAsBQ,UAAU,CAACiD,MAAX,GAAoB3D,IAAI,GAAGE,WAAjD,CAFJ;AAIA,QAAM0D,IAAI,GAAGxD,UAAb;AAEA,sBACI;AAAK,IAAA,SAAS,EAAErF,OAAO,CAACoB,IAAxB;AAAA,2BACI,QAAC,KAAD;AAAO,MAAA,SAAS,EAAEpB,OAAO,CAAC+D,KAA1B;AAAA,8BACI,QAAC,oBAAD;AACI,QAAA,WAAW,EAAEgB,QAAQ,CAAC6D,MAD1B;AAEI,QAAA,aAAa,EAAEpG,aAFnB;AAGI,QAAA,UAAU,EAAEmD,UAHhB;AAII,QAAA,IAAI,EAAEkD,IAJV;AAKI,QAAA,iBAAiB,EAAEtD,iBALvB;AAMI,QAAA,SAAS,EAAEK;AANf;AAAA;AAAA;AAAA;AAAA,cADJ,eASI,QAAC,cAAD;AAAA,+BACI,QAAC,KAAD;AACI,UAAA,SAAS,EAAE5F,OAAO,CAACiE,KADvB;AAEI,6BAAgB,YAFpB;AAGI,UAAA,IAAI,EAAC,OAHT;AAII,wBAAW,gBAJf;AAAA,kCAMI,QAAC,iBAAD;AACI,YAAA,OAAO,EAAEjE,OADb;AAEI,YAAA,WAAW,EAAE+E,QAAQ,CAAC6D,MAF1B;AAGI,YAAA,KAAK,EAAE5J,KAHX;AAII,YAAA,OAAO,EAAEF,OAJb;AAKI,YAAA,gBAAgB,EAAE+I,oBALtB;AAMI,YAAA,aAAa,EAAEF,iBANnB;AAOI,YAAA,QAAQ,EAAEhC,UAAU,CAACiD;AAPzB;AAAA;AAAA;AAAA;AAAA,kBANJ,eAeI,QAAC,SAAD;AAAA,uBACK3J,UAAU,CACP0G,UADO,EAEP5G,aAAa,CAACC,KAAD,EAAQF,OAAR,CAFN,CAAV,CAIIgK,KAJJ,CAKO7D,IAAI,GAAGE,WALd,EAMOF,IAAI,GAAGE,WAAP,GAAqBA,WAN5B,EAQI9F,GARJ,CAQQ,CAACmH,GAAD,EAAMjH,KAAN,KAAgB;AACjB,oBAAMwJ,cAAc,GAAGR,UAAU,CAAC/B,GAAG,CAACK,IAAL,CAAjC;AACA,oBAAMmC,OAAO,GAAI,2BAA0BzJ,KAAM,EAAjD;AAEA,kCACI,QAAC,QAAD;AACI,gBAAA,KAAK,MADT,CAEI;AAFJ;AAGI,gBAAA,IAAI,EAAC,UAHT;AAII,gCAAcwJ,cAJlB;AAKI,gBAAA,QAAQ,EAAE,CAAC,CALf;AAOI,gBAAA,QAAQ,EAAEA,cAPd;AAAA,wCASI,QAAC,SAAD;AACI,kBAAA,KAAK,EAAC,MADV;AAEI,kBAAA,SAAS,EACLxJ,KAAK,GAAG,CAAR,KAAc,CAAd,GACMS,OAAO,CAAC0E,QADd,GAEM,IALd;AAAA,0CAQI,QAAC,OAAD;AACI,oBAAA,KAAK,EAAC,WADV;AAEI,oBAAA,SAAS,EACL1E,OAAO,CAACqC,UAHhB;AAAA,2CAMI,QAAC,UAAD;AAAY,oCAAW,WAAvB;AAAA,6CACI,QAAC,QAAD;AACI,wBAAA,OAAO,EAAE,MACLoE,UAAU,CAACD,GAAD;AAFlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,0BARJ,eAsBI,QAAC,OAAD;AACI,oBAAA,KAAK,EAAC,WADV;AAEI,oBAAA,SAAS,EACLxG,OAAO,CAACqC,UAHhB;AAAA,2CAMI,QAAC,UAAD;AAAY,oCAAW,WAAvB;AAAA,6CACI,QAAC,iBAAD;AACI,wBAAA,OAAO,EAAE,MACLkE,eAAe,CACXC,GADW;AAFvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,0BAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBATJ,eAgDI,QAAC,SAAD;AACI,kBAAA,KAAK,EAAC,QADV;AAEI,kBAAA,SAAS,EACLjH,KAAK,GAAG,CAAR,KAAc,CAAd,GACMS,OAAO,CAAC0E,QADd,GAEM,IALd;AAAA,yCAQI,QAAC,MAAD;AACI,oBAAA,GAAG,EAAC,iBADR;AAEI,oBAAA,GAAG,EAAE8B,GAAG,CAACe;AAFb;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,wBAhDJ,eA6DI,QAAC,SAAD;AACI,kBAAA,SAAS,EACLhI,KAAK,GAAG,CAAR,KAAc,CAAd,GACMS,OAAO,CAAC0E,QADd,GAEM,IAJd;AAMI,kBAAA,SAAS,EAAC,IANd;AAOI,kBAAA,EAAE,EAAEsE,OAPR;AAQI,kBAAA,KAAK,EAAC,KARV;AASI,kBAAA,OAAO,EAAC,SATZ;AAAA,4BAWKxC,GAAG,CAACK;AAXT;AAAA;AAAA;AAAA;AAAA,wBA7DJ,eA0EI,QAAC,SAAD;AACI,kBAAA,KAAK,EAAC,MADV;AAEI,kBAAA,SAAS,EACLtH,KAAK,GAAG,CAAR,KAAc,CAAd,GACMS,OAAO,CAAC0E,QADd,GAEM,IALd;AAAA,4BAQK8B,GAAG,CAACM;AART;AAAA;AAAA;AAAA;AAAA,wBA1EJ,eAoFI,QAAC,SAAD;AACI,kBAAA,SAAS,EACLvH,KAAK,GAAG,CAAR,KAAc,CAAd,GACMS,OAAO,CAAC0E,QADd,GAEM,IAJd;AAAA,yCAOI;AAAA,8BACK8B,GAAG,CAACyC,oBAAJ,CACIL,MADJ,KACe,CADf,gBAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFH,GAIGpC,GAAG,CAACyC,oBAAJ,CAAyB5J,GAAzB,CACK6J,CAAD,iBACI;AAAA,gCACKA,CAAC,CAACrC,IAAF,CACIsC,MADJ,CAEO,CAFP,EAIIC,WAJJ,KAKGF,CAAC,CAACrC,IAAF,CAAOiC,KAAP,CACI,CADJ;AANR;AAAA;AAAA;AAAA;AAAA,4BAFR;AALR;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,wBApFJ;AAAA,iBAMStC,GAAG,CAACK,IANb;AAAA;AAAA;AAAA;AAAA,sBADJ;AAoHH,aAhIJ,CADL,EAkIK4B,SAAS,GAAG,CAAZ,iBACG,QAAC,QAAD;AAAU,cAAA,KAAK,EAAE;AAAEpE,gBAAAA,MAAM,EAAE,KAAKoE;AAAf,eAAjB;AAAA,qCACI,QAAC,SAAD;AAAW,gBAAA,OAAO,EAAE;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAnIR;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cATJ,eAmKI,QAAC,eAAD;AACI,QAAA,SAAS,EAAEzI,OAAO,CAACoB,IADvB;AAEI,QAAA,kBAAkB,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,CAFxB;AAGI,QAAA,SAAS,EAAC,KAHd;AAII,QAAA,KAAK,EAAEuE,UAAU,CAACiD,MAJtB;AAKI,QAAA,WAAW,EAAEzD,WALjB;AAMI,QAAA,IAAI,EAAEF,IANV;AAOI,QAAA,YAAY,EAAEiD,gBAPlB;AAQI,QAAA,mBAAmB,EAAEE;AARzB;AAAA;AAAA;AAAA;AAAA,cAnKJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkLH;;IAlSuBzD,I;UACJf,S;;;MADIe,I","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport InfoIcon from '@material-ui/icons/Info';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport blue from '@material-ui/core/colors/blue';\nimport 'firebase/auth';\nimport Swal from 'sweetalert2';\nimport { Avatar } from '@material-ui/core';\nimport supabase from '../../../supabase.config';\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n    {\n        id: 'actions',\n        numeric: false,\n        disablePadding: false,\n        label: 'ACCIONES',\n    },\n    {\n        id: 'profilePic',\n        numeric: false,\n        disablePadding: false,\n        label: 'FOTO',\n    },\n    { id: 'name', numeric: false, disablePadding: true, label: 'NOMBRE' },\n    {\n        id: 'lastname',\n        numeric: false,\n        disablePadding: false,\n        label: 'APELLIDO',\n    },\n    {\n        id: 'specialties',\n        numeric: false,\n        disablePadding: false,\n        label: 'ESPECIALIDAD',\n    },\n];\n\nfunction EnhancedTableHead(props) {\n    const { classes, order, orderBy, onRequestSort } = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead className={classes.title}>\n            <TableRow>\n                {headCells.map((headCell, index) => (\n                    <TableCell\n                        key={`${headCell.id}-${index}`}\n                        align='left'\n                        padding='default'\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            className={classes.title}\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                                    {order === 'desc'\n                                        ? 'sorted descending'\n                                        : 'sorted ascending'}\n                                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n};\n\n//------------------------makeStyle1---------------------------------------------------------------------------------------\nconst useToolbarStyles = makeStyles((theme) => ({\n    root: {\n        paddingLeft: theme.spacing(0),\n        paddingRight: theme.spacing(0),\n        backgroundColor: lighten('#34a7a1', 0.3),\n\n        //color barra superior '\n    },\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                  color: '#fafafa',\n                  backgroundColor: lighten(blue[500], 0.5), //color barra superior cuando selecciono item\n                  fontWeight: 'bold',\n                  fontSize: '30px',\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: lighten('#34a7a1', 0.3),\n              },\n    title: {\n        flex: '1 1 100%',\n        fontWeight: 'bold',\n        fontSize: '1.4rem',\n        color: '#fafafa',\n        textAlign: 'center',\n    },\n    filters: {\n        display: 'flex',\n    },\n    iconFilter: {\n        color: '#fafafa',\n        fontWeight: 'bold',\n        '&:hover': {\n            backgroundColor: '#34a7a1',\n        },\n    },\n    iconBlock: {\n        color: '#fafafa',\n        fontWeight: 'bold',\n        '&:hover': {\n            backgroundColor: lighten('#34a7a1', 0.8),\n        },\n    },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n    const classes = useToolbarStyles();\n    const { numSelected, setToShowRows, deleteFav } = props;\n    let userDni = JSON.parse(localStorage.getItem('userdata')).dni;\n\n    const fetchFavs = async (userDni) => {\n        const { data: medics, error: errorFetchMedics } = await supabase\n            .from('favorites')\n            .select(\n                'medics(dni, name, lastname, medic_license, email, phone_number, profilePic, medical_specialities (id, name), address(street, street_number, floor, department, localities(id_locality, name, postal_code,states(id,name)))))'\n            )\n            .eq('partner_dni', userDni);\n        let array = [];\n        for (let ad of medics) {\n            array.push(ad.medics);\n        }\n        if (errorFetchMedics) return console.log(errorFetchMedics);\n        setToShowRows(array);\n    };\n\n    useEffect(() => {\n        fetchFavs(userDni);\n        //eslint-disable-next-line\n    }, [deleteFav]);\n\n    return (\n        <Toolbar\n            className={clsx(classes.root, {\n                [classes.highlight]: numSelected > 0,\n            })}\n        >\n            <Typography\n                className={classes.title}\n                variant='h6'\n                id='tableTitle'\n                component='div'\n            >\n                MEDICOS\n            </Typography>\n        </Toolbar>\n    );\n};\n\nEnhancedTableToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired,\n};\n\n//-------------------- EnhancedTableToolbar Style\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        position: 'relative',\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n    title: {\n        color: '#212121',\n        fontWeight: 'bold',\n        backgroundColor: lighten('#34a7a1', 0.6),\n    },\n    rowColor: {\n        backgroundColor: lighten('#e0e0e0', 0.3),\n        ':checked': {\n            color: blue[500],\n        },\n    },\n    iconFilter: {\n        color: 'rgba(0, 0, 0, 0.47)',\n        fontWeight: 'bold',\n        '&:hover': {\n            backgroundColor: lighten('#34a7a1', 0.8),\n        },\n    },\n}));\n\nexport default function Favs() {\n    const classes = useStyles();\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('calories');\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n    //eslint-disable-next-line\n    const [listMedics, setListMedics] = React.useState([]);\n    const [medicSpecialities, setMedicSpecialities] = React.useState([]);\n\n    //eslint-disable-next-line\n    const [medicData, setMedicData] = React.useState(null);\n    const [toShowRows, setToShowRows] = React.useState([]);\n    const [deleteFavNoti, setDeleteFavNoti] = React.useState(false);\n    let userDni = JSON.parse(localStorage.getItem('userdata')).dni;\n\n    const deleteFav = async (medicDni) => {\n        const { error } = await supabase\n            .from('favorites')\n            .delete()\n            .eq('medic_dni', medicDni)\n            .eq('partner_dni', userDni);\n        Swal.fire({\n            icon: 'success',\n            title: 'MÃ©dico eliminado de favoritos',\n            showConfirmButton: false,\n            timer: 1500,\n        });\n        setDeleteFavNoti(true);\n        setDeleteFavNoti(false);\n        if (error) return console.log(error);\n    };\n\n    const fetchSpecialities = async () => {\n        const { data: specialities, error: errorFetchSpecialities } =\n            await supabase.from('medical_specialities').select('name, id');\n        if (errorFetchSpecialities) return console.log(errorFetchSpecialities);\n        setMedicSpecialities(specialities);\n    };\n\n    React.useEffect(() => {\n        fetchSpecialities();\n    }, []);\n\n    const handleDeleteFav = (row) => {\n        deleteFav(row.dni);\n    };\n\n    const handleInfo = (medicData) => {\n        setMedicData(medicData);\n        let floor =\n            medicData.address[0].floor !== null\n                ? `Piso: ${medicData.address[0].floor}`\n                : '';\n        let department =\n            medicData.address[0].department !== null\n                ? `Depto.: ${medicData.address[0].department}`\n                : '';\n        Swal.fire({\n            position: 'bottom',\n            title: `Dr. ${medicData.name} ${medicData.lastname}`,\n            html:\n                `<p>Email: ${medicData.email}</p>` +\n                `<p>TelÃ©fono: ${medicData.phone_number}</p>` +\n                `<p>DirecciÃ³n: ${\n                    medicData.address[0].street +\n                    ' ' +\n                    medicData.address[0].street_number\n                }</p>` +\n                `<p>${floor + ' ' + department}</p>` +\n                `<p>${medicData.address[0].localities.name}</p>` +\n                `<p>${medicData.address[0].localities.states.name}</p>`,\n            imageUrl: medicData.profilePic,\n            imageWidth: 300,\n            imageHeight: 300,\n            imageAlt: 'Custom image',\n        });\n    };\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = toShowRows.map((n) => n.name);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const isSelected = (name) => selected.indexOf(name) !== -1;\n\n    const emptyRows =\n        rowsPerPage -\n        Math.min(rowsPerPage, toShowRows.length - page * rowsPerPage);\n\n    const rows = listMedics;\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <EnhancedTableToolbar\n                    numSelected={selected.length}\n                    setToShowRows={setToShowRows}\n                    toShowRows={toShowRows}\n                    rows={rows}\n                    medicSpecialities={medicSpecialities}\n                    deleteFav={deleteFavNoti}\n                />\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby='tableTitle'\n                        size='small'\n                        aria-label='enhanced table'\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            numSelected={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={toShowRows.length}\n                        />\n                        <TableBody>\n                            {stableSort(\n                                toShowRows,\n                                getComparator(order, orderBy)\n                            )\n                                .slice(\n                                    page * rowsPerPage,\n                                    page * rowsPerPage + rowsPerPage\n                                )\n                                .map((row, index) => {\n                                    const isItemSelected = isSelected(row.name);\n                                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                                    return (\n                                        <TableRow\n                                            hover\n                                            // onClick={(event) => handleClick(event, row.name)}\n                                            role='checkbox'\n                                            aria-checked={isItemSelected}\n                                            tabIndex={-1}\n                                            key={row.name}\n                                            selected={isItemSelected}\n                                        >\n                                            <TableCell\n                                                align='left'\n                                                className={\n                                                    index % 2 === 1\n                                                        ? classes.rowColor\n                                                        : null\n                                                }\n                                            >\n                                                <Tooltip\n                                                    title='Mas info.'\n                                                    className={\n                                                        classes.iconFilter\n                                                    }\n                                                >\n                                                    <IconButton aria-label='Mas info.'>\n                                                        <InfoIcon\n                                                            onClick={() =>\n                                                                handleInfo(row)\n                                                            }\n                                                        />\n                                                    </IconButton>\n                                                </Tooltip>\n                                                <Tooltip\n                                                    title='Mas info.'\n                                                    className={\n                                                        classes.iconFilter\n                                                    }\n                                                >\n                                                    <IconButton aria-label='Mas info.'>\n                                                        <DeleteForeverIcon\n                                                            onClick={() =>\n                                                                handleDeleteFav(\n                                                                    row\n                                                                )\n                                                            }\n                                                        />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </TableCell>\n                                            <TableCell\n                                                align='center'\n                                                className={\n                                                    index % 2 === 1\n                                                        ? classes.rowColor\n                                                        : null\n                                                }\n                                            >\n                                                <Avatar\n                                                    alt='Profile Picture'\n                                                    src={row.profilePic}\n                                                />\n                                            </TableCell>\n                                            <TableCell\n                                                className={\n                                                    index % 2 === 1\n                                                        ? classes.rowColor\n                                                        : null\n                                                }\n                                                component='th'\n                                                id={labelId}\n                                                scope='row'\n                                                padding='default'\n                                            >\n                                                {row.name}\n                                            </TableCell>\n                                            <TableCell\n                                                align='left'\n                                                className={\n                                                    index % 2 === 1\n                                                        ? classes.rowColor\n                                                        : null\n                                                }\n                                            >\n                                                {row.lastname}\n                                            </TableCell>\n                                            <TableCell\n                                                className={\n                                                    index % 2 === 1\n                                                        ? classes.rowColor\n                                                        : null\n                                                }\n                                            >\n                                                <ul>\n                                                    {row.medical_specialities\n                                                        .length === 0 ? (\n                                                        <li>Clinica</li>\n                                                    ) : (\n                                                        row.medical_specialities.map(\n                                                            (s) => (\n                                                                <li>\n                                                                    {s.name\n                                                                        .charAt(\n                                                                            0\n                                                                        )\n                                                                        .toUpperCase() +\n                                                                        s.name.slice(\n                                                                            1\n                                                                        )}\n                                                                </li>\n                                                            )\n                                                        )\n                                                    )}\n                                                </ul>\n                                            </TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: 33 * emptyRows }}>\n                                    <TableCell colSpan={10} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    className={classes.root}\n                    rowsPerPageOptions={[5, 10, 15, 20]}\n                    component='div'\n                    count={toShowRows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}