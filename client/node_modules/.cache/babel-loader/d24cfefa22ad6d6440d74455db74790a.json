{"ast":null,"code":"var _jsxFileName = \"/home/alan/Escritorio/Integra/IntegraApp/src/components/Affiliate/UserFamilyMembers/DatosFamiliar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport styles from './DatosFamiliar.module.css';\nimport validator from './Validator'; // import useQuery from '../../../hooks/query';\n\nimport supabase from '../../../supabase.config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DatosFamiliar = () => {\n  _s();\n\n  const [allStates, setAllStates] = useState([]);\n  const [allLocalities, setAllLocalities] = useState([]);\n\n  const provincias = async () => {\n    const {\n      data: Prov,\n      error: errorProv\n    } = await supabase.from('states').select();\n    setAllStates(Prov);\n  };\n\n  const localidades = async provincia => {\n    let idprov = provincia.split('-')[0];\n    const {\n      data: local\n    } = await supabase.from('localities').select('id,name').eq('state_id', Number(idprov));\n    setAllLocalities(local);\n    return local;\n  };\n\n  useEffect(() => {\n    provincias();\n  }, []);\n  const [textInputs, setTextInputs] = useState({\n    first_name: '',\n    last_name: '',\n    occupation: ''\n  });\n  const [dniFamiliar, setDniFamiliar] = useState({\n    dni: ''\n  });\n  const [textInputsNum, setInputsTextNum] = useState({\n    cuil: '',\n    phone_number: '',\n    number: ''\n  });\n  const [textInputsMix, setInputsTextMix] = useState({\n    street_name: ''\n  });\n  const [dateInputs, setDateInputs] = useState({\n    birth_date: ''\n  });\n  const [selectInputs, setSelectInputs] = useState({\n    marital_status: '',\n    gender: '',\n    state: '',\n    locality: '',\n    familyBond: ''\n  });\n  const [emailInputs, setEmailInputs] = useState({\n    email: ''\n  });\n  const [apartmentInput, setApartmentInput] = useState({\n    apartment: ''\n  });\n  const [errors, setErrors] = useState({\n    textErrors: {\n      first_name: '',\n      last_name: '',\n      occupation: ''\n    },\n    textNumErrors: {\n      cuil: '',\n      phone_number: '',\n      number: ''\n    },\n    dniErrors: {\n      dni: ''\n    },\n    textMixErrors: {\n      street_name: ''\n    },\n    dateErrors: {\n      birth_date: ''\n    },\n    selectErrors: {\n      marital_status: '',\n      gender: '',\n      locality: '',\n      state: '',\n      familyBond: ''\n    },\n    emailErrors: {\n      email: ''\n    }\n  }); // let dataQuery = {\n  //     name: useQuery().get('first_name'),\n  //     email: useQuery().get('email'),\n  //     dni: useQuery().get('dni'),\n  //     phone: useQuery().get('phone_number'),\n  // };\n\n  useEffect(() => {\n    const datosFamiliar = JSON.parse(localStorage.getItem('datosFamiliar')); // if (dataQuery) {\n    //     setTextInputs({ ...textInputs, first_name: dataQuery.name });\n    //     setInputsTextNum({\n    //         ...textInputsNum,\n    //         dni: dataQuery.dni,\n    //         phone_number: dataQuery.phone_number,\n    //     });\n    //     setEmailInputs({\n    //         email: dataQuery.email,\n    // });\n    // }\n\n    if (datosFamiliar) {\n      setTextInputs({\n        first_name: datosFamiliar.first_name,\n        last_name: datosFamiliar.last_name,\n        occupation: datosFamiliar.occupation\n      });\n      setInputsTextNum({\n        cuil: datosFamiliar.cuil,\n        phone_number: datosFamiliar.phone_number,\n        number: datosFamiliar.number\n      });\n      setDniFamiliar({\n        dni: datosFamiliar.dni\n      });\n      setInputsTextMix({\n        street_name: datosFamiliar.street_name\n      });\n      setEmailInputs({\n        email: datosFamiliar.email\n      });\n      setDateInputs({\n        birth_date: datosFamiliar.birth_date\n      });\n      setSelectInputs({\n        marital_status: datosFamiliar.marital_status,\n        gender: datosFamiliar.gender,\n        locality: datosFamiliar.locality,\n        state: datosFamiliar.state,\n        familyBond: datosFamiliar.familyBond\n      });\n      setApartmentInput({\n        apartment: datosFamiliar.apartment\n      });\n      setErrors(errors => ({ ...errors,\n        textErrors: validator({\n          first_name: datosFamiliar.first_name,\n          last_name: datosFamiliar.last_name,\n          occupation: datosFamiliar.occupation\n        }, 'text')\n      }));\n      setErrors(errors => ({ ...errors,\n        textNumErrors: validator({\n          cuil: datosFamiliar.cuil,\n          phone_number: datosFamiliar.phone_number,\n          number: datosFamiliar.number\n        }, 'number') //dni: datosFamiliar.dni,\n\n      }));\n      setErrors(errors => ({ ...errors,\n        textMixErrors: validator({\n          street_name: datosFamiliar.street_name\n        }, 'mix')\n      }));\n      setErrors(errors => ({ ...errors,\n        dateErrors: validator({\n          birth_date: datosFamiliar.birth_date\n        }, 'date')\n      }));\n      setErrors(errors => ({ ...errors,\n        emailErrors: validator({\n          email: datosFamiliar.email\n        }, 'email')\n      }));\n      setErrors(errors => ({ ...errors,\n        selectErrors: validator({\n          marital_status: datosFamiliar.marital_status,\n          gender: datosFamiliar.gender,\n          locality: datosFamiliar.locality,\n          state: datosFamiliar.state,\n          familyBond: datosFamiliar.familyBond\n        }, 'radio')\n      }), setErrors(errors => ({ ...errors,\n        dniErrors: validateDni({\n          dni: datosFamiliar.dni\n        })\n      })));\n    }\n  }, []);\n\n  function saveInLocalStorage() {\n    localStorage.setItem('datosFamiliar', JSON.stringify({ ...textInputs,\n      ...dniFamiliar,\n      ...textInputsNum,\n      ...textInputsMix,\n      ...dateInputs,\n      ...emailInputs,\n      ...selectInputs,\n      ...apartmentInput\n    }));\n    localStorage.setItem('errorsFamiliar', JSON.stringify({ ...errors\n    }));\n  }\n\n  const handleTextChange = e => {\n    setTextInputs({ ...textInputs,\n      [e.target.name]: e.target.value\n    });\n    setErrors({ ...errors,\n      textErrors: validator({ ...textInputs,\n        [e.target.name]: e.target.value\n      }, 'text')\n    });\n  };\n\n  const handleTextNumberChange = e => {\n    setInputsTextNum({ ...textInputsNum,\n      [e.target.name]: e.target.value\n    });\n    setErrors({ ...errors,\n      textNumErrors: validator({ ...textInputsNum,\n        [e.target.name]: e.target.value\n      }, 'number')\n    });\n  };\n\n  const handleTextMixChange = e => {\n    setInputsTextMix({ ...textInputsMix,\n      [e.target.name]: e.target.value\n    });\n    setErrors({ ...errors,\n      textMixErrors: validator({ ...textInputsMix,\n        [e.target.name]: e.target.value\n      }, 'mix')\n    });\n  };\n\n  const handleDateChange = e => {\n    setDateInputs({ ...dateInputs,\n      [e.target.name]: e.target.value\n    });\n    setErrors({ ...errors,\n      dateErrors: validator({ ...dateInputs,\n        [e.target.name]: e.target.value\n      }, 'date')\n    });\n  };\n\n  const handleSelectChange = e => {\n    setSelectInputs({ ...selectInputs,\n      [e.target.name]: e.target.value\n    });\n    setErrors({ ...errors,\n      selectErrors: validator({ ...selectInputs,\n        [e.target.name]: e.target.value\n      }, 'radio')\n    });\n  };\n\n  const handleEmailChange = e => {\n    setEmailInputs({ ...emailInputs,\n      [e.target.name]: e.target.value\n    });\n    setErrors({ ...errors,\n      emailErrors: validator({ ...emailInputs,\n        [e.target.name]: e.target.value\n      }, 'email')\n    });\n  };\n\n  const handleDni = e => {\n    setDniFamiliar({\n      [e.target.name]: e.target.value\n    });\n    setErrors({ ...errors,\n      dniErrors: validateDni({\n        [e.target.name]: e.target.value\n      })\n    });\n  };\n\n  const validateDni = input => {\n    if (/^\\d*$/.test(input.dni) && input.dni.toString().length <= 8) return {\n      dniComplete: true\n    };else return {\n      dni: 'El dni debe tener menos de 8 digitos'\n    };\n  };\n\n  useEffect(() => {\n    localidades(selectInputs.state);\n  }, [selectInputs.state]);\n  const states = allStates.map(s => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: `${s.id}-${s.name}`,\n      children: s.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 16\n    }, this);\n  }); //1-buenos aires\n\n  const localities = allLocalities && allLocalities // .filter((l) => l.state_id == selectInputs.state.split('-')[0])\n  .map(l => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: `${l.id}-${l.name}`,\n      children: l.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 24\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.form,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.personalData,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.firstColumn,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: \"Datos del familiar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.input,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"first_name-input\",\n            label: \"Nombre\",\n            type: \"text\",\n            name: \"first_name\",\n            autoComplete: \"off\",\n            value: textInputs.first_name,\n            variant: \"outlined\",\n            onChange: e => handleTextChange(e),\n            ...(errors.textErrors.first_name && {\n              error: !!errors.textErrors.first_name,\n              helperText: 'Nombre invalido'\n            }),\n            onBlur: saveInLocalStorage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.input,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"last_name-input\",\n            label: \"Apellido\",\n            type: \"text\",\n            name: \"last_name\",\n            autoComplete: \"off\",\n            value: textInputs.last_name,\n            variant: \"outlined\",\n            onChange: e => handleTextChange(e),\n            ...(errors.textErrors.last_name && {\n              error: !!errors.textErrors.last_name,\n              helperText: 'Nombre invalido'\n            }),\n            onBlur: saveInLocalStorage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.input,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"outlined\",\n            error: errors.selectErrors.gender,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"gender-select\",\n              children: \"Sexo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              native: true,\n              value: selectInputs.gender,\n              onChange: e => handleSelectChange(e),\n              label: \"Genero\",\n              inputProps: {\n                name: 'gender',\n                id: 'gender-select',\n                style: {\n                  width: '177px'\n                }\n              },\n              onBlur: saveInLocalStorage,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                \"aria-label\": \"None\",\n                value: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 'Masculino',\n                children: \"Masculino\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 'Femenino',\n                children: \"Femenino\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 'Otro',\n                children: \"Otro\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.input,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"dni-input\",\n            label: \"DNI\",\n            type: \"text\",\n            name: \"dni\",\n            autoComplete: \"off\",\n            value: dniFamiliar.dni,\n            variant: \"outlined\",\n            onChange: handleDni,\n            ...(errors.dniErrors.dni && {\n              error: !!errors.dniErrors.dni,\n              helperText: 'Dni invalido'\n            }),\n            inputProps: {\n              maxLength: 8\n            },\n            onBlur: saveInLocalStorage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.input,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"cuil-input\",\n            label: \"CUIL\",\n            type: \"text\",\n            name: \"cuil\",\n            autoComplete: \"off\",\n            value: textInputsNum.cuil,\n            variant: \"outlined\",\n            onChange: e => handleTextNumberChange(e),\n            ...(errors.textNumErrors.cuil && {\n              error: !!errors.textNumErrors.cuil,\n              helperText: 'CUIL invalida.'\n            }),\n            onBlur: saveInLocalStorage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.input,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"phone-input\",\n            label: \"Tel\\xE9fono\",\n            type: \"text\",\n            name: \"phone_number\",\n            autoComplete: \"off\",\n            value: textInputsNum.phone_number,\n            variant: \"outlined\",\n            onChange: e => handleTextNumberChange(e),\n            ...(errors.textNumErrors.phone_number && {\n              error: !!errors.textNumErrors.phone_number,\n              helperText: 'Teléfono invalido'\n            }),\n            inputProps: {\n              maxLength: 12\n            },\n            onBlur: saveInLocalStorage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.secondColumn,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: ` `\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.input,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"outlined\",\n            error: errors.selectErrors.familyBond,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"familybond-select\",\n              children: \"Parentesco\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              native: true,\n              value: selectInputs.familyBond,\n              onChange: e => handleSelectChange(e),\n              label: \"Parentesco\",\n              inputProps: {\n                name: 'familyBond',\n                id: 'familybond-select',\n                style: {\n                  width: '177px'\n                }\n              },\n              onBlur: saveInLocalStorage,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 'conyuge',\n                children: \"C\\xF3nyuge\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 'concubino/a',\n                children: \"Concubino/a\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 'hijo/a',\n                children: \"Hijo/a\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 'Otro',\n                children: \"Otro\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.input,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"mail-input\",\n            label: \"Email\",\n            type: \"text\",\n            name: \"email\",\n            autoComplete: \"off\",\n            value: emailInputs.email,\n            variant: \"outlined\",\n            onChange: e => handleEmailChange(e),\n            ...(errors.emailErrors.email && {\n              error: !!errors.emailErrors.email,\n              helperText: 'Email invalido'\n            }),\n            onBlur: saveInLocalStorage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.input,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"occupation-input\",\n            label: \"Ocupacion\",\n            type: \"text\",\n            name: \"occupation\",\n            autoComplete: \"off\",\n            value: textInputs.occupation,\n            variant: \"outlined\",\n            onChange: e => handleTextChange(e),\n            ...(errors.textErrors.occupation && {\n              error: !!errors.textErrors.occupation,\n              helperText: 'Debe ingresar una ocupacion'\n            }),\n            onBlur: saveInLocalStorage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.input,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"outlined\",\n            error: errors.selectErrors.marital_status,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"marital_status-select\",\n              children: \"Estado civil\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              native: true,\n              value: selectInputs.marital_status,\n              onChange: e => handleSelectChange(e),\n              label: \"Estado civil\",\n              inputProps: {\n                name: 'marital_status',\n                id: 'marital_status-select',\n                style: {\n                  width: '177px'\n                }\n              },\n              onBlur: saveInLocalStorage,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                \"aria-label\": \"None\",\n                value: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 541,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 'Casado/a',\n                children: \"Casado/a\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 'Soltero/a',\n                children: \"Soltero/a\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.input,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"birth\",\n            label: \"Birthday\",\n            name: \"birth_date\",\n            type: \"date\",\n            variant: \"outlined\" // style={{width:'177px'}}\n            ,\n            InputLabelProps: {\n              shrink: true\n            },\n            onChange: handleDateChange,\n            value: dateInputs.birth_date,\n            error: !!errors.dateErrors.birth_date,\n            helperText: errors.dateErrors.birth_date && errors.dateErrors.birth_date,\n            onBlur: saveInLocalStorage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.addressData,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"\",\n        children: \"Direcci\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.input,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"street_name-input\",\n          label: \"Calle\",\n          type: \"text\",\n          name: \"street_name\",\n          autoComplete: \"off\",\n          value: textInputsMix.street_name,\n          variant: \"outlined\",\n          onChange: e => handleTextMixChange(e),\n          ...(errors.textMixErrors.street_name && {\n            error: !!errors.textMixErrors.street_name,\n            helperText: 'Calle invalida'\n          }),\n          onBlur: saveInLocalStorage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.input,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"number-input\",\n          label: \"Numero\",\n          type: \"text\",\n          name: \"number\",\n          autoComplete: \"off\",\n          value: textInputsNum.number,\n          variant: \"outlined\",\n          onChange: e => handleTextNumberChange(e),\n          ...(errors.textNumErrors.number && {\n            error: !!errors.textNumErrors.number,\n            helperText: 'Numero invalido'\n          }),\n          onBlur: saveInLocalStorage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.input,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"floor-input\",\n          label: \"Piso\",\n          type: \"text\",\n          name: \"floor\",\n          autoComplete: \"off\",\n          value: apartmentInput.floor,\n          variant: \"outlined\",\n          onChange: e => setApartmentInput({\n            [e.target.name]: e.target.value\n          }),\n          onBlur: saveInLocalStorage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.input,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"apartment-input\",\n          label: \"Depto\",\n          type: \"text\",\n          name: \"apartment\",\n          autoComplete: \"off\",\n          value: apartmentInput.apartment,\n          variant: \"outlined\",\n          onChange: e => setApartmentInput({\n            [e.target.name]: e.target.value\n          }),\n          onBlur: saveInLocalStorage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.input,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"State-select\",\n            children: \"Provincia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            native: true,\n            value: selectInputs.state,\n            onChange: e => handleSelectChange(e),\n            label: \"Provincia\",\n            name: \"state\",\n            InputLabelProps: {\n              shrink: true\n            },\n            inputProps: {\n              id: 'state-select',\n              style: {\n                width: '177px'\n              }\n            },\n            onBlur: saveInLocalStorage,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              \"aria-label\": \"None\",\n              value: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 660,\n              columnNumber: 29\n            }, this), states]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.input,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"locality-select\",\n            children: \"Localidad\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            native: true,\n            value: selectInputs.locality,\n            onChange: e => handleSelectChange(e),\n            label: \"Localidad\",\n            name: \"locality\",\n            InputLabelProps: {\n              shrink: true\n            },\n            inputProps: {\n              id: 'locality-select',\n              style: {\n                width: '177px'\n              }\n            },\n            onBlur: saveInLocalStorage,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              \"aria-label\": \"None\",\n              value: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 685,\n              columnNumber: 29\n            }, this), localities]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 336,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DatosFamiliar, \"9kK7E+s6pO1wkXgwGzRUgKCMKNw=\");\n\n_c = DatosFamiliar;\nexport default DatosFamiliar;\n\nvar _c;\n\n$RefreshReg$(_c, \"DatosFamiliar\");","map":{"version":3,"sources":["/home/alan/Escritorio/Integra/IntegraApp/src/components/Affiliate/UserFamilyMembers/DatosFamiliar.jsx"],"names":["React","useEffect","useState","Select","TextField","InputLabel","FormControl","styles","validator","supabase","DatosFamiliar","allStates","setAllStates","allLocalities","setAllLocalities","provincias","data","Prov","error","errorProv","from","select","localidades","provincia","idprov","split","local","eq","Number","textInputs","setTextInputs","first_name","last_name","occupation","dniFamiliar","setDniFamiliar","dni","textInputsNum","setInputsTextNum","cuil","phone_number","number","textInputsMix","setInputsTextMix","street_name","dateInputs","setDateInputs","birth_date","selectInputs","setSelectInputs","marital_status","gender","state","locality","familyBond","emailInputs","setEmailInputs","email","apartmentInput","setApartmentInput","apartment","errors","setErrors","textErrors","textNumErrors","dniErrors","textMixErrors","dateErrors","selectErrors","emailErrors","datosFamiliar","JSON","parse","localStorage","getItem","validateDni","saveInLocalStorage","setItem","stringify","handleTextChange","e","target","name","value","handleTextNumberChange","handleTextMixChange","handleDateChange","handleSelectChange","handleEmailChange","handleDni","input","test","toString","length","dniComplete","states","map","s","id","localities","l","form","personalData","firstColumn","helperText","style","width","maxLength","secondColumn","shrink","addressData","floor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport styles from './DatosFamiliar.module.css';\nimport validator from './Validator';\n// import useQuery from '../../../hooks/query';\nimport supabase from '../../../supabase.config';\n\nconst DatosFamiliar = () => {\n    const [allStates, setAllStates] = useState([]);\n    const [allLocalities, setAllLocalities] = useState([]);\n\n    const provincias = async () => {\n        const { data: Prov, error: errorProv } = await supabase\n            .from('states')\n            .select();\n        setAllStates(Prov);\n    };\n    const localidades = async (provincia) => {\n        let idprov = provincia.split('-')[0];\n        const { data: local } = await supabase\n            .from('localities')\n            .select('id,name')\n            .eq('state_id', Number(idprov));\n        setAllLocalities(local);\n\n        return local;\n    };\n\n    useEffect(() => {\n        provincias();\n    }, []);\n\n    const [textInputs, setTextInputs] = useState({\n        first_name: '',\n        last_name: '',\n        occupation: '',\n    });\n    const [dniFamiliar, setDniFamiliar] = useState({ dni: '' });\n    const [textInputsNum, setInputsTextNum] = useState({\n        cuil: '',\n        phone_number: '',\n        number: '',\n    });\n    const [textInputsMix, setInputsTextMix] = useState({\n        street_name: '',\n    });\n    const [dateInputs, setDateInputs] = useState({\n        birth_date: '',\n    });\n    const [selectInputs, setSelectInputs] = useState({\n        marital_status: '',\n        gender: '',\n        state: '',\n        locality: '',\n        familyBond: '',\n    });\n    const [emailInputs, setEmailInputs] = useState({ email: '' });\n    const [apartmentInput, setApartmentInput] = useState({ apartment: '' });\n    const [errors, setErrors] = useState({\n        textErrors: {\n            first_name: '',\n            last_name: '',\n            occupation: '',\n        },\n        textNumErrors: {\n            cuil: '',\n            phone_number: '',\n            number: '',\n        },\n        dniErrors: {\n            dni: '',\n        },\n        textMixErrors: {\n            street_name: '',\n        },\n        dateErrors: { birth_date: '' },\n        selectErrors: {\n            marital_status: '',\n            gender: '',\n            locality: '',\n            state: '',\n            familyBond: '',\n        },\n        emailErrors: { email: '' },\n    });\n    // let dataQuery = {\n    //     name: useQuery().get('first_name'),\n    //     email: useQuery().get('email'),\n    //     dni: useQuery().get('dni'),\n    //     phone: useQuery().get('phone_number'),\n    // };\n    useEffect(() => {\n        const datosFamiliar = JSON.parse(localStorage.getItem('datosFamiliar'));\n\n        // if (dataQuery) {\n        //     setTextInputs({ ...textInputs, first_name: dataQuery.name });\n        //     setInputsTextNum({\n        //         ...textInputsNum,\n        //         dni: dataQuery.dni,\n        //         phone_number: dataQuery.phone_number,\n        //     });\n        //     setEmailInputs({\n        //         email: dataQuery.email,\n        // });\n        // }\n        if (datosFamiliar) {\n            setTextInputs({\n                first_name: datosFamiliar.first_name,\n                last_name: datosFamiliar.last_name,\n                occupation: datosFamiliar.occupation,\n            });\n            setInputsTextNum({\n                cuil: datosFamiliar.cuil,\n                phone_number: datosFamiliar.phone_number,\n                number: datosFamiliar.number,\n            });\n            setDniFamiliar({\n                dni: datosFamiliar.dni,\n            });\n            setInputsTextMix({\n                street_name: datosFamiliar.street_name,\n            });\n            setEmailInputs({\n                email: datosFamiliar.email,\n            });\n            setDateInputs({\n                birth_date: datosFamiliar.birth_date,\n            });\n            setSelectInputs({\n                marital_status: datosFamiliar.marital_status,\n                gender: datosFamiliar.gender,\n                locality: datosFamiliar.locality,\n                state: datosFamiliar.state,\n                familyBond: datosFamiliar.familyBond,\n            });\n            setApartmentInput({ apartment: datosFamiliar.apartment });\n\n            setErrors((errors) => ({\n                ...errors,\n                textErrors: validator(\n                    {\n                        first_name: datosFamiliar.first_name,\n                        last_name: datosFamiliar.last_name,\n                        occupation: datosFamiliar.occupation,\n                    },\n                    'text'\n                ),\n            }));\n            setErrors((errors) => ({\n                ...errors,\n                textNumErrors: validator(\n                    {\n                        cuil: datosFamiliar.cuil,\n                        phone_number: datosFamiliar.phone_number,\n                        number: datosFamiliar.number,\n                    },\n                    'number'\n                ),\n\n                //dni: datosFamiliar.dni,\n            }));\n            setErrors((errors) => ({\n                ...errors,\n                textMixErrors: validator(\n                    {\n                        street_name: datosFamiliar.street_name,\n                    },\n                    'mix'\n                ),\n            }));\n            setErrors((errors) => ({\n                ...errors,\n                dateErrors: validator(\n                    {\n                        birth_date: datosFamiliar.birth_date,\n                    },\n                    'date'\n                ),\n            }));\n            setErrors((errors) => ({\n                ...errors,\n                emailErrors: validator(\n                    {\n                        email: datosFamiliar.email,\n                    },\n                    'email'\n                ),\n            }));\n            setErrors(\n                (errors) => ({\n                    ...errors,\n                    selectErrors: validator(\n                        {\n                            marital_status: datosFamiliar.marital_status,\n                            gender: datosFamiliar.gender,\n                            locality: datosFamiliar.locality,\n                            state: datosFamiliar.state,\n                            familyBond: datosFamiliar.familyBond,\n                        },\n                        'radio'\n                    ),\n                }),\n                setErrors((errors) => ({\n                    ...errors,\n                    dniErrors: validateDni({\n                        dni: datosFamiliar.dni,\n                    }),\n                }))\n            );\n        }\n    }, []);\n\n    function saveInLocalStorage() {\n        localStorage.setItem(\n            'datosFamiliar',\n            JSON.stringify({\n                ...textInputs,\n                ...dniFamiliar,\n                ...textInputsNum,\n                ...textInputsMix,\n                ...dateInputs,\n                ...emailInputs,\n                ...selectInputs,\n                ...apartmentInput,\n            })\n        );\n        localStorage.setItem('errorsFamiliar', JSON.stringify({ ...errors }));\n    }\n\n    const handleTextChange = (e) => {\n        setTextInputs({ ...textInputs, [e.target.name]: e.target.value });\n\n        setErrors({\n            ...errors,\n            textErrors: validator(\n                { ...textInputs, [e.target.name]: e.target.value },\n                'text'\n            ),\n        });\n    };\n    const handleTextNumberChange = (e) => {\n        setInputsTextNum({ ...textInputsNum, [e.target.name]: e.target.value });\n\n        setErrors({\n            ...errors,\n            textNumErrors: validator(\n                { ...textInputsNum, [e.target.name]: e.target.value },\n                'number'\n            ),\n        });\n    };\n    const handleTextMixChange = (e) => {\n        setInputsTextMix({ ...textInputsMix, [e.target.name]: e.target.value });\n\n        setErrors({\n            ...errors,\n            textMixErrors: validator(\n                { ...textInputsMix, [e.target.name]: e.target.value },\n                'mix'\n            ),\n        });\n    };\n\n    const handleDateChange = (e) => {\n        setDateInputs({ ...dateInputs, [e.target.name]: e.target.value });\n\n        setErrors({\n            ...errors,\n            dateErrors: validator(\n                { ...dateInputs, [e.target.name]: e.target.value },\n                'date'\n            ),\n        });\n    };\n\n    const handleSelectChange = (e) => {\n        setSelectInputs({ ...selectInputs, [e.target.name]: e.target.value });\n\n        setErrors({\n            ...errors,\n            selectErrors: validator(\n                { ...selectInputs, [e.target.name]: e.target.value },\n                'radio'\n            ),\n        });\n    };\n\n    const handleEmailChange = (e) => {\n        setEmailInputs({\n            ...emailInputs,\n            [e.target.name]: e.target.value,\n        });\n        setErrors({\n            ...errors,\n            emailErrors: validator(\n                { ...emailInputs, [e.target.name]: e.target.value },\n                'email'\n            ),\n        });\n    };\n    const handleDni = (e) => {\n        setDniFamiliar({\n            [e.target.name]: e.target.value,\n        });\n        setErrors({\n            ...errors,\n            dniErrors: validateDni({ [e.target.name]: e.target.value }),\n        });\n    };\n\n    const validateDni = (input) => {\n        if (/^\\d*$/.test(input.dni) && input.dni.toString().length <= 8)\n            return { dniComplete: true };\n        else return { dni: 'El dni debe tener menos de 8 digitos' };\n    };\n\n    useEffect(() => {\n        localidades(selectInputs.state);\n    }, [selectInputs.state]);\n\n    const states = allStates.map((s) => {\n        return <option value={`${s.id}-${s.name}`}>{s.name}</option>;\n    });\n    //1-buenos aires\n    const localities =\n        allLocalities &&\n        allLocalities\n            // .filter((l) => l.state_id == selectInputs.state.split('-')[0])\n            .map((l) => {\n                return <option value={`${l.id}-${l.name}`}>{l.name}</option>;\n            });\n    return (\n        <div className={styles.form}>\n            <div className={styles.personalData}>\n                <div className={styles.firstColumn}>\n                    <label htmlFor=''>Datos del familiar</label>\n                    <div className={styles.input}>\n                        <TextField\n                            id='first_name-input'\n                            label='Nombre'\n                            type='text'\n                            name='first_name'\n                            autoComplete='off'\n                            value={textInputs.first_name}\n                            variant='outlined'\n                            onChange={(e) => handleTextChange(e)}\n                            {...(errors.textErrors.first_name && {\n                                error: !!errors.textErrors.first_name,\n                                helperText: 'Nombre invalido',\n                            })}\n                            onBlur={saveInLocalStorage}\n                        />\n                    </div>\n                    <div className={styles.input}>\n                        <TextField\n                            id='last_name-input'\n                            label='Apellido'\n                            type='text'\n                            name='last_name'\n                            autoComplete='off'\n                            value={textInputs.last_name}\n                            variant='outlined'\n                            onChange={(e) => handleTextChange(e)}\n                            {...(errors.textErrors.last_name && {\n                                error: !!errors.textErrors.last_name,\n                                helperText: 'Nombre invalido',\n                            })}\n                            onBlur={saveInLocalStorage}\n                        />\n                    </div>\n                    <div className={styles.input}>\n                        <FormControl\n                            variant='outlined'\n                            error={errors.selectErrors.gender}\n                        >\n                            <InputLabel htmlFor='gender-select'>\n                                Sexo\n                            </InputLabel>\n                            <Select\n                                native\n                                value={selectInputs.gender}\n                                onChange={(e) => handleSelectChange(e)}\n                                label='Genero'\n                                inputProps={{\n                                    name: 'gender',\n                                    id: 'gender-select',\n                                    style: { width: '177px' },\n                                }}\n                                onBlur={saveInLocalStorage}\n                            >\n                                <option aria-label='None' value='' />\n                                <option value={'Masculino'}>Masculino</option>\n                                <option value={'Femenino'}>Femenino</option>\n                                <option value={'Otro'}>Otro</option>\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <div className={styles.input}>\n                        <TextField\n                            id='dni-input'\n                            label='DNI'\n                            type='text'\n                            name='dni'\n                            autoComplete='off'\n                            value={dniFamiliar.dni}\n                            variant='outlined'\n                            onChange={handleDni}\n                            {...(errors.dniErrors.dni && {\n                                error: !!errors.dniErrors.dni,\n                                helperText: 'Dni invalido',\n                            })}\n                            inputProps={{ maxLength: 8 }}\n                            onBlur={saveInLocalStorage}\n                        />\n                    </div>\n                    <div className={styles.input}>\n                        <TextField\n                            id='cuil-input'\n                            label='CUIL'\n                            type='text'\n                            name='cuil'\n                            autoComplete='off'\n                            value={textInputsNum.cuil}\n                            variant='outlined'\n                            onChange={(e) => handleTextNumberChange(e)}\n                            {...(errors.textNumErrors.cuil && {\n                                error: !!errors.textNumErrors.cuil,\n                                helperText: 'CUIL invalida.',\n                            })}\n                            onBlur={saveInLocalStorage}\n                        />\n                    </div>\n                    <div className={styles.input}>\n                        <TextField\n                            id='phone-input'\n                            label='Teléfono'\n                            type='text'\n                            name='phone_number'\n                            autoComplete='off'\n                            value={textInputsNum.phone_number}\n                            variant='outlined'\n                            onChange={(e) => handleTextNumberChange(e)}\n                            {...(errors.textNumErrors.phone_number && {\n                                error: !!errors.textNumErrors.phone_number,\n                                helperText: 'Teléfono invalido',\n                            })}\n                            inputProps={{ maxLength: 12 }}\n                            onBlur={saveInLocalStorage}\n                        />\n                    </div>\n                </div>\n                <div className={styles.secondColumn}>\n                    <label>{` `}</label>\n                    <div className={styles.input}>\n                        <FormControl\n                            variant='outlined'\n                            error={errors.selectErrors.familyBond}\n                        >\n                            <InputLabel htmlFor='familybond-select'>\n                                Parentesco\n                            </InputLabel>\n                            <Select\n                                native\n                                value={selectInputs.familyBond}\n                                onChange={(e) => handleSelectChange(e)}\n                                label='Parentesco'\n                                inputProps={{\n                                    name: 'familyBond',\n                                    id: 'familybond-select',\n                                    style: { width: '177px' },\n                                }}\n                                onBlur={saveInLocalStorage}\n                            >\n                                <option value={''}></option>\n                                <option value={'conyuge'}>Cónyuge</option>\n                                <option value={'concubino/a'}>\n                                    Concubino/a\n                                </option>\n                                <option value={'hijo/a'}>Hijo/a</option>\n                                <option value={'Otro'}>Otro</option>\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <div className={styles.input}>\n                        <TextField\n                            id='mail-input'\n                            label='Email'\n                            type='text'\n                            name='email'\n                            autoComplete='off'\n                            value={emailInputs.email}\n                            variant='outlined'\n                            onChange={(e) => handleEmailChange(e)}\n                            {...(errors.emailErrors.email && {\n                                error: !!errors.emailErrors.email,\n                                helperText: 'Email invalido',\n                            })}\n                            onBlur={saveInLocalStorage}\n                        />\n                    </div>\n                    <div className={styles.input}>\n                        <TextField\n                            id='occupation-input'\n                            label='Ocupacion'\n                            type='text'\n                            name='occupation'\n                            autoComplete='off'\n                            value={textInputs.occupation}\n                            variant='outlined'\n                            onChange={(e) => handleTextChange(e)}\n                            {...(errors.textErrors.occupation && {\n                                error: !!errors.textErrors.occupation,\n                                helperText: 'Debe ingresar una ocupacion',\n                            })}\n                            onBlur={saveInLocalStorage}\n                        />\n                    </div>\n                    <div className={styles.input}>\n                        <FormControl\n                            variant='outlined'\n                            error={errors.selectErrors.marital_status}\n                        >\n                            <InputLabel htmlFor='marital_status-select'>\n                                Estado civil\n                            </InputLabel>\n                            <Select\n                                native\n                                value={selectInputs.marital_status}\n                                onChange={(e) => handleSelectChange(e)}\n                                label='Estado civil'\n                                inputProps={{\n                                    name: 'marital_status',\n                                    id: 'marital_status-select',\n                                    style: { width: '177px' },\n                                }}\n                                onBlur={saveInLocalStorage}\n                            >\n                                <option aria-label='None' value='' />\n                                <option value={'Casado/a'}>Casado/a</option>\n                                <option value={'Soltero/a'}>Soltero/a</option>\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <div className={styles.input}>\n                        <TextField\n                            id='birth'\n                            label='Birthday'\n                            name='birth_date'\n                            type='date'\n                            variant='outlined'\n                            // style={{width:'177px'}}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            onChange={handleDateChange}\n                            value={dateInputs.birth_date}\n                            error={!!errors.dateErrors.birth_date}\n                            helperText={\n                                errors.dateErrors.birth_date &&\n                                errors.dateErrors.birth_date\n                            }\n                            onBlur={saveInLocalStorage}\n                        />\n                    </div>\n                </div>\n            </div>\n            <div className={styles.addressData}>\n                <label htmlFor=''>Dirección</label>\n                <div className={styles.input}>\n                    <TextField\n                        id='street_name-input'\n                        label='Calle'\n                        type='text'\n                        name='street_name'\n                        autoComplete='off'\n                        value={textInputsMix.street_name}\n                        variant='outlined'\n                        onChange={(e) => handleTextMixChange(e)}\n                        {...(errors.textMixErrors.street_name && {\n                            error: !!errors.textMixErrors.street_name,\n                            helperText: 'Calle invalida',\n                        })}\n                        onBlur={saveInLocalStorage}\n                    />\n                </div>\n                <div className={styles.input}>\n                    <TextField\n                        id='number-input'\n                        label='Numero'\n                        type='text'\n                        name='number'\n                        autoComplete='off'\n                        value={textInputsNum.number}\n                        variant='outlined'\n                        onChange={(e) => handleTextNumberChange(e)}\n                        {...(errors.textNumErrors.number && {\n                            error: !!errors.textNumErrors.number,\n                            helperText: 'Numero invalido',\n                        })}\n                        onBlur={saveInLocalStorage}\n                    />\n                </div>\n                <div className={styles.input}>\n                    <TextField\n                        id='floor-input'\n                        label='Piso'\n                        type='text'\n                        name='floor'\n                        autoComplete='off'\n                        value={apartmentInput.floor}\n                        variant='outlined'\n                        onChange={(e) =>\n                            setApartmentInput({\n                                [e.target.name]: e.target.value,\n                            })\n                        }\n                        onBlur={saveInLocalStorage}\n                    />\n                </div>\n                <div className={styles.input}>\n                    <TextField\n                        id='apartment-input'\n                        label='Depto'\n                        type='text'\n                        name='apartment'\n                        autoComplete='off'\n                        value={apartmentInput.apartment}\n                        variant='outlined'\n                        onChange={(e) =>\n                            setApartmentInput({\n                                [e.target.name]: e.target.value,\n                            })\n                        }\n                        onBlur={saveInLocalStorage}\n                    />\n                </div>\n                <div className={styles.input}>\n                    <FormControl variant='outlined'>\n                        <InputLabel htmlFor='State-select'>\n                            Provincia\n                        </InputLabel>\n                        <Select\n                            native\n                            value={selectInputs.state}\n                            onChange={(e) => handleSelectChange(e)}\n                            label='Provincia'\n                            name='state'\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            inputProps={{\n                                id: 'state-select',\n                                style: { width: '177px' },\n                            }}\n                            onBlur={saveInLocalStorage}\n                        >\n                            <option aria-label='None' value='' />\n                            {states}\n                        </Select>\n                    </FormControl>\n                </div>\n                <div className={styles.input}>\n                    <FormControl variant='outlined'>\n                        <InputLabel htmlFor='locality-select'>\n                            Localidad\n                        </InputLabel>\n                        <Select\n                            native\n                            value={selectInputs.locality}\n                            onChange={(e) => handleSelectChange(e)}\n                            label='Localidad'\n                            name='locality'\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            inputProps={{\n                                id: 'locality-select',\n                                style: { width: '177px' },\n                            }}\n                            onBlur={saveInLocalStorage}\n                        >\n                            <option aria-label='None' value='' />\n                            {localities}\n                        </Select>\n                    </FormControl>\n                </div>\n            </div>\n        </div>\n    );\n};\nexport default DatosFamiliar;\n"]},"metadata":{},"sourceType":"module"}