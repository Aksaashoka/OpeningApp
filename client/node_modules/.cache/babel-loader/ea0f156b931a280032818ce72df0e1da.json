{"ast":null,"code":"var _jsxFileName = \"/home/alan/Escritorio/Integra/IntegraApp/src/components/Admin/AdminOrders/AdminOrders.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ClearAllIcon from '@material-ui/icons/ClearAll';\nimport EditIcon from '@material-ui/icons/Edit';\nimport blue from '@material-ui/core/colors/blue';\nimport 'firebase/auth';\nimport AdminMedicAdd from '../AdminMedics/AdminMedicAdd';\nimport AdminOrdersEdit from './AdminOrdersEdit';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport PopUp from './AdminOrderPop';\nimport { Avatar, Dialog, DialogTitle, DialogContent, FormControl, InputLabel, Select, Input, DialogActions, TextField } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport calculateAge from '../../../functions/calculateAge';\nimport supabase from '../../../supabase.config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [{\n  id: 'actions',\n  numeric: false,\n  disablePadding: true,\n  label: 'ACCIONES'\n}, {\n  id: 'date',\n  numeric: false,\n  disablePadding: true,\n  label: 'FECHA'\n}, {\n  id: 'lastname',\n  numeric: false,\n  disablePadding: false,\n  label: 'MEDICO'\n}, {\n  id: 'lastname',\n  numeric: false,\n  disablePadding: false,\n  label: 'PACIENTE'\n}, {\n  id: 'dni',\n  numeric: true,\n  disablePadding: false,\n  label: 'DNI SOCIO'\n}, {\n  id: 'status',\n  numeric: false,\n  disablePadding: false,\n  label: 'ESTADO'\n}, {\n  id: 'view',\n  numeric: false,\n  disablePadding: false,\n  label: 'VER'\n}];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableHead, {\n    className: classes.title,\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      children: headCells.map(headCell => /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"left\",\n        padding: \"default\",\n        sortDirection: orderBy === headCell.id ? order : false,\n        children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n          className: classes.title,\n          active: orderBy === headCell.id,\n          direction: orderBy === headCell.id ? order : 'asc',\n          onClick: createSortHandler(headCell.id),\n          children: [headCell.label, orderBy === headCell.id ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.visuallyHidden,\n            children: order === 'desc' ? 'sorted descending' : 'sorted ascending'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 33\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this)\n      }, headCell.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}\n\n_c = EnhancedTableHead;\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n    backgroundColor: lighten('#34a7a1', 0.3)\n  },\n  highlight: theme.palette.type === 'light' ? {\n    color: '#fafafa',\n    backgroundColor: lighten(blue[500], 0.5),\n    //color barra superior cuando selecciono item\n    fontWeight: 'bold',\n    fontSize: '30px'\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: lighten('#34a7a1', 0.3)\n  },\n  title: {\n    flex: '1 1 100%',\n    fontWeight: 'bold',\n    fontSize: '1.4rem',\n    color: '#fafafa',\n    textAlign: 'center'\n  },\n  filters: {\n    display: 'flex'\n  },\n  iconFilter: {\n    color: '#fafafa',\n    fontWeight: 'bold',\n    '&:hover': {\n      backgroundColor: '#34a7a1'\n    }\n  },\n  iconBlock: {\n    color: '#fafafa',\n    fontWeight: 'bold',\n    '&:hover': {\n      backgroundColor: blue[500]\n    }\n  },\n  popup: {\n    color: '#fafafa',\n    backgroundColor: '#2c7f7b',\n    fontWeight: 'bold',\n    fontSize: '30px',\n    marginBottom: '2rem'\n  },\n  popupBtn: {\n    color: '#fafafa',\n    padding: theme.spacing(0.5),\n    border: '3px solid #2c7f7b',\n    backgroundColor: '#2c7f7b',\n    fontWeight: 'bold',\n    fontSize: '15px',\n    '&:hover': {\n      backgroundColor: lighten('#fafafa', 0.2),\n      color: '#2c7f7b',\n      padding: theme.spacing(0.5)\n    }\n  },\n  select: {\n    width: '100%',\n    marginBottom: '2rem'\n  }\n}));\n\nconst EnhancedTableToolbar = props => {\n  _s();\n\n  const classes = useToolbarStyles();\n  const {\n    numSelected,\n    setToShowRows,\n    toShowRows,\n    rows,\n    setRows\n  } = props;\n  const [open, setOpen] = React.useState(false);\n  const [selectedOption, setSelectedOption] = React.useState('');\n  const [selectedState, setSelectedState] = React.useState('activo');\n\n  const handleChange = event => {\n    event.target.name === 'state' ? setSelectedState(event.target.value) && setSelectedOption(event.target.value) : setSelectedOption(event.target.value);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setToShowRows(rows);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    selectedOption === 'state' ? filter(e.target[0].value, e.target[1].value) : filter(e.target[0].value, e.target[2].value);\n  };\n\n  const filter = value => {\n    let show = [];\n    setToShowRows(rows);\n\n    if (value === 'autorizada') {\n      value ? setToShowRows(show = rows.filter(r => r.order_status.name === 'autorizada')) : setToShowRows(rows);\n    } else if (value === 'rechazada') {\n      value ? setToShowRows(show = rows.filter(r => r.order_status.name === 'rechazada')) : setToShowRows(rows);\n    } else if (value === 'en proceso') {\n      value ? setToShowRows(show = rows.filter(r => r.order_status.name === 'en proceso')) : setToShowRows(rows);\n    } else if (value === 'recibida') {\n      value ? setToShowRows(show = rows.filter(r => r.order_status.name === 'recibida')) : setToShowRows(rows);\n    } else setToShowRows(rows);\n\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Toolbar, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.title,\n      variant: \"h6\",\n      id: \"tableTitle\",\n      component: \"div\",\n      children: \"AUTORIZACIONES\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Clear\",\n      onClick: handleClose,\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"reset\",\n        className: classes.iconFilter,\n        children: /*#__PURE__*/_jsxDEV(ClearAllIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Filter list\",\n      onClick: handleClickOpen,\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"filter list\",\n        className: classes.iconFilter,\n        children: /*#__PURE__*/_jsxDEV(FilterListIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      disableBackdropClick: true,\n      disableEscapeKeyDown: true,\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        className: classes.popup,\n        children: \"FILTRADO POR ESTADO:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            className: classes.select,\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              variant: \"outlined\",\n              size: \"medium\",\n              native: true,\n              value: selectedOption,\n              onChange: handleChange,\n              input: /*#__PURE__*/_jsxDEV(Input, {\n                id: \"demo-dialog-native\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 40\n              }, this),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                \"aria-label\": \"None\",\n                value: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"autorizada\",\n                children: \"Autorizada\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"rechazada\",\n                children: \"Rechazada\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"en proceso\",\n                children: \"En proceso\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"recibida\",\n                children: \"Recibida\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            className: classes.popupBtn,\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            className: classes.popupBtn,\n            children: \"Filtrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 282,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EnhancedTableToolbar, \"FFsRRNXzP8TmfJP7LumKNtyZqiw=\", false, function () {\n  return [useToolbarStyles];\n});\n\n_c2 = EnhancedTableToolbar;\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n}; //-------------------- Style Table Orders\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  },\n  title: {\n    color: '#212121',\n    fontWeight: 'bold',\n    backgroundColor: lighten('#34a7a1', 0.6)\n  },\n  rowColor: {\n    backgroundColor: lighten('#e0e0e0', 0.3),\n    ':checked': {\n      color: blue[500]\n    }\n  },\n  iconFilter: {\n    color: 'rgba(0, 0, 0, 0.47)',\n    fontWeight: 'bold',\n    '&:hover': {\n      backgroundColor: lighten('#34a7a1', 0.8)\n    }\n  }\n}));\nexport default function EnhancedTable() {\n  _s2();\n\n  const classes = useStyles();\n  const [status, setStatus] = React.useState([]);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rows, setRows] = React.useState([]);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [listMedics, setListMedics] = React.useState([]);\n  const [medicSpecialities, setMedicSpecialities] = React.useState([]);\n  const [editActive, setEditActive] = React.useState(false);\n  const [data, setData] = React.useState(null);\n  const [toShowRows, setToShowRows] = React.useState([]);\n  const MySwal = withReactContent(Swal);\n  const [row, setRow] = React.useState({\n    date: '',\n    study_name: '',\n    partners: {\n      name: '',\n      lastname: '',\n      dni: ''\n    },\n    medics: {\n      name: '',\n      lastname: ''\n    },\n    medical_consultations: {\n      id: ''\n    },\n    order_status: {\n      name: ''\n    },\n    results: {\n      results: {\n        results: ''\n      }\n    },\n    order_status: {\n      name: ''\n    }\n  });\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = row => {\n    setRow(row);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const fetchOrders = async () => {\n    const {\n      data: orders,\n      error: errorFetchOrders\n    } = await supabase.from('orders').select('id, date, results, study_name, order_status(name), partners(dni, name, lastname), medics(dni, name, lastname), medical_consultations(id) ');\n    orders && setRows(orders);\n  };\n\n  const fetchOrder_status = async () => {\n    const {\n      data: statusDB,\n      error: errorStatus\n    } = await supabase.from('order_status').select('*');\n    setStatus(statusDB);\n  };\n\n  React.useEffect(() => {\n    fetchOrder_status();\n    fetchOrders();\n  }, []);\n  React.useEffect(() => {\n    setToShowRows(rows);\n  }, [rows]);\n\n  const handleEdit = data => {\n    setData(data);\n    setEditActive(true);\n    if (editActive) setEditActive(false);\n  };\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  /* const isSelected = (name) => selected.indexOf(name) !== -1; */\n\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  /*     setToShowRows(rows)\n   */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(EnhancedTableToolbar, {\n        numSelected: selected.length,\n        setToShowRows: setToShowRows,\n        toShowRows: toShowRows,\n        rows: rows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: classes.table,\n          \"aria-labelledby\": \"tableTitle\",\n          size: \"small\",\n          \"aria-label\": \"enhanced table\",\n          children: [/*#__PURE__*/_jsxDEV(EnhancedTableHead, {\n            classes: classes,\n            numSelected: selected.length,\n            order: order,\n            orderBy: orderBy,\n            onSelectAllClick: handleSelectAllClick,\n            onRequestSort: handleRequestSort,\n            rowCount: rows.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [stableSort(toShowRows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n              /* const isItemSelected = isSelected(row.name);\n              const labelId = `enhanced-table-checkbox-${index}`; */\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                onClick: event => handleClick(event, row.name)\n                /* aria-checked={isItemSelected} */\n                ,\n                tabIndex: -1,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  className: index % 2 === 1 ? classes.rowColor : null,\n                  align: \"left\",\n                  children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"Edit\",\n                    className: classes.iconFilter,\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      size: \"small\",\n                      \"aria-label\": \"Edit\",\n                      children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                        onClick: () => handleEdit(row)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 598,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 594,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 588,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 580,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  className: index % 2 === 1 ? classes.rowColor : null,\n                  align: \"left\",\n                  children: row.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 606,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  className: index % 2 === 1 ? classes.rowColor : null,\n                  align: \"left\",\n                  children: [row.medics.name, ' ', row.medics.lastname]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 616,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  className: index % 2 === 1 ? classes.rowColor : null,\n                  align: \"left\",\n                  children: [row.partners.name, ' ', row.partners.lastname]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 627,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  className: index % 2 === 1 ? classes.rowColor : null,\n                  align: \"left\",\n                  children: row.partners.dni\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 639,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  className: index % 2 === 1 ? classes.rowColor : null,\n                  align: \"left\",\n                  children: row.order_status.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 649,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  className: index % 2 === 1 ? classes.rowColor : null,\n                  align: \"left\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    className: classes.iconFilter,\n                    variant: \"outlined\",\n                    onClick: () => handleClickOpen(row),\n                    children: \"\\uD83D\\uDCDD\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 667,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 659,\n                  columnNumber: 45\n                }, this)]\n              }, row.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 41\n              }, this);\n            }), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n              style: {\n                height: 33 * emptyRows\n              },\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 6\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 684,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [5, 10, 25],\n        component: \"div\",\n        count: rows.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onChangePage: handleChangePage,\n        onChangeRowsPerPage: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 13\n    }, this), editActive ? /*#__PURE__*/_jsxDEV(AdminOrdersEdit, {\n      status: status,\n      setEditActive: setEditActive,\n      editActive: editActive,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 701,\n      columnNumber: 17\n    }, this) : null, /*#__PURE__*/_jsxDEV(PopUp, {\n      rows: row,\n      handleClose: handleClose,\n      open: open\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 708,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 533,\n    columnNumber: 9\n  }, this);\n} //recibe l autorizada como value pero no uestra las seleccionadas\n\n_s2(EnhancedTable, \"61NfoiKQd0EOJxgokdEKnZHM9lA=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = EnhancedTable;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"EnhancedTableHead\");\n$RefreshReg$(_c2, \"EnhancedTableToolbar\");\n$RefreshReg$(_c3, \"EnhancedTable\");","map":{"version":3,"sources":["/home/alan/Escritorio/Integra/IntegraApp/src/components/Admin/AdminOrders/AdminOrders.jsx"],"names":["React","PropTypes","clsx","lighten","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","IconButton","Tooltip","DeleteIcon","FilterListIcon","CircularProgress","ClearAllIcon","EditIcon","blue","AdminMedicAdd","AdminOrdersEdit","Swal","withReactContent","PopUp","Avatar","Dialog","DialogTitle","DialogContent","FormControl","InputLabel","Select","Input","DialogActions","TextField","Button","calculateAge","supabase","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","classes","onSelectAllClick","numSelected","rowCount","onRequestSort","createSortHandler","property","event","title","headCell","visuallyHidden","propTypes","object","isRequired","number","func","oneOf","string","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","backgroundColor","highlight","palette","type","color","fontWeight","fontSize","text","primary","flex","textAlign","filters","display","iconFilter","iconBlock","popup","marginBottom","popupBtn","padding","border","select","width","EnhancedTableToolbar","setToShowRows","toShowRows","rows","setRows","open","setOpen","useState","selectedOption","setSelectedOption","selectedState","setSelectedState","handleChange","target","name","value","handleClickOpen","handleClose","handleSubmit","e","preventDefault","filter","show","r","order_status","useStyles","paper","table","minWidth","clip","height","margin","overflow","position","top","rowColor","EnhancedTable","status","setStatus","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","listMedics","setListMedics","medicSpecialities","setMedicSpecialities","editActive","setEditActive","data","setData","MySwal","row","setRow","date","study_name","partners","lastname","dni","medics","medical_consultations","results","fetchOrders","orders","error","errorFetchOrders","from","fetchOrder_status","statusDB","errorStatus","useEffect","handleEdit","handleRequestSort","isAsc","handleSelectAllClick","checked","newSelecteds","n","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","emptyRows","Math","min"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ClearAllIcon from '@material-ui/icons/ClearAll';\nimport EditIcon from '@material-ui/icons/Edit';\nimport blue from '@material-ui/core/colors/blue';\nimport 'firebase/auth';\nimport AdminMedicAdd from '../AdminMedics/AdminMedicAdd';\nimport AdminOrdersEdit from './AdminOrdersEdit';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport PopUp from './AdminOrderPop';\n\nimport {\n    Avatar,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    FormControl,\n    InputLabel,\n    Select,\n    Input,\n    DialogActions,\n    TextField,\n} from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport calculateAge from '../../../functions/calculateAge';\nimport supabase from '../../../supabase.config';\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n    { id: 'actions', numeric: false, disablePadding: true, label: 'ACCIONES' },\n    { id: 'date', numeric: false, disablePadding: true, label: 'FECHA' },\n    { id: 'lastname', numeric: false, disablePadding: false, label: 'MEDICO' },\n    {\n        id: 'lastname',\n        numeric: false,\n        disablePadding: false,\n        label: 'PACIENTE',\n    },\n    { id: 'dni', numeric: true, disablePadding: false, label: 'DNI SOCIO' },\n    { id: 'status', numeric: false, disablePadding: false, label: 'ESTADO' },\n    { id: 'view', numeric: false, disablePadding: false, label: 'VER' },\n];\n\nfunction EnhancedTableHead(props) {\n    const {\n        classes,\n        onSelectAllClick,\n        order,\n        orderBy,\n        numSelected,\n        rowCount,\n        onRequestSort,\n    } = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead className={classes.title}>\n            <TableRow>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align='left'\n                        padding='default'\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            className={classes.title}\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                                    {order === 'desc'\n                                        ? 'sorted descending'\n                                        : 'sorted ascending'}\n                                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n    root: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n        backgroundColor: lighten('#34a7a1', 0.3),\n    },\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                  color: '#fafafa',\n                  backgroundColor: lighten(blue[500], 0.5), //color barra superior cuando selecciono item\n                  fontWeight: 'bold',\n                  fontSize: '30px',\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: lighten('#34a7a1', 0.3),\n              },\n    title: {\n        flex: '1 1 100%',\n        fontWeight: 'bold',\n        fontSize: '1.4rem',\n        color: '#fafafa',\n        textAlign: 'center',\n    },\n    filters: {\n        display: 'flex',\n    },\n    iconFilter: {\n        color: '#fafafa',\n        fontWeight: 'bold',\n        '&:hover': {\n            backgroundColor: '#34a7a1',\n        },\n    },\n    iconBlock: {\n        color: '#fafafa',\n        fontWeight: 'bold',\n        '&:hover': {\n            backgroundColor: blue[500],\n        },\n    },\n    popup: {\n        color: '#fafafa',\n        backgroundColor: '#2c7f7b',\n        fontWeight: 'bold',\n        fontSize: '30px',\n        marginBottom: '2rem',\n    },\n    popupBtn: {\n        color: '#fafafa',\n        padding: theme.spacing(0.5),\n        border: '3px solid #2c7f7b',\n        backgroundColor: '#2c7f7b',\n        fontWeight: 'bold',\n        fontSize: '15px',\n        '&:hover': {\n            backgroundColor: lighten('#fafafa', 0.2),\n            color: '#2c7f7b',\n            padding: theme.spacing(0.5),\n        },\n    },\n    select: {\n        width: '100%',\n        marginBottom: '2rem',\n    },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n    const classes = useToolbarStyles();\n    const { numSelected, setToShowRows, toShowRows, rows, setRows } = props;\n    const [open, setOpen] = React.useState(false);\n    const [selectedOption, setSelectedOption] = React.useState('');\n    const [selectedState, setSelectedState] = React.useState('activo');\n\n    const handleChange = (event) => {\n        event.target.name === 'state'\n            ? setSelectedState(event.target.value) &&\n              setSelectedOption(event.target.value)\n            : setSelectedOption(event.target.value);\n    };\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n        setToShowRows(rows);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        selectedOption === 'state'\n            ? filter(e.target[0].value, e.target[1].value)\n            : filter(e.target[0].value, e.target[2].value);\n    };\n\n    const filter = (value) => {\n        let show = [];\n        setToShowRows(rows);\n        if (value === 'autorizada') {\n            value\n                ? setToShowRows(\n                      (show = rows.filter(\n                          (r) => r.order_status.name === 'autorizada'\n                      ))\n                  )\n                : setToShowRows(rows);\n        } else if (value === 'rechazada') {\n            value\n                ? setToShowRows(\n                      (show = rows.filter(\n                          (r) => r.order_status.name === 'rechazada'\n                      ))\n                  )\n                : setToShowRows(rows);\n        } else if (value === 'en proceso') {\n            value\n                ? setToShowRows(\n                      (show = rows.filter(\n                          (r) => r.order_status.name === 'en proceso'\n                      ))\n                  )\n                : setToShowRows(rows);\n        } else if (value === 'recibida') {\n            value\n                ? setToShowRows(\n                      (show = rows.filter(\n                          (r) => r.order_status.name === 'recibida'\n                      ))\n                  )\n                : setToShowRows(rows);\n        } else setToShowRows(rows);\n        setOpen(false);\n    };\n\n    return (\n        <Toolbar className={classes.root}>\n            <Typography\n                className={classes.title}\n                variant='h6'\n                id='tableTitle'\n                component='div'\n            >\n                AUTORIZACIONES\n            </Typography>\n            <Tooltip title='Clear' onClick={handleClose}>\n                <IconButton aria-label='reset' className={classes.iconFilter}>\n                    <ClearAllIcon />\n                </IconButton>\n            </Tooltip>\n            <Tooltip title='Filter list' onClick={handleClickOpen}>\n                <IconButton\n                    aria-label='filter list'\n                    className={classes.iconFilter}\n                >\n                    <FilterListIcon />\n                </IconButton>\n            </Tooltip>\n\n            <Dialog\n                disableBackdropClick\n                disableEscapeKeyDown\n                open={open}\n                onClose={handleClose}\n            >\n                <DialogTitle className={classes.popup}>\n                    FILTRADO POR ESTADO:\n                </DialogTitle>\n                <form onSubmit={handleSubmit}>\n                    <DialogContent>\n                        <FormControl className={classes.select}>\n                            {/* <InputLabel htmlFor=\"demo-dialog-native\">Filtrar por</InputLabel> */}\n                            <Select\n                                variant='outlined'\n                                size='medium'\n                                native\n                                value={selectedOption}\n                                onChange={handleChange}\n                                input={<Input id='demo-dialog-native' />}\n                            >\n                                <option aria-label='None' value='' />\n                                <option value='autorizada'>Autorizada</option>\n                                <option value='rechazada'>Rechazada</option>\n                                <option value='en proceso'>En proceso</option>\n                                <option value='recibida'>Recibida</option>\n                            </Select>\n                        </FormControl>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button\n                            onClick={handleClose}\n                            className={classes.popupBtn}\n                        >\n                            Cancelar\n                        </Button>\n                        <Button type='submit' className={classes.popupBtn}>\n                            Filtrar\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        </Toolbar>\n    );\n};\n\nEnhancedTableToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired,\n};\n\n//-------------------- Style Table Orders\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n    title: {\n        color: '#212121',\n        fontWeight: 'bold',\n        backgroundColor: lighten('#34a7a1', 0.6),\n    },\n    rowColor: {\n        backgroundColor: lighten('#e0e0e0', 0.3),\n        ':checked': {\n            color: blue[500],\n        },\n    },\n    iconFilter: {\n        color: 'rgba(0, 0, 0, 0.47)',\n        fontWeight: 'bold',\n        '&:hover': {\n            backgroundColor: lighten('#34a7a1', 0.8),\n        },\n    },\n}));\n\nexport default function EnhancedTable() {\n    const classes = useStyles();\n    const [status, setStatus] = React.useState([]);\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('calories');\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [rows, setRows] = React.useState([]);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n    const [listMedics, setListMedics] = React.useState([]);\n    const [medicSpecialities, setMedicSpecialities] = React.useState([]);\n    const [editActive, setEditActive] = React.useState(false);\n    const [data, setData] = React.useState(null);\n    const [toShowRows, setToShowRows] = React.useState([]);\n    const MySwal = withReactContent(Swal);\n    const [row, setRow] = React.useState({\n        date: '',\n        study_name: '',\n        partners: {\n            name: '',\n            lastname: '',\n            dni: '',\n        },\n        medics: {\n            name: '',\n            lastname: '',\n        },\n        medical_consultations: {\n            id: '',\n        },\n        order_status: {\n            name: '',\n        },\n        results: {\n            results: {\n                results: '',\n            },\n        },\n        order_status: {\n            name: '',\n        },\n    });\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = (row) => {\n        setRow(row);\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const fetchOrders = async () => {\n        const { data: orders, error: errorFetchOrders } = await supabase\n            .from('orders')\n            .select(\n                'id, date, results, study_name, order_status(name), partners(dni, name, lastname), medics(dni, name, lastname), medical_consultations(id) '\n            );\n\n        orders && setRows(orders);\n    };\n\n    const fetchOrder_status = async () => {\n        const { data: statusDB, error: errorStatus } = await supabase\n            .from('order_status')\n            .select('*');\n        setStatus(statusDB);\n    };\n\n    React.useEffect(() => {\n        fetchOrder_status();\n        fetchOrders();\n    }, []);\n    React.useEffect(() => {\n        setToShowRows(rows);\n    }, [rows]);\n\n    const handleEdit = (data) => {\n        setData(data);\n        setEditActive(true);\n        if (editActive) setEditActive(false);\n    };\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = rows.map((n) => n.name);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    /* const isSelected = (name) => selected.indexOf(name) !== -1; */\n\n    const emptyRows =\n        rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n    /*     setToShowRows(rows)\n     */\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <EnhancedTableToolbar\n                    numSelected={selected.length}\n                    setToShowRows={setToShowRows}\n                    toShowRows={toShowRows}\n                    rows={rows}\n                />\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby='tableTitle'\n                        size='small'\n                        aria-label='enhanced table'\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            numSelected={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={rows.length}\n                        />\n                        <TableBody>\n                            {stableSort(\n                                toShowRows,\n                                getComparator(order, orderBy)\n                            )\n                                .slice(\n                                    page * rowsPerPage,\n                                    page * rowsPerPage + rowsPerPage\n                                )\n                                .map((row, index) => {\n                                    /* const isItemSelected = isSelected(row.name);\n                  const labelId = `enhanced-table-checkbox-${index}`; */\n                                    return (\n                                        <TableRow\n                                            hover\n                                            onClick={(event) =>\n                                                handleClick(event, row.name)\n                                            }\n                                            /* aria-checked={isItemSelected} */\n                                            tabIndex={-1}\n                                            key={row.name}\n                                            /* selected={isItemSelected} */\n                                        >\n                                            <TableCell\n                                                className={\n                                                    index % 2 === 1\n                                                        ? classes.rowColor\n                                                        : null\n                                                }\n                                                align='left'\n                                            >\n                                                <Tooltip\n                                                    title='Edit'\n                                                    className={\n                                                        classes.iconFilter\n                                                    }\n                                                >\n                                                    <IconButton\n                                                        size='small'\n                                                        aria-label='Edit'\n                                                    >\n                                                        <EditIcon\n                                                            onClick={() =>\n                                                                handleEdit(row)\n                                                            }\n                                                        />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </TableCell>\n                                            <TableCell\n                                                className={\n                                                    index % 2 === 1\n                                                        ? classes.rowColor\n                                                        : null\n                                                }\n                                                align='left'\n                                            >\n                                                {row.date}\n                                            </TableCell>\n                                            <TableCell\n                                                className={\n                                                    index % 2 === 1\n                                                        ? classes.rowColor\n                                                        : null\n                                                }\n                                                align='left'\n                                            >\n                                                {row.medics.name}{' '}\n                                                {row.medics.lastname}\n                                            </TableCell>\n                                            <TableCell\n                                                className={\n                                                    index % 2 === 1\n                                                        ? classes.rowColor\n                                                        : null\n                                                }\n                                                align='left'\n                                                key={index}\n                                            >\n                                                {row.partners.name}{' '}\n                                                {row.partners.lastname}\n                                            </TableCell>\n                                            <TableCell\n                                                className={\n                                                    index % 2 === 1\n                                                        ? classes.rowColor\n                                                        : null\n                                                }\n                                                align='left'\n                                            >\n                                                {row.partners.dni}\n                                            </TableCell>\n                                            <TableCell\n                                                className={\n                                                    index % 2 === 1\n                                                        ? classes.rowColor\n                                                        : null\n                                                }\n                                                align='left'\n                                            >\n                                                {row.order_status.name}\n                                            </TableCell>\n                                            <TableCell\n                                                className={\n                                                    index % 2 === 1\n                                                        ? classes.rowColor\n                                                        : null\n                                                }\n                                                align='left'\n                                            >\n                                                <Button\n                                                    className={\n                                                        classes.iconFilter\n                                                    }\n                                                    variant='outlined'\n                                                    onClick={() =>\n                                                        handleClickOpen(row)\n                                                    }\n                                                >\n                                                    📝\n                                                </Button>\n                                            </TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: 33 * emptyRows }}>\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component='div'\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n            {editActive ? (\n                <AdminOrdersEdit\n                    status={status}\n                    setEditActive={setEditActive}\n                    editActive={editActive}\n                    data={data}\n                />\n            ) : null}\n            <PopUp rows={row} handleClose={handleClose} open={open} />\n        </div>\n    );\n}\n\n//recibe l autorizada como value pero no uestra las seleccionadas\n"]},"metadata":{},"sourceType":"module"}