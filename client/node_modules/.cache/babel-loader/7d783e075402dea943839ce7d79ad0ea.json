{"ast":null,"code":"var _jsxFileName = \"/home/alan/Escritorio/Integra/IntegraApp/src/components/Admin/Speciality/TableSpecialities.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport blue from '@material-ui/core/colors/blue';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport './ElDeLosEstilos.css';\nimport PopUpEdit from '../Speciality/PopUpEdit';\nimport supabase from '../../../supabase.config.js';\nimport InputSpecialities from './InputSpecialities'; //crear tabla  OK\n//traer especialidades de base >> redux\n//agregar data\n//modificar\n//eliminar\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [{\n  id: 'actions',\n  numeric: false,\n  disablePadding: true,\n  label: 'ACCIONES'\n}, {\n  id: 'name',\n  numeric: false,\n  disablePadding: true,\n  label: 'ESPECIALIDAD'\n}, {\n  id: 'id',\n  numeric: false,\n  disablePadding: true,\n  label: 'ID'\n}];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    order,\n    orderBy,\n    onRequestSort\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableHead, {\n    className: classes.title,\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      children: headCells.map(headCell => /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"left\",\n        padding: \"default\",\n        sortDirection: orderBy === headCell.id ? order : false,\n        children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n          className: classes.title,\n          active: orderBy === headCell.id,\n          direction: orderBy === headCell.id ? order : 'asc',\n          onClick: createSortHandler(headCell.id),\n          children: [headCell.label, orderBy === headCell.id ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.visuallyHidden,\n            children: order === 'desc' ? 'sorted descending' : 'sorted ascending'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 33\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this)\n      }, headCell.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\n_c = EnhancedTableHead;\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n}; //------------------------makeStyle1---------------------------------------------------------------------------------------\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    padding: '4px 4px 4px 4 px',\n    paddingLeft: theme.spacing(0),\n    paddingRight: theme.spacing(0),\n    backgroundColor: lighten('#34a7a1', 0.3) //color barra superior '\n\n  },\n  highlight: theme.palette.type === 'light' ? {\n    color: '#fafafa',\n    backgroundColor: lighten(blue[500], 0.5),\n    //color barra superior cuando selecciono item\n    fontWeight: 'bold',\n    fontSize: '30px'\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: lighten('#34a7a1', 0.3)\n  },\n  title: {\n    flex: '1 1 50%',\n    fontWeight: 'bold',\n    fontSize: '1.4rem',\n    color: '#fafafa',\n    textAlign: 'left',\n    marginLeft: '10%'\n  },\n  filters: {\n    display: 'flex'\n  },\n  iconFilter: {\n    color: '#fafafa',\n    fontWeight: 'bold',\n    '&:hover': {\n      backgroundColor: '#34a7a1'\n    }\n  },\n  iconBlock: {\n    color: '#fafafa',\n    fontWeight: 'bold',\n    '&:hover': {\n      backgroundColor: blue[500]\n    }\n  }\n}));\n\nconst EnhancedTableToolbar = props => {\n  _s();\n\n  const classes = useToolbarStyles();\n  const {\n    numSelected,\n    addClick2\n  } = props;\n\n  const addClick = value => {\n    addClick2(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Toolbar, {\n    className: clsx(classes.root, {\n      [classes.highlight]: numSelected > 0\n    }),\n    children: [/*#__PURE__*/_jsxDEV(InputSpecialities, {\n      addClick: addClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.title,\n      variant: \"h6\",\n      id: \"tableTitle\",\n      component: \"div\",\n      children: \"ESPECIALIDADES\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EnhancedTableToolbar, \"3YobLOlq21lAjJ1iCLt9G1iGJSo=\", false, function () {\n  return [useToolbarStyles];\n});\n\n_c2 = EnhancedTableToolbar;\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n}; //-------------------- EnhancedTableToolbar Style\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%' //padding:theme.spacing(1),\n\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  },\n  title: {\n    //padding:'6px 24px 6px 16px;',\n    color: '#212121',\n    fontWeight: 'bold',\n    backgroundColor: lighten('#34a7a1', 0.6)\n  },\n  rowColor: {\n    backgroundColor: lighten('#e0e0e0', 0.3),\n    ':checked': {\n      color: blue[500]\n    }\n  },\n  iconFilter: {\n    color: 'rgba(0, 0, 0, 0.47)',\n    fontWeight: 'bold',\n    '&:hover': {\n      backgroundColor: lighten('#34a7a1', 0.8)\n    }\n  }\n}));\nexport default function EnhancedTable({\n  rows,\n  handlerButtonClick\n}) {\n  _s2();\n\n  const classes = useStyles();\n  const [order, setOrder] = useState('asc');\n  const [orderBy, setOrderBy] = useState('specialities');\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [open, setOpen] = useState(false);\n  const [nameSpeciality, setNameSpeciality] = useState('');\n  const MySwal = withReactContent(Swal);\n  const base = rows;\n\n  const addClick2 = value => {\n    handlerButtonClick(value);\n  }; //---HANDLERS-----\n\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleDelete = async (id, name) => {\n    MySwal.fire({\n      title: `Esta seguro que desea eliminar ${name.toUpperCase()}?`,\n      showCloseButton: true,\n      showCancelButton: true,\n      icon: 'question'\n    }).then(async res => {\n      if (res.isConfirmed) {\n        ///const deleteMedicsSpeciality = (id)=>{\n        //primero se elimina de tabla intermedia\n        const {\n          errorRelation\n        } = await supabase.from('medics_medical_specialities').delete().match({\n          speciality_id: id\n        }); //}\n        ///const deleteSpeciality = async(id)=>{\n\n        const {\n          errorSpeciality\n        } = await supabase.from('medical_specialities').delete().match({\n          id: id\n        });\n        if (!errorRelation && !errorSpeciality) MySwal.fire({\n          title: `La espcialidad ${name.toUpperCase()} se ha eliminado con exito.`,\n          icon: 'success',\n          timer: 2000\n        });\n      } // deleteMedicsSpeciality(id);\n      // deleteSpeciality (id);\n\n    });\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleEdit = (e, name) => {\n    e.preventDefault(); //preguntar si existe antes de actualizar\n\n    let buscado = base.find(item => item.name.toUpperCase() === e.target[0].value.toUpperCase());\n\n    if (!buscado) {\n      const updateSpeciality = async () => {\n        await supabase.from('medical_specialities').update({\n          name: e.target[0].value\n        }).match({\n          name: nameSpeciality\n        });\n      };\n\n      updateSpeciality(name);\n      handleClose();\n    } else {\n      Swal.fire({\n        title: `La especialidad ${buscado.name.toUpperCase()} ya existe.`,\n        icon: 'info'\n      }); // alert(`La especialidad ${buscado.name.toUpperCase()} ya existe.`);\n    }\n  };\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(EnhancedTableToolbar, {\n        addClick2: addClick2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: classes.table,\n          \"aria-labelledby\": \"tableTitle\",\n          size: \"small\",\n          \"aria-label\": \"enhanced table\",\n          children: [/*#__PURE__*/_jsxDEV(EnhancedTableHead, {\n            classes: classes,\n            order: order,\n            orderBy: orderBy,\n            onRequestSort: handleRequestSort,\n            rowCount: rows.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n              const labelId = `enhanced-table-checkbox-${index}`;\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                role: \"checkbox\",\n                tabIndex: -1,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  className: index % 2 === 1 ? classes.rowColor : null,\n                  component: \"th\",\n                  id: labelId,\n                  scope: \"row\",\n                  padding: \"none\",\n                  children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"Delete\",\n                    className: classes.iconFilter,\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      size: \"small\",\n                      \"aria-label\": \"delete\",\n                      children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                        onClick: () => handleDelete(row.id, row.name)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 384,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 380,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 374,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"Edit\",\n                    className: classes.iconFilter,\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      size: \"small\",\n                      \"aria-label\": \"Edit\",\n                      children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                        onClick: () => {\n                          setOpen(true);\n                          setNameSpeciality(row.name);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 404,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 400,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 394,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  className: index % 2 === 1 ? classes.rowColor : null,\n                  component: \"th\",\n                  id: labelId,\n                  scope: \"row\",\n                  padding: \"default\",\n                  align: \"left\",\n                  children: row.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  className: index % 2 === 1 ? classes.rowColor : null,\n                  component: \"th\",\n                  id: labelId,\n                  scope: \"row\",\n                  padding: \"default\",\n                  align: \"left\",\n                  children: row.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 45\n                }, this)]\n              }, row.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 41\n              }, this);\n            }), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n              style: {\n                height: 53 * emptyRows\n              },\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 6\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [5, 10, 25],\n        component: \"div\",\n        count: rows.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onChangePage: handleChangePage,\n        onChangeRowsPerPage: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PopUpEdit, {\n      open: open,\n      handleClose: handleClose,\n      handleEdit: handleEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 330,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(EnhancedTable, \"yya8tS8sz8+pEF4mzrZWoBQXonE=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = EnhancedTable;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"EnhancedTableHead\");\n$RefreshReg$(_c2, \"EnhancedTableToolbar\");\n$RefreshReg$(_c3, \"EnhancedTable\");","map":{"version":3,"sources":["/home/alan/Escritorio/Integra/IntegraApp/src/components/Admin/Speciality/TableSpecialities.jsx"],"names":["React","useState","PropTypes","clsx","lighten","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","IconButton","Tooltip","DeleteIcon","EditIcon","blue","Swal","withReactContent","PopUpEdit","supabase","InputSpecialities","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","classes","onRequestSort","createSortHandler","property","event","title","headCell","visuallyHidden","propTypes","object","isRequired","numSelected","number","func","onSelectAllClick","oneOf","string","rowCount","useToolbarStyles","theme","root","padding","paddingLeft","spacing","paddingRight","backgroundColor","highlight","palette","type","color","fontWeight","fontSize","text","primary","flex","textAlign","marginLeft","filters","display","iconFilter","iconBlock","EnhancedTableToolbar","addClick2","addClick","value","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","margin","overflow","position","top","rowColor","EnhancedTable","rows","handlerButtonClick","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","open","setOpen","nameSpeciality","setNameSpeciality","MySwal","base","handleRequestSort","isAsc","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","handleDelete","name","fire","toUpperCase","showCloseButton","showCancelButton","icon","then","res","isConfirmed","errorRelation","from","delete","match","speciality_id","errorSpeciality","timer","handleClose","handleEdit","e","preventDefault","buscado","find","item","updateSpeciality","update","emptyRows","Math","min","length","slice","row","labelId"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport blue from '@material-ui/core/colors/blue';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport './ElDeLosEstilos.css';\n\nimport PopUpEdit from '../Speciality/PopUpEdit';\nimport supabase from '../../../supabase.config.js';\nimport InputSpecialities from './InputSpecialities';\n\n//crear tabla  OK\n//traer especialidades de base >> redux\n//agregar data\n//modificar\n//eliminar\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n    { id: 'actions', numeric: false, disablePadding: true, label: 'ACCIONES' },\n    { id: 'name', numeric: false, disablePadding: true, label: 'ESPECIALIDAD' },\n    { id: 'id', numeric: false, disablePadding: true, label: 'ID' },\n];\n\nfunction EnhancedTableHead(props) {\n    const { classes, order, orderBy, onRequestSort } = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead className={classes.title}>\n            <TableRow>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align='left'\n                        padding='default'\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            className={classes.title}\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                                    {order === 'desc'\n                                        ? 'sorted descending'\n                                        : 'sorted ascending'}\n                                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n};\n\n//------------------------makeStyle1---------------------------------------------------------------------------------------\nconst useToolbarStyles = makeStyles((theme) => ({\n    root: {\n        padding: '4px 4px 4px 4 px',\n        paddingLeft: theme.spacing(0),\n        paddingRight: theme.spacing(0),\n        backgroundColor: lighten('#34a7a1', 0.3),\n        //color barra superior '\n    },\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                  color: '#fafafa',\n                  backgroundColor: lighten(blue[500], 0.5), //color barra superior cuando selecciono item\n                  fontWeight: 'bold',\n                  fontSize: '30px',\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: lighten('#34a7a1', 0.3),\n              },\n    title: {\n        flex: '1 1 50%',\n        fontWeight: 'bold',\n        fontSize: '1.4rem',\n        color: '#fafafa',\n        textAlign: 'left',\n        marginLeft: '10%',\n    },\n    filters: {\n        display: 'flex',\n    },\n    iconFilter: {\n        color: '#fafafa',\n        fontWeight: 'bold',\n        '&:hover': {\n            backgroundColor: '#34a7a1',\n        },\n    },\n    iconBlock: {\n        color: '#fafafa',\n        fontWeight: 'bold',\n        '&:hover': {\n            backgroundColor: blue[500],\n        },\n    },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n    const classes = useToolbarStyles();\n    const { numSelected, addClick2 } = props;\n\n    const addClick = (value) => {\n        addClick2(value);\n    };\n\n    return (\n        <Toolbar\n            className={clsx(classes.root, {\n                [classes.highlight]: numSelected > 0,\n            })}\n        >\n            <InputSpecialities addClick={addClick} />\n            <Typography\n                className={classes.title}\n                variant='h6'\n                id='tableTitle'\n                component='div'\n            >\n                ESPECIALIDADES\n            </Typography>\n        </Toolbar>\n    );\n};\n\nEnhancedTableToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired,\n};\n\n//-------------------- EnhancedTableToolbar Style\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        //padding:theme.spacing(1),\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n    title: {\n        //padding:'6px 24px 6px 16px;',\n        color: '#212121',\n        fontWeight: 'bold',\n        backgroundColor: lighten('#34a7a1', 0.6),\n    },\n    rowColor: {\n        backgroundColor: lighten('#e0e0e0', 0.3),\n        ':checked': {\n            color: blue[500],\n        },\n    },\n    iconFilter: {\n        color: 'rgba(0, 0, 0, 0.47)',\n        fontWeight: 'bold',\n        '&:hover': {\n            backgroundColor: lighten('#34a7a1', 0.8),\n        },\n    },\n}));\nexport default function EnhancedTable({ rows, handlerButtonClick }) {\n    const classes = useStyles();\n    const [order, setOrder] = useState('asc');\n    const [orderBy, setOrderBy] = useState('specialities');\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(5);\n    const [open, setOpen] = useState(false);\n    const [nameSpeciality, setNameSpeciality] = useState('');\n    const MySwal = withReactContent(Swal);\n    const base = rows;\n\n    const addClick2 = (value) => {\n        handlerButtonClick(value);\n    };\n    //---HANDLERS-----\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const handleDelete = async (id, name) => {\n        MySwal.fire({\n            title: `Esta seguro que desea eliminar ${name.toUpperCase()}?`,\n            showCloseButton: true,\n            showCancelButton: true,\n            icon: 'question',\n        }).then(async (res) => {\n            if (res.isConfirmed) {\n                ///const deleteMedicsSpeciality = (id)=>{\n                //primero se elimina de tabla intermedia\n                const { errorRelation } = await supabase\n                    .from('medics_medical_specialities')\n                    .delete()\n                    .match({ speciality_id: id });\n                //}\n                ///const deleteSpeciality = async(id)=>{\n                const { errorSpeciality } = await supabase\n                    .from('medical_specialities')\n                    .delete()\n                    .match({ id: id });\n\n                if (!errorRelation && !errorSpeciality)\n                    MySwal.fire({\n                        title: `La espcialidad ${name.toUpperCase()} se ha eliminado con exito.`,\n                        icon: 'success',\n                        timer: 2000,\n                    });\n            }\n            // deleteMedicsSpeciality(id);\n            // deleteSpeciality (id);\n        });\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const handleEdit = (e, name) => {\n        e.preventDefault();\n        //preguntar si existe antes de actualizar\n        let buscado = base.find(\n            (item) =>\n                item.name.toUpperCase() === e.target[0].value.toUpperCase()\n        );\n        if (!buscado) {\n            const updateSpeciality = async () => {\n                await supabase\n                    .from('medical_specialities')\n                    .update({ name: e.target[0].value })\n                    .match({ name: nameSpeciality });\n            };\n            updateSpeciality(name);\n            handleClose();\n        } else {\n            Swal.fire({\n                title: `La especialidad ${buscado.name.toUpperCase()} ya existe.`,\n                icon: 'info',\n            });\n            // alert(`La especialidad ${buscado.name.toUpperCase()} ya existe.`);\n        }\n    };\n    const emptyRows =\n        rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <EnhancedTableToolbar addClick2={addClick2} />\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby='tableTitle'\n                        size='small'\n                        aria-label='enhanced table'\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            order={order}\n                            orderBy={orderBy}\n                            onRequestSort={handleRequestSort}\n                            rowCount={rows.length}\n                        />\n                        <TableBody>\n                            {stableSort(rows, getComparator(order, orderBy))\n                                .slice(\n                                    page * rowsPerPage,\n                                    page * rowsPerPage + rowsPerPage\n                                )\n                                .map((row, index) => {\n                                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                                    return (\n                                        <TableRow\n                                            hover\n                                            role='checkbox'\n                                            tabIndex={-1}\n                                            key={row.name}\n                                        >\n                                            <TableCell\n                                                className={\n                                                    index % 2 === 1\n                                                        ? classes.rowColor\n                                                        : null\n                                                }\n                                                component='th'\n                                                id={labelId}\n                                                scope='row'\n                                                padding='none'\n                                            >\n                                                <Tooltip\n                                                    title='Delete'\n                                                    className={\n                                                        classes.iconFilter\n                                                    }\n                                                >\n                                                    <IconButton\n                                                        size='small'\n                                                        aria-label='delete'\n                                                    >\n                                                        <DeleteIcon\n                                                            onClick={() =>\n                                                                handleDelete(\n                                                                    row.id,\n                                                                    row.name\n                                                                )\n                                                            }\n                                                        />\n                                                    </IconButton>\n                                                </Tooltip>\n                                                <Tooltip\n                                                    title='Edit'\n                                                    className={\n                                                        classes.iconFilter\n                                                    }\n                                                >\n                                                    <IconButton\n                                                        size='small'\n                                                        aria-label='Edit'\n                                                    >\n                                                        <EditIcon\n                                                            onClick={() => {\n                                                                setOpen(true);\n                                                                setNameSpeciality(\n                                                                    row.name\n                                                                );\n                                                            }}\n                                                        />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </TableCell>\n                                            <TableCell\n                                                className={\n                                                    index % 2 === 1\n                                                        ? classes.rowColor\n                                                        : null\n                                                }\n                                                component='th'\n                                                id={labelId}\n                                                scope='row'\n                                                padding='default'\n                                                align='left'\n                                            >\n                                                {row.name}\n                                            </TableCell>\n                                            <TableCell\n                                                className={\n                                                    index % 2 === 1\n                                                        ? classes.rowColor\n                                                        : null\n                                                }\n                                                component='th'\n                                                id={labelId}\n                                                scope='row'\n                                                padding='default'\n                                                align='left'\n                                            >\n                                                {row.id}\n                                            </TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: 53 * emptyRows }}>\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component='div'\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n            <PopUpEdit\n                open={open}\n                handleClose={handleClose}\n                handleEdit={handleEdit}\n            />\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}