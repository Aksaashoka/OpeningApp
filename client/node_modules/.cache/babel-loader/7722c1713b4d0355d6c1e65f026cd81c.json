{"ast":null,"code":"import { GET_SPECIALITIES, FIND_SPECIALITY, DELETE_SPECIALITY } from './constants.actions';\nimport supabase from '../supabase.config';\nexport function getMedicSpecialities() {\n  return async dispatch => {\n    try {\n      const {\n        data: medic_specialities\n      } = await supabase.from('medical_specialities').select('*');\n      dispatch({\n        type: GET_SPECIALITIES,\n        payload: medic_specialities\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n}\nexport function findSpeciality(name) {\n  return async dispatch => {\n    try {\n      const {\n        data: speciality\n      } = await supabase.from('medical_specialities').select('name').eq('name', name);\n      dispatch({\n        type: FIND_SPECIALITY,\n        payload: speciality\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n}\nexport function addSpeciality(name) {\n  return async dispatch => {\n    try {\n      await supabase.from('medical_specialities').insert([{\n        name: name\n      }]);\n      dispatch({\n        type: 'OK'\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n}\nexport function deleteSpeciality(id) {\n  return async dispatch => {\n    try {\n      const {\n        data: specialities\n      } = await supabase.from('medical_specialities').select(`\n            *,\n            medics_medical_specialities (\n            id,dni)\n        `).match({\n        id: id\n      });\n      dispatch({\n        type: DELETE_SPECIALITY,\n        payload: specialities\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n}","map":{"version":3,"sources":["/home/alan/Escritorio/Integra/IntegraApp/src/actions/specialities.actions.js"],"names":["GET_SPECIALITIES","FIND_SPECIALITY","DELETE_SPECIALITY","supabase","getMedicSpecialities","dispatch","data","medic_specialities","from","select","type","payload","err","console","error","findSpeciality","name","speciality","eq","addSpeciality","insert","deleteSpeciality","id","specialities","match"],"mappings":"AAAA,SACIA,gBADJ,EAEIC,eAFJ,EAGIC,iBAHJ,QAIO,qBAJP;AAKA,OAAOC,QAAP,MAAqB,oBAArB;AAEA,OAAO,SAASC,oBAAT,GAAgC;AACnC,SAAO,MAAOC,QAAP,IAAoB;AACvB,QAAI;AACA,YAAM;AAAEC,QAAAA,IAAI,EAAEC;AAAR,UAA+B,MAAMJ,QAAQ,CAC9CK,IADsC,CACjC,sBADiC,EAEtCC,MAFsC,CAE/B,GAF+B,CAA3C;AAGAJ,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAEV,gBAAR;AAA0BW,QAAAA,OAAO,EAAEJ;AAAnC,OAAD,CAAR;AACH,KALD,CAKE,OAAOK,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH;AACJ,GATD;AAUH;AAED,OAAO,SAASG,cAAT,CAAwBC,IAAxB,EAA8B;AACjC,SAAO,MAAOX,QAAP,IAAoB;AACvB,QAAI;AACA,YAAM;AAAEC,QAAAA,IAAI,EAAEW;AAAR,UAAuB,MAAMd,QAAQ,CACtCK,IAD8B,CACzB,sBADyB,EAE9BC,MAF8B,CAEvB,MAFuB,EAG9BS,EAH8B,CAG3B,MAH2B,EAGnBF,IAHmB,CAAnC;AAIAX,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAET,eAAR;AAAyBU,QAAAA,OAAO,EAAEM;AAAlC,OAAD,CAAR;AACH,KAND,CAME,OAAOL,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH;AACJ,GAVD;AAWH;AAED,OAAO,SAASO,aAAT,CAAuBH,IAAvB,EAA6B;AAChC,SAAO,MAAOX,QAAP,IAAoB;AACvB,QAAI;AACA,YAAMF,QAAQ,CACTK,IADC,CACI,sBADJ,EAEDY,MAFC,CAEM,CAAC;AAAEJ,QAAAA,IAAI,EAAEA;AAAR,OAAD,CAFN,CAAN;AAGAX,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACH,KALD,CAKE,OAAOE,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH;AACJ,GATD;AAUH;AAED,OAAO,SAASS,gBAAT,CAA0BC,EAA1B,EAA8B;AACjC,SAAO,MAAOjB,QAAP,IAAoB;AACvB,QAAI;AACA,YAAM;AAAEC,QAAAA,IAAI,EAAEiB;AAAR,UAAyB,MAAMpB,QAAQ,CACxCK,IADgC,CAC3B,sBAD2B,EAEhCC,MAFgC,CAG5B;AACrB;AACA;AACA;AACA,SAPiD,EAShCe,KATgC,CAS1B;AAAEF,QAAAA,EAAE,EAAEA;AAAN,OAT0B,CAArC;AAUAjB,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAER,iBAAR;AAA2BS,QAAAA,OAAO,EAAEY;AAApC,OAAD,CAAR;AACH,KAZD,CAYE,OAAOX,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH;AACJ,GAhBD;AAiBH","sourcesContent":["import {\n    GET_SPECIALITIES,\n    FIND_SPECIALITY,\n    DELETE_SPECIALITY,\n} from './constants.actions';\nimport supabase from '../supabase.config';\n\nexport function getMedicSpecialities() {\n    return async (dispatch) => {\n        try {\n            const { data: medic_specialities } = await supabase\n                .from('medical_specialities')\n                .select('*');\n            dispatch({ type: GET_SPECIALITIES, payload: medic_specialities });\n        } catch (err) {\n            console.error(err);\n        }\n    };\n}\n\nexport function findSpeciality(name) {\n    return async (dispatch) => {\n        try {\n            const { data: speciality } = await supabase\n                .from('medical_specialities')\n                .select('name')\n                .eq('name', name);\n            dispatch({ type: FIND_SPECIALITY, payload: speciality });\n        } catch (err) {\n            console.error(err);\n        }\n    };\n}\n\nexport function addSpeciality(name) {\n    return async (dispatch) => {\n        try {\n            await supabase\n                .from('medical_specialities')\n                .insert([{ name: name }]);\n            dispatch({ type: 'OK' });\n        } catch (err) {\n            console.error(err);\n        }\n    };\n}\n\nexport function deleteSpeciality(id) {\n    return async (dispatch) => {\n        try {\n            const { data: specialities } = await supabase\n                .from('medical_specialities')\n                .select(\n                    `\n            *,\n            medics_medical_specialities (\n            id,dni)\n        `\n                )\n                .match({ id: id });\n            dispatch({ type: DELETE_SPECIALITY, payload: specialities });\n        } catch (err) {\n            console.error(err);\n        }\n    };\n}\n"]},"metadata":{},"sourceType":"module"}