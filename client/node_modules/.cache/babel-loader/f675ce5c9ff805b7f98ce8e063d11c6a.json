{"ast":null,"code":"var _jsxFileName = \"/home/alan/Escritorio/Integra/IntegraApp/src/components/Guest/ContactForm/ContactForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Styles from './ContactForm.module.css';\nimport emailjs from 'emailjs-com';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\nimport Card from '@material-ui/core/Card';\nimport supabase from '../../../supabase.config';\nimport Recaptcha from 'react-recaptcha';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#41aea9'\n    },\n    secondary: {\n      main: '#e8ffff'\n    }\n  }\n});\nconst useStyles = makeStyles({\n  root: {\n    width: '90%',\n    height: '100%',\n    background: '#1c8383',\n    border: 'none',\n    boxShadow: 'none',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: '#fff'\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  },\n  textField: {\n    width: '200px'\n  }\n});\n\nfunction ContactForm() {\n  _s();\n\n  const classes = useStyles();\n  const MySwal = withReactContent(Swal);\n  const [input, setInput] = useState({\n    name: '',\n    age: '',\n    dni: '',\n    phone_number: '',\n    email: ''\n  });\n  const [errors, setErrors] = useState({\n    name: false,\n    age: false,\n    dni: false,\n    phone_number: false,\n    email: false,\n    onProcess: false\n  });\n  const [successRequest, setSuccessRequest] = useState(false);\n  const [errorRequest, setErrorRequest] = useState(false);\n  const [captchaResolve, setCaptchaResolve] = useState(false);\n\n  const handleClickOpen = async () => {\n    if (!captchaResolve) {\n      MySwal.fire({\n        title: 'Completa el captcha para continuar!',\n        icon: 'info',\n        timer: 2500\n      });\n    }\n\n    if (!errors.age && !errors.dni && !errors.phone_number && !errors.email && !errors.name && !errors.onProcess && captchaResolve) {\n      setSuccessRequest(true);\n      const {\n        data: contactFormResolve\n      } = await supabase.from('guest_contacts').insert([{\n        dni: parseInt(input.dni),\n        name: input.name,\n        age: parseInt(input.age),\n        phone_number: parseInt(input.phone_number),\n        email: input.email\n      }]);\n      contactFormResolve && sendEmail();\n      setInput({\n        name: '',\n        age: '',\n        dni: '',\n        phone_number: '',\n        email: ''\n      });\n    } else {\n      setErrorRequest(true);\n    }\n  };\n\n  const handleClose = () => {\n    setSuccessRequest(false);\n    setErrorRequest(false);\n  };\n\n  const handleBack = () => {\n    setSuccessRequest(false);\n  };\n\n  const handleInputChange = e => {\n    setInput({ ...input,\n      [e.target.name]: e.target.value\n    });\n    setErrors(validate(e.target.name, e.target.value));\n  };\n\n  function validate(inputName, value) {\n    const emailPattern = /[a-zA-Z0-9]+[.]?([a-zA-Z0-9]+)?[@][a-z]{3,9}[.][a-z]{2,5}/g;\n    const namePattern = /^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/g;\n    const numberPattern = /^[0-9\\b]+$/;\n    var validateErrors = errors;\n\n    switch (inputName) {\n      case 'name':\n        {\n          if (!namePattern.test(value)) {\n            validateErrors = { ...errors,\n              [inputName]: true\n            };\n          } else {\n            validateErrors = { ...errors,\n              [inputName]: false\n            };\n          }\n\n          break;\n        }\n\n      case 'age':\n        {\n          if (!numberPattern.test(value) || value < 18) {\n            validateErrors = { ...errors,\n              [inputName]: true\n            };\n          } else {\n            validateErrors = { ...errors,\n              [inputName]: false\n            };\n          }\n\n          break;\n        }\n\n      case 'dni':\n        {\n          if (!numberPattern.test(value) || value.length !== 8) {\n            validateErrors = { ...errors,\n              [inputName]: true\n            };\n          } else {\n            validateErrors = { ...errors,\n              [inputName]: false\n            };\n          }\n\n          break;\n        }\n\n      case 'phone_number':\n        {\n          if (!numberPattern.test(value) || value.length < 10) {\n            validateErrors = { ...errors,\n              [inputName]: true\n            };\n          } else {\n            validateErrors = { ...errors,\n              [inputName]: false\n            };\n          }\n\n          break;\n        }\n\n      case 'email':\n        {\n          inputEmailFetchCheck(value);\n\n          if (!emailPattern.test(value)) {\n            validateErrors = { ...errors,\n              [inputName]: true\n            };\n          } else {\n            validateErrors = { ...errors,\n              [inputName]: false\n            };\n          }\n\n          break;\n        }\n\n      default:\n        return null;\n    }\n\n    return validateErrors;\n  }\n\n  async function inputEmailFetchCheck(email) {\n    const {\n      data: emails\n    } = await supabase.from('guest_contacts').select('email').eq('email', email);\n    setErrors({ ...errors,\n      onProcess: emails.length > 0\n    });\n  }\n\n  function sendEmail() {\n    emailjs.send('service_wcpzjw7', 'template_r93a6bs', input, 'user_mgft1j53RDkaGc1EWyKNK').then(result => {\n      console.log('resultado:', result.text);\n    }, error => {\n      console.log('error:', error.text);\n    });\n  }\n\n  const verifyCaptcha = response => {\n    if (response) {\n      setCaptchaResolve(true);\n    } else {\n      setCaptchaResolve(false);\n    }\n  };\n\n  const success = () => {\n    if (successRequest) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Styles.successRequest,\n        style: !successRequest ? {\n          display: 'none'\n        } : {},\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: Styles.successRequestContent,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: Styles.successRequestTitle,\n            children: \"\\xA1Gracias por escribirnos!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: Styles.successRequestSubTitle,\n              children: \"Un asesor se comunicara con vos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: Styles.successRequestSubTitle,\n              children: \"para charlar sobre tu pr\\xF3ximo plan.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: Styles.buttonVolverSuccess,\n            variant: \"contained\",\n            color: \"secondary\",\n            onClick: handleBack,\n            style: {\n              borderRadius: 100\n            },\n            children: \"Volver\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this);\n    } else {\n      return null;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Styles.conteinerAll,\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [success(), /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n          open: errorRequest,\n          autoHideDuration: 6000,\n          onClose: handleClose,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            onClose: handleClose,\n            severity: \"error\",\n            children: \"Error! Verifique sus datos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: Styles.formConteiner,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: Styles.inputs,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: Styles.textField,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"\",\n                children: \"Me llamo \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"name-input\",\n                type: \"text\",\n                className: classes.textField,\n                name: \"name\",\n                autoComplete: \"off\",\n                value: input.name,\n                onChange: e => handleInputChange(e),\n                ...(errors.name && {\n                  error: errors.name,\n                  helperText: 'Nombre invalido'\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: Styles.textField,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"\",\n                children: \"Tengo \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"age-input\",\n                type: \"tel\",\n                name: \"age\",\n                className: classes.textField,\n                autoComplete: \"off\",\n                value: input.age,\n                onChange: e => handleInputChange(e),\n                ...(errors.age && {\n                  error: true,\n                  helperText: 'Edad invalido'\n                }),\n                inputProps: {\n                  maxLength: 3\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"\",\n                children: \" a\\xF1os.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: Styles.textField,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"\",\n                children: \"Mi DNI es \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"dni-input\",\n                type: \"tel\",\n                className: classes.textField,\n                name: \"dni\",\n                autoComplete: \"off\",\n                value: input.dni,\n                onChange: e => handleInputChange(e),\n                ...(errors.dni && {\n                  error: true,\n                  helperText: 'Dni invalido'\n                }),\n                inputProps: {\n                  maxLength: 8\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: Styles.textField,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"\",\n                children: \"Mi tel\\xE9fono es \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"phone-input\",\n                type: \"tel\",\n                className: classes.textField,\n                name: \"phone_number\",\n                autoComplete: \"off\",\n                value: input.phone_number,\n                onChange: e => handleInputChange(e),\n                ...(errors.phone_number && {\n                  error: true,\n                  helperText: 'Teléfono invalido'\n                }),\n                inputProps: {\n                  maxLength: 12\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: Styles.textField,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"\",\n                children: \"Mi email es \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"email-input\",\n                type: \"text\",\n                className: classes.textField,\n                name: \"email\",\n                autoComplete: \"off\",\n                value: input.email,\n                onChange: e => handleInputChange(e),\n                ...(errors.email && {\n                  error: true,\n                  helperText: 'eMail invalido'\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Recaptcha, {\n            sitekey: process.env.REACT_APP_RECAPTCHA_KEY,\n            render: \"explicit\",\n            verifyCallback: verifyCaptcha\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: Styles.buttonSend,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              style: {\n                borderRadius: 100,\n                margin: 10\n              },\n              onClick: handleClickOpen,\n              disabled: !input.age || !input.dni || !input.phone_number || !input.email || !input.name || !captchaResolve,\n              children: \"Consultar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n            open: errorRequest && errors.onProcess,\n            autoHideDuration: 4000,\n            onClose: handleClose,\n            children: /*#__PURE__*/_jsxDEV(Alert, {\n              onClose: handleClose,\n              severity: \"info\",\n              children: \"Este correo ya tiene una solicitud en proceso!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ContactForm, \"WkUaBObQ1CE3fHrPmjor1d9gjtw=\", false, function () {\n  return [useStyles];\n});\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/home/alan/Escritorio/Integra/IntegraApp/src/components/Guest/ContactForm/ContactForm.jsx"],"names":["React","useState","createMuiTheme","ThemeProvider","makeStyles","Styles","emailjs","TextField","Button","Snackbar","Alert","Card","supabase","Recaptcha","Swal","withReactContent","theme","palette","primary","main","secondary","useStyles","root","width","height","background","border","boxShadow","display","justifyContent","alignItems","color","bullet","margin","transform","title","fontSize","pos","marginBottom","textField","ContactForm","classes","MySwal","input","setInput","name","age","dni","phone_number","email","errors","setErrors","onProcess","successRequest","setSuccessRequest","errorRequest","setErrorRequest","captchaResolve","setCaptchaResolve","handleClickOpen","fire","icon","timer","data","contactFormResolve","from","insert","parseInt","sendEmail","handleClose","handleBack","handleInputChange","e","target","value","validate","inputName","emailPattern","namePattern","numberPattern","validateErrors","test","length","inputEmailFetchCheck","emails","select","eq","send","then","result","console","log","text","error","verifyCaptcha","response","success","successRequestContent","successRequestTitle","successRequestSubTitle","buttonVolverSuccess","borderRadius","conteinerAll","formConteiner","inputs","helperText","maxLength","process","env","REACT_APP_RECAPTCHA_KEY","buttonSend"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Styles from './ContactForm.module.css';\nimport emailjs from 'emailjs-com';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\nimport Card from '@material-ui/core/Card';\nimport supabase from '../../../supabase.config';\nimport Recaptcha from 'react-recaptcha';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#41aea9',\n        },\n        secondary: {\n            main: '#e8ffff',\n        },\n    },\n});\n\nconst useStyles = makeStyles({\n    root: {\n        width: '90%',\n        height: '100%',\n        background: '#1c8383',\n        border: 'none',\n        boxShadow: 'none',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        color: '#fff',\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    textField: {\n        width: '200px',\n    },\n});\n\nfunction ContactForm() {\n    const classes = useStyles();\n    const MySwal = withReactContent(Swal);\n\n    const [input, setInput] = useState({\n        name: '',\n        age: '',\n        dni: '',\n        phone_number: '',\n        email: '',\n    });\n\n    const [errors, setErrors] = useState({\n        name: false,\n        age: false,\n        dni: false,\n        phone_number: false,\n        email: false,\n        onProcess: false,\n    });\n    const [successRequest, setSuccessRequest] = useState(false);\n    const [errorRequest, setErrorRequest] = useState(false);\n    const [captchaResolve, setCaptchaResolve] = useState(false);\n\n    const handleClickOpen = async () => {\n        if (!captchaResolve) {\n            MySwal.fire({\n                title: 'Completa el captcha para continuar!',\n                icon: 'info',\n                timer: 2500,\n            });\n        }\n        if (\n            !errors.age &&\n            !errors.dni &&\n            !errors.phone_number &&\n            !errors.email &&\n            !errors.name &&\n            !errors.onProcess &&\n            captchaResolve\n        ) {\n            setSuccessRequest(true);\n            const { data: contactFormResolve } = await supabase\n                .from('guest_contacts')\n                .insert([\n                    {\n                        dni: parseInt(input.dni),\n                        name: input.name,\n                        age: parseInt(input.age),\n                        phone_number: parseInt(input.phone_number),\n                        email: input.email,\n                    },\n                ]);\n\n            contactFormResolve && sendEmail();\n\n            setInput({\n                name: '',\n                age: '',\n                dni: '',\n                phone_number: '',\n                email: '',\n            });\n        } else {\n            setErrorRequest(true);\n        }\n    };\n\n    const handleClose = () => {\n        setSuccessRequest(false);\n        setErrorRequest(false);\n    };\n    const handleBack = () => {\n        setSuccessRequest(false);\n    };\n\n    const handleInputChange = (e) => {\n        setInput({\n            ...input,\n            [e.target.name]: e.target.value,\n        });\n        setErrors(validate(e.target.name, e.target.value));\n    };\n\n    function validate(inputName, value) {\n        const emailPattern =\n            /[a-zA-Z0-9]+[.]?([a-zA-Z0-9]+)?[@][a-z]{3,9}[.][a-z]{2,5}/g;\n        const namePattern = /^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/g;\n        const numberPattern = /^[0-9\\b]+$/;\n        var validateErrors = errors;\n\n        switch (inputName) {\n            case 'name': {\n                if (!namePattern.test(value)) {\n                    validateErrors = { ...errors, [inputName]: true };\n                } else {\n                    validateErrors = { ...errors, [inputName]: false };\n                }\n                break;\n            }\n            case 'age': {\n                if (!numberPattern.test(value) || value < 18) {\n                    validateErrors = { ...errors, [inputName]: true };\n                } else {\n                    validateErrors = { ...errors, [inputName]: false };\n                }\n                break;\n            }\n            case 'dni': {\n                if (!numberPattern.test(value) || value.length !== 8) {\n                    validateErrors = { ...errors, [inputName]: true };\n                } else {\n                    validateErrors = { ...errors, [inputName]: false };\n                }\n                break;\n            }\n            case 'phone_number': {\n                if (!numberPattern.test(value) || value.length < 10) {\n                    validateErrors = { ...errors, [inputName]: true };\n                } else {\n                    validateErrors = { ...errors, [inputName]: false };\n                }\n                break;\n            }\n            case 'email': {\n                inputEmailFetchCheck(value);\n                if (!emailPattern.test(value)) {\n                    validateErrors = { ...errors, [inputName]: true };\n                } else {\n                    validateErrors = { ...errors, [inputName]: false };\n                }\n                break;\n            }\n            default:\n                return null;\n        }\n        return validateErrors;\n    }\n\n    async function inputEmailFetchCheck(email) {\n        const { data: emails } = await supabase\n            .from('guest_contacts')\n            .select('email')\n            .eq('email', email);\n        setErrors({ ...errors, onProcess: emails.length > 0 });\n    }\n\n    function sendEmail() {\n        emailjs\n            .send(\n                'service_wcpzjw7',\n                'template_r93a6bs',\n                input,\n                'user_mgft1j53RDkaGc1EWyKNK'\n            )\n            .then(\n                (result) => {\n                    console.log('resultado:', result.text);\n                },\n                (error) => {\n                    console.log('error:', error.text);\n                }\n            );\n    }\n\n    const verifyCaptcha = (response) => {\n        if (response) {\n            setCaptchaResolve(true);\n        } else {\n            setCaptchaResolve(false);\n        }\n    };\n\n    const success = () => {\n        if (successRequest) {\n            return (\n                <div\n                    className={Styles.successRequest}\n                    style={!successRequest ? { display: 'none' } : {}}\n                >\n                    <div className={Styles.successRequestContent}>\n                        <p className={Styles.successRequestTitle}>\n                            ¡Gracias por escribirnos!\n                        </p>\n                        <div></div>\n                        <div>\n                            <p className={Styles.successRequestSubTitle}>\n                                Un asesor se comunicara con vos\n                            </p>\n                            <p className={Styles.successRequestSubTitle}>\n                                para charlar sobre tu próximo plan.\n                            </p>\n                        </div>\n                        <Button\n                            className={Styles.buttonVolverSuccess}\n                            variant='contained'\n                            color='secondary'\n                            onClick={handleBack}\n                            style={{ borderRadius: 100 }}\n                        >\n                            Volver\n                        </Button>\n                    </div>\n                </div>\n            );\n        } else {\n            return null;\n        }\n    };\n\n    return (\n        <div className={Styles.conteinerAll}>\n            <ThemeProvider theme={theme}>\n                {success()}\n                <Card className={classes.root}>\n                    <Snackbar\n                        open={errorRequest}\n                        autoHideDuration={6000}\n                        onClose={handleClose}\n                    >\n                        <Alert onClose={handleClose} severity='error'>\n                            Error! Verifique sus datos\n                        </Alert>\n                    </Snackbar>\n                    <div className={Styles.formConteiner}>\n                        <div className={Styles.inputs}>\n                            <div className={Styles.textField}>\n                                <label htmlFor=''>Me llamo </label>\n                                <TextField\n                                    id='name-input'\n                                    type='text'\n                                    className={classes.textField}\n                                    name='name'\n                                    autoComplete='off'\n                                    value={input.name}\n                                    onChange={(e) => handleInputChange(e)}\n                                    {...(errors.name && {\n                                        error: errors.name,\n                                        helperText: 'Nombre invalido',\n                                    })}\n                                />\n                            </div>\n                            <div className={Styles.textField}>\n                                <label htmlFor=''>Tengo </label>\n                                <TextField\n                                    id='age-input'\n                                    type='tel'\n                                    name='age'\n                                    className={classes.textField}\n                                    autoComplete='off'\n                                    value={input.age}\n                                    onChange={(e) => handleInputChange(e)}\n                                    {...(errors.age && {\n                                        error: true,\n                                        helperText: 'Edad invalido',\n                                    })}\n                                    inputProps={{ maxLength: 3 }}\n                                />\n                                <label htmlFor=''> años.</label>\n                            </div>\n                            <div className={Styles.textField}>\n                                <label htmlFor=''>Mi DNI es </label>\n                                <TextField\n                                    id='dni-input'\n                                    type='tel'\n                                    className={classes.textField}\n                                    name='dni'\n                                    autoComplete='off'\n                                    value={input.dni}\n                                    onChange={(e) => handleInputChange(e)}\n                                    {...(errors.dni && {\n                                        error: true,\n                                        helperText: 'Dni invalido',\n                                    })}\n                                    inputProps={{ maxLength: 8 }}\n                                />\n                            </div>\n                            <div className={Styles.textField}>\n                                <label htmlFor=''>Mi teléfono es </label>\n                                <TextField\n                                    id='phone-input'\n                                    type='tel'\n                                    className={classes.textField}\n                                    name='phone_number'\n                                    autoComplete='off'\n                                    value={input.phone_number}\n                                    onChange={(e) => handleInputChange(e)}\n                                    {...(errors.phone_number && {\n                                        error: true,\n                                        helperText: 'Teléfono invalido',\n                                    })}\n                                    inputProps={{ maxLength: 12 }}\n                                />\n                            </div>\n                            <div className={Styles.textField}>\n                                <label htmlFor=''>Mi email es </label>\n                                <TextField\n                                    id='email-input'\n                                    type='text'\n                                    className={classes.textField}\n                                    name='email'\n                                    autoComplete='off'\n                                    value={input.email}\n                                    onChange={(e) => handleInputChange(e)}\n                                    {...(errors.email && {\n                                        error: true,\n                                        helperText: 'eMail invalido',\n                                    })}\n                                />\n                            </div>\n                        </div>\n                        <Recaptcha\n                            sitekey={process.env.REACT_APP_RECAPTCHA_KEY}\n                            render='explicit'\n                            verifyCallback={verifyCaptcha}\n                        />\n                        <div className={Styles.buttonSend}>\n                            <Button\n                                variant='contained'\n                                color='primary'\n                                style={{ borderRadius: 100, margin: 10 }}\n                                onClick={handleClickOpen}\n                                disabled={\n                                    !input.age ||\n                                    !input.dni ||\n                                    !input.phone_number ||\n                                    !input.email ||\n                                    !input.name ||\n                                    !captchaResolve\n                                }\n                            >\n                                Consultar\n                            </Button>\n                        </div>\n                        <Snackbar\n                            open={errorRequest && errors.onProcess}\n                            autoHideDuration={4000}\n                            onClose={handleClose}\n                        >\n                            <Alert onClose={handleClose} severity='info'>\n                                Este correo ya tiene una solicitud en proceso!\n                            </Alert>\n                        </Snackbar>\n                    </div>\n                </Card>\n            </ThemeProvider>\n        </div>\n    );\n}\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}