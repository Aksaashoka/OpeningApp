{"ast":null,"code":"var _jsxFileName = \"/home/alan/Escritorio/Integra/IntegraApp/src/components/Admin/AdminMedics/AdminMedicEdit.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { InputLabel, MenuItem, Select } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport { statesMedic } from '../../../functions/states.js';\nimport supabase from '../../../supabase.config.js';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './AdminMedicEdit.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    margin: theme.spacing(2)\n  },\n  absolute: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(3)\n  },\n  paper: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    listStyle: 'none',\n    padding: theme.spacing(0.5),\n    margin: 0\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n    backgroundColor: '#3db7b1',\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: '15px'\n  },\n  popup: {\n    color: '#fafafa',\n    backgroundColor: '#2c7f7b',\n    fontWeight: 'bold',\n    fontSize: '30px'\n  },\n  popupBtn: {\n    color: '#fafafa',\n    padding: theme.spacing(0.5),\n    border: '3px solid #2c7f7b',\n    borderRadius: '5px',\n    backgroundColor: '#2c7f7b',\n    fontWeight: 'bold',\n    fontSize: '15px',\n    '&:hover': {\n      backgroundColor: '#fafafa',\n      color: '#2c7f7b',\n      padding: theme.spacing(0.5)\n    }\n  },\n  select: {\n    width: '177px',\n    textTransform: 'capitalize'\n  }\n}));\n\nfunction AdminMedicEdit({\n  medicData,\n  medicSpecialities,\n  setEditActive,\n  editActive\n}) {\n  _s();\n\n  const classes = useStyles();\n  const MySwal = withReactContent(Swal);\n  let [input, setInput] = useState({\n    dni: medicData.dni,\n    name: medicData.name,\n    lastname: medicData.lastname,\n    email: medicData.email,\n    phoneNumber: medicData.phone_number,\n    specialities: medicData.medical_specialities.map(el => el),\n    status: medicData.state\n  });\n  const [address, setAddress] = useState({\n    street: '',\n    number: '',\n    floor: '',\n    department: '',\n    locality: '',\n    postalCode: '',\n    state: ''\n  });\n  const [chipSpecialities, setChipSpecialities] = useState(input.specialities.map(el => el.name));\n  const [localities, setLocalities] = useState([]);\n\n  const handleClose = () => {\n    setEditActive(false);\n  };\n\n  const handleChangeAddress = async e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setAddress({ ...address,\n      [name]: value\n    });\n  };\n\n  const handlePostalCode = async () => {\n    if (address.postalCode !== '' && String(address.postalCode).length >= 4) {\n      const {\n        data,\n        error: errorsito\n      } = await supabase.from('localities').select('name, postal_code, states (name)').eq('postal_code', address.postalCode);\n      console.log(errorsito, data);\n      if (errorsito || data.length === 0) return MySwal.fire({\n        title: 'No existe ese codigo postal.',\n        icon: 'error',\n        showCancelButton: false,\n        confirmButtonText: 'Aceptar',\n        confirmButtonColor: '#00897B'\n      });\n      setLocalities(data);\n      setAddress({ ...address,\n        state: data[0].states.name\n      });\n    }\n  };\n\n  const handleChipAdd = toAdd => {\n    const value = toAdd.target.value;\n    const speciality = medicSpecialities.find(speciality => speciality.name === value);\n    setInput({ ...input,\n      specialities: input.specialities.concat(speciality)\n    });\n    setChipSpecialities(chipSpecialities.concat(value));\n  };\n\n  const handleChipDelete = toDelete => {\n    setChipSpecialities(chips => chips.filter(chip => chip !== toDelete));\n    setInput({ ...input,\n      specialities: input.specialities.filter(deleteSpec => deleteSpec.name !== toDelete)\n    });\n  };\n\n  const handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setInput({ ...input,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setEditActive(false);\n    MySwal.fire({\n      title: `Esta seguro de actualizar al medico: ${medicData.name} ${medicData.lastname} con DNI: ${medicData.dni}?`,\n      icon: 'question',\n      showCloseButton: true,\n      showCancelButton: true\n    }).then(async res => {\n      if (res.isConfirmed) {\n        try {\n          await supabase.from('medics_medical_specialities').delete().eq('medic_dni', medicData.dni);\n\n          for (let i = 0; i < input.specialities.length; i++) {\n            let {\n              error: insertError\n            } = await supabase.from('medics_medical_specialities').insert([{\n              medic_dni: medicData.dni,\n              speciality_id: input.specialities[i].id\n            }]).eq('medic_dni', medicData.dni);\n\n            if (insertError) {\n              return console.log(insertError);\n            }\n          }\n\n          let {\n            error: insertErrorData\n          } = await supabase.from('medics').update({\n            lastname: input.lastname,\n            name: input.name,\n            email: input.email,\n            phone_number: input.phoneNumber,\n            state: input.status\n          }).eq('dni', medicData.dni);\n\n          if (insertErrorData) {\n            return MySwal.fire({\n              title: 'Hubo un error al editar al medico.',\n              text: `Error: ${insertErrorData.message}`,\n              icon: 'error'\n            });\n          }\n\n          MySwal.fire({\n            title: 'Se edito al medico con exito!',\n            icon: 'success',\n            timer: 2000\n          }).then(() => window.location.reload());\n        } catch (error) {\n          console.log(error);\n          MySwal.fire({\n            title: 'Hubo un error al editar al medico.',\n            text: `Error: ${error}`,\n            icon: 'error'\n          });\n        }\n      }\n    });\n  };\n\n  if (!medicData) return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 28\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: editActive,\n    onClose: handleClose,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      className: classes.popup,\n      children: \"EDITAR MEDICO\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: \"Ingrese los datos solicitados.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        autoFocus: true,\n        margin: \"dense\",\n        disabled: true,\n        name: \"dni\",\n        label: \"DNI\",\n        type: \"number\",\n        value: input.dni,\n        onChange: handleChange,\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        autoFocus: true,\n        margin: \"dense\",\n        name: \"lastname\",\n        label: \"Apellido/s\",\n        value: input.lastname,\n        type: \"text\",\n        onChange: handleChange,\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        autoFocus: true,\n        margin: \"dense\",\n        value: input.name,\n        name: \"name\",\n        label: \"Nombre/s\",\n        type: \"text\",\n        onChange: handleChange,\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        autoFocus: true,\n        margin: \"dense\",\n        value: input.phoneNumber,\n        name: \"phoneNumber\",\n        label: \"Numero de telefono\",\n        type: \"text\",\n        onChange: handleChange,\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        autoFocus: true,\n        value: input.email,\n        margin: \"dense\",\n        name: \"email\",\n        label: \"Email\",\n        type: \"email\",\n        onChange: handleChange,\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"status\",\n        children: \"Estado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        className: classes.select,\n        name: \"status\",\n        onChange: handleChange,\n        value: input.status,\n        children: statesMedic.map((el, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: el,\n          children: el\n        }, `state-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"specialities\",\n        children: \"Especialidades\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        name: \"specialities\",\n        onChange: handleChipAdd,\n        className: classes.select,\n        children: medicSpecialities.map((el, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: el.name,\n          children: el.name\n        }, `speciality-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        component: \"ul\",\n        className: classes.paper,\n        children: chipSpecialities.map((data, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Chip, {\n            label: data,\n            onDelete: () => handleChipDelete(data),\n            className: classes.chip\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 29\n          }, this)\n        }, `speciality-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Direccion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        autoFocus: true,\n        value: address.street,\n        margin: \"dense\",\n        name: \"street\",\n        label: \"Calle\",\n        type: \"text\",\n        onChange: handleChangeAddress,\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        autoFocus: true,\n        value: address.number,\n        margin: \"dense\",\n        name: \"number\",\n        label: \"Numero\",\n        type: \"text\",\n        onChange: handleChangeAddress,\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        autoFocus: true,\n        value: address.floor,\n        margin: \"dense\",\n        name: \"floor\",\n        label: \"Piso\",\n        type: \"text\",\n        onChange: handleChangeAddress,\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        autoFocus: true,\n        value: address.postalCode,\n        margin: \"dense\",\n        name: \"postalCode\",\n        label: \"Codigo postal\",\n        type: \"text\",\n        onChange: handleChangeAddress,\n        onBlur: handlePostalCode,\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        name: \"locality\",\n        onChange: handleChangeAddress,\n        children: localities.length === 0 ? null : localities.map((el, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: el.name,\n          name: \"locality\",\n          children: el.name\n        }, `locality-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 31\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        autoFocus: true,\n        margin: \"dense\",\n        name: \"state\",\n        label: \"Provincia\",\n        value: address.state,\n        disabled: true,\n        type: \"text\",\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClose,\n        color: \"primary\",\n        className: classes.popupBtn,\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit,\n        type: \"submit\",\n        color: \"primary\",\n        className: classes.popupBtn,\n        children: \"Editar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AdminMedicEdit, \"fOQV0MPP3+kkmAVVKekRirR1968=\", false, function () {\n  return [useStyles];\n});\n\n_c = AdminMedicEdit;\nexport default AdminMedicEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminMedicEdit\");","map":{"version":3,"sources":["/home/alan/Escritorio/Integra/IntegraApp/src/components/Admin/AdminMedics/AdminMedicEdit.jsx"],"names":["React","useState","InputLabel","MenuItem","Select","makeStyles","Chip","Paper","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Swal","withReactContent","statesMedic","supabase","CircularProgress","useStyles","theme","fab","margin","spacing","absolute","position","bottom","right","paper","display","justifyContent","flexWrap","listStyle","padding","chip","backgroundColor","color","fontWeight","fontSize","popup","popupBtn","border","borderRadius","select","width","textTransform","AdminMedicEdit","medicData","medicSpecialities","setEditActive","editActive","classes","MySwal","input","setInput","dni","name","lastname","email","phoneNumber","phone_number","specialities","medical_specialities","map","el","status","state","address","setAddress","street","number","floor","department","locality","postalCode","chipSpecialities","setChipSpecialities","localities","setLocalities","handleClose","handleChangeAddress","e","target","value","handlePostalCode","String","length","data","error","errorsito","from","eq","console","log","fire","title","icon","showCancelButton","confirmButtonText","confirmButtonColor","states","handleChipAdd","toAdd","speciality","find","concat","handleChipDelete","toDelete","chips","filter","deleteSpec","handleChange","handleSubmit","preventDefault","showCloseButton","then","res","isConfirmed","delete","i","insertError","insert","medic_dni","speciality_id","id","insertErrorData","update","text","message","timer","window","location","reload","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { InputLabel, MenuItem, Select } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport { statesMedic } from '../../../functions/states.js';\nimport supabase from '../../../supabase.config.js';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './AdminMedicEdit.css';\nconst useStyles = makeStyles((theme) => ({\n    fab: {\n        margin: theme.spacing(2),\n    },\n    absolute: {\n        position: 'absolute',\n        bottom: theme.spacing(2),\n        right: theme.spacing(3),\n    },\n    paper: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        listStyle: 'none',\n        padding: theme.spacing(0.5),\n        margin: 0,\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n        backgroundColor: '#3db7b1',\n        color: 'white',\n        fontWeight: 'bold',\n        fontSize: '15px',\n    },\n\n    popup: {\n        color: '#fafafa',\n        backgroundColor: '#2c7f7b',\n        fontWeight: 'bold',\n        fontSize: '30px',\n    },\n    popupBtn: {\n        color: '#fafafa',\n        padding: theme.spacing(0.5),\n        border: '3px solid #2c7f7b',\n        borderRadius: '5px',\n        backgroundColor: '#2c7f7b',\n        fontWeight: 'bold',\n        fontSize: '15px',\n        '&:hover': {\n            backgroundColor: '#fafafa',\n            color: '#2c7f7b',\n            padding: theme.spacing(0.5),\n        },\n    },\n    select: {\n        width: '177px',\n        textTransform: 'capitalize',\n    },\n}));\n\nfunction AdminMedicEdit({\n    medicData,\n    medicSpecialities,\n    setEditActive,\n    editActive,\n}) {\n    const classes = useStyles();\n    const MySwal = withReactContent(Swal);\n    let [input, setInput] = useState({\n        dni: medicData.dni,\n        name: medicData.name,\n        lastname: medicData.lastname,\n        email: medicData.email,\n        phoneNumber: medicData.phone_number,\n        specialities: medicData.medical_specialities.map((el) => el),\n        status: medicData.state,\n    });\n\n    const [address, setAddress] = useState({\n        street: '',\n        number: '',\n        floor: '',\n        department: '',\n        locality: '',\n        postalCode: '',\n        state: '',\n    });\n\n    const [chipSpecialities, setChipSpecialities] = useState(\n        input.specialities.map((el) => el.name)\n    );\n\n    const [localities, setLocalities] = useState([]);\n\n    const handleClose = () => {\n        setEditActive(false);\n    };\n\n    const handleChangeAddress = async (e) => {\n        const name = e.target.name;\n        const value = e.target.value;\n\n        setAddress({ ...address, [name]: value });\n    };\n\n    const handlePostalCode = async () => {\n        if (\n            address.postalCode !== '' &&\n            String(address.postalCode).length >= 4\n        ) {\n            const { data, error: errorsito } = await supabase\n                .from('localities')\n                .select('name, postal_code, states (name)')\n                .eq('postal_code', address.postalCode);\n            console.log(errorsito, data);\n            if (errorsito || data.length === 0)\n                return MySwal.fire({\n                    title: 'No existe ese codigo postal.',\n                    icon: 'error',\n                    showCancelButton: false,\n                    confirmButtonText: 'Aceptar',\n                    confirmButtonColor: '#00897B',\n                });\n            setLocalities(data);\n            setAddress({ ...address, state: data[0].states.name });\n        }\n    };\n\n    const handleChipAdd = (toAdd) => {\n        const value = toAdd.target.value;\n\n        const speciality = medicSpecialities.find(\n            (speciality) => speciality.name === value\n        );\n        setInput({\n            ...input,\n            specialities: input.specialities.concat(speciality),\n        });\n        setChipSpecialities(chipSpecialities.concat(value));\n    };\n\n    const handleChipDelete = (toDelete) => {\n        setChipSpecialities((chips) =>\n            chips.filter((chip) => chip !== toDelete)\n        );\n        setInput({\n            ...input,\n            specialities: input.specialities.filter(\n                (deleteSpec) => deleteSpec.name !== toDelete\n            ),\n        });\n    };\n\n    const handleChange = (e) => {\n        const name = e.target.name;\n        const value = e.target.value;\n        setInput({ ...input, [name]: value });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setEditActive(false);\n        MySwal.fire({\n            title: `Esta seguro de actualizar al medico: ${medicData.name} ${medicData.lastname} con DNI: ${medicData.dni}?`,\n            icon: 'question',\n            showCloseButton: true,\n            showCancelButton: true,\n        }).then(async (res) => {\n            if (res.isConfirmed) {\n                try {\n                    await supabase\n                        .from('medics_medical_specialities')\n                        .delete()\n                        .eq('medic_dni', medicData.dni);\n                    for (let i = 0; i < input.specialities.length; i++) {\n                        let { error: insertError } = await supabase\n                            .from('medics_medical_specialities')\n                            .insert([\n                                {\n                                    medic_dni: medicData.dni,\n                                    speciality_id: input.specialities[i].id,\n                                },\n                            ])\n                            .eq('medic_dni', medicData.dni);\n                        if (insertError) {\n                            return console.log(insertError);\n                        }\n                    }\n                    let { error: insertErrorData } = await supabase\n                        .from('medics')\n                        .update({\n                            lastname: input.lastname,\n                            name: input.name,\n                            email: input.email,\n                            phone_number: input.phoneNumber,\n                            state: input.status,\n                        })\n                        .eq('dni', medicData.dni);\n                    if (insertErrorData) {\n                        return MySwal.fire({\n                            title: 'Hubo un error al editar al medico.',\n                            text: `Error: ${insertErrorData.message}`,\n                            icon: 'error',\n                        });\n                    }\n                    MySwal.fire({\n                        title: 'Se edito al medico con exito!',\n                        icon: 'success',\n                        timer: 2000,\n                    }).then(() => window.location.reload());\n                } catch (error) {\n                    console.log(error);\n                    MySwal.fire({\n                        title: 'Hubo un error al editar al medico.',\n                        text: `Error: ${error}`,\n                        icon: 'error',\n                    });\n                }\n            }\n        });\n    };\n\n    if (!medicData) return <CircularProgress />;\n\n    return (\n        <Dialog open={editActive} onClose={handleClose} onSubmit={handleSubmit}>\n            <DialogTitle className={classes.popup}>EDITAR MEDICO</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    Ingrese los datos solicitados.\n                </DialogContentText>\n                <TextField\n                    autoFocus\n                    margin='dense'\n                    disabled\n                    name='dni'\n                    label='DNI'\n                    type='number'\n                    value={input.dni}\n                    onChange={handleChange}\n                    fullWidth\n                />\n                <TextField\n                    autoFocus\n                    margin='dense'\n                    name='lastname'\n                    label='Apellido/s'\n                    value={input.lastname}\n                    type='text'\n                    onChange={handleChange}\n                    fullWidth\n                />\n                <TextField\n                    autoFocus\n                    margin='dense'\n                    value={input.name}\n                    name='name'\n                    label='Nombre/s'\n                    type='text'\n                    onChange={handleChange}\n                    fullWidth\n                />\n                <TextField\n                    autoFocus\n                    margin='dense'\n                    value={input.phoneNumber}\n                    name='phoneNumber'\n                    label='Numero de telefono'\n                    type='text'\n                    onChange={handleChange}\n                    fullWidth\n                />\n                <TextField\n                    autoFocus\n                    value={input.email}\n                    margin='dense'\n                    name='email'\n                    label='Email'\n                    type='email'\n                    onChange={handleChange}\n                    fullWidth\n                />\n                <InputLabel htmlFor='status'>Estado</InputLabel>\n                <Select\n                    className={classes.select}\n                    name='status'\n                    onChange={handleChange}\n                    value={input.status}\n                >\n                    {statesMedic.map((el, index) => (\n                        <MenuItem key={`state-${index}`} value={el}>\n                            {el}\n                        </MenuItem>\n                    ))}\n                </Select>\n                <InputLabel htmlFor='specialities'>Especialidades</InputLabel>\n                <Select\n                    name='specialities'\n                    onChange={handleChipAdd}\n                    className={classes.select}\n                >\n                    {medicSpecialities.map((el, index) => (\n                        <MenuItem key={`speciality-${index}`} value={el.name}>\n                            {el.name}\n                        </MenuItem>\n                    ))}\n                </Select>\n                <Paper component='ul' className={classes.paper}>\n                    {chipSpecialities.map((data, index) => (\n                        <li key={`speciality-${index}`}>\n                            <Chip\n                                label={data}\n                                onDelete={() => handleChipDelete(data)}\n                                className={classes.chip}\n                            />\n                        </li>\n                    ))}\n                </Paper>\n\n                <p>Direccion</p>\n                <TextField\n                    autoFocus\n                    value={address.street}\n                    margin='dense'\n                    name='street'\n                    label='Calle'\n                    type='text'\n                    onChange={handleChangeAddress}\n                    fullWidth\n                />\n                <TextField\n                    autoFocus\n                    value={address.number}\n                    margin='dense'\n                    name='number'\n                    label='Numero'\n                    type='text'\n                    onChange={handleChangeAddress}\n                    fullWidth\n                />\n                <TextField\n                    autoFocus\n                    value={address.floor}\n                    margin='dense'\n                    name='floor'\n                    label='Piso'\n                    type='text'\n                    onChange={handleChangeAddress}\n                    fullWidth\n                />\n                <TextField\n                    autoFocus\n                    value={address.postalCode}\n                    margin='dense'\n                    name='postalCode'\n                    label='Codigo postal'\n                    type='text'\n                    onChange={handleChangeAddress}\n                    onBlur={handlePostalCode}\n                    fullWidth\n                />\n                <Select name='locality' onChange={handleChangeAddress}>\n                    {localities.length === 0\n                        ? null\n                        : localities.map((el, index) => (\n                              <MenuItem\n                                  key={`locality-${index}`}\n                                  value={el.name}\n                                  name='locality'\n                              >\n                                  {el.name}\n                              </MenuItem>\n                          ))}\n                </Select>\n                <TextField\n                    autoFocus\n                    margin='dense'\n                    name='state'\n                    label='Provincia'\n                    value={address.state}\n                    disabled\n                    type='text'\n                    fullWidth\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    onClick={handleClose}\n                    color='primary'\n                    className={classes.popupBtn}\n                >\n                    Cancelar\n                </Button>\n                <Button\n                    onClick={handleSubmit}\n                    type='submit'\n                    color='primary'\n                    className={classes.popupBtn}\n                >\n                    Editar\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default AdminMedicEdit;\n"]},"metadata":{},"sourceType":"module"}