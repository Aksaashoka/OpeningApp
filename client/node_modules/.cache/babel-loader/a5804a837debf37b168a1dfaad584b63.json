{"ast":null,"code":"var _jsxFileName = \"/home/alan/Escritorio/Integra/IntegraApp/src/components/Admin/MedicsTable/MedicsTable.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ClearAllIcon from '@material-ui/icons/ClearAll';\nimport EditIcon from '@material-ui/icons/Edit';\nimport blue from '@material-ui/core/colors/blue';\nimport 'firebase/auth';\nimport AdminMedicAdd from '../AdminMedics/AdminMedicAdd';\nimport AdminMedicEdit from '../AdminMedics/AdminMedicEdit';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport { Avatar, Dialog, DialogTitle, DialogContent, FormControl, Select, Input, DialogActions, TextField } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport calculateAge from '../../../functions/calculateAge';\nimport supabase from '../../../supabase.config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [{\n  id: 'actions',\n  numeric: false,\n  disablePadding: false,\n  label: 'ACCIONES'\n}, {\n  id: 'profilePic',\n  numeric: false,\n  disablePadding: false,\n  label: 'FOTO'\n}, {\n  id: 'name',\n  numeric: false,\n  disablePadding: true,\n  label: 'NOMBRE'\n}, {\n  id: 'lastname',\n  numeric: false,\n  disablePadding: false,\n  label: 'APELLIDO'\n}, {\n  id: 'medic_license',\n  numeric: false,\n  disablePadding: false,\n  label: 'MATRICULA'\n}, {\n  id: 'dni',\n  numeric: true,\n  disablePadding: false,\n  label: 'DNI'\n}, {\n  id: 'email',\n  numeric: false,\n  disablePadding: false,\n  label: 'E-MAIL'\n}, {\n  id: 'phone_number',\n  numeric: false,\n  disablePadding: false,\n  label: 'TELEFONO'\n}, {\n  id: 'birthdate',\n  numeric: true,\n  disablePadding: false,\n  label: 'EDAD'\n}, {\n  id: 'specialties',\n  numeric: false,\n  disablePadding: false,\n  label: 'ESPECIALIDAD'\n}, {\n  id: 'state',\n  numeric: false,\n  disablePadding: false,\n  label: 'ESTADO'\n}];\nconst MySwal = withReactContent(Swal);\n_c = MySwal;\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    order,\n    orderBy,\n    onRequestSort\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableHead, {\n    className: classes.title,\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      children: headCells.map((headCell, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"left\",\n        padding: \"default\",\n        sortDirection: orderBy === headCell.id ? order : false,\n        children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n          className: classes.title,\n          active: orderBy === headCell.id,\n          direction: orderBy === headCell.id ? order : 'asc',\n          onClick: createSortHandler(headCell.id),\n          children: [headCell.label, orderBy === headCell.id ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.visuallyHidden,\n            children: order === 'desc' ? 'sorted descending' : 'sorted ascending'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 33\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this)\n      }, `${headCell.id}-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = EnhancedTableHead;\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n}; //------------------------makeStyle1---------------------------------------------------------------------------------------\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: lighten('#34a7a1', 0.3),\n    padding: '0px 0px 0px 0px'\n  },\n  highlight: theme.palette.type === 'light' ? {\n    color: '#fafafa',\n    backgroundColor: lighten(blue[500], 0.5),\n    //color barra superior cuando selecciono item\n    fontWeight: 'bold',\n    fontSize: '30px'\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: lighten('#34a7a1', 0.3)\n  },\n  title: {\n    flex: '1 1 100%',\n    fontWeight: 'bold',\n    fontSize: '1.4rem',\n    color: '#fafafa',\n    textAlign: 'center'\n  },\n  filters: {\n    display: 'flex'\n  },\n  iconFilter: {\n    color: '#fafafa',\n    fontWeight: 'bold',\n    '&:hover': {\n      backgroundColor: '#34a7a1'\n    }\n  },\n  iconBlock: {\n    color: '#fafafa',\n    fontWeight: 'bold',\n    '&:hover': {\n      backgroundColor: lighten('#34a7a1', 0.8)\n    }\n  },\n  p: {\n    fontWeight: 'bold',\n    fontSize: '1.4rem',\n    color: '#fafafa',\n    textAlign: 'right'\n  },\n  popup: {\n    color: '#fafafa',\n    backgroundColor: '#2c7f7b',\n    fontWeight: 'bold',\n    fontSize: '30px'\n  },\n  popupBtn: {\n    color: '#fafafa',\n    padding: theme.spacing(0.5),\n    border: '3px solid #2c7f7b',\n    backgroundColor: '#2c7f7b',\n    fontWeight: 'bold',\n    fontSize: '15px',\n    '&:hover': {\n      backgroundColor: lighten('#fafafa', 0.2),\n      color: '#2c7f7b',\n      padding: theme.spacing(0.5)\n    }\n  },\n  formControl: {\n    width: '177px'\n  }\n}));\n\nconst EnhancedTableToolbar = props => {\n  _s();\n\n  const classes = useToolbarStyles();\n  const {\n    numSelected,\n    setToShowRows,\n    toShowRows,\n    rows,\n    medicSpecialities,\n    firebase\n  } = props;\n  const [open, setOpen] = React.useState(false);\n  const [selectedOption, setSelectedOption] = React.useState('');\n  const [selectedState, setSelectedState] = React.useState('');\n\n  const handleChange = event => {\n    event.target.name === 'state' ? setSelectedState(event.target.value) && setSelectedOption(event.target.value) : setSelectedOption(event.target.value);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n    setToShowRows(rows);\n  };\n\n  const handleClose = () => {\n    setSelectedOption('');\n    setSelectedState('');\n    setOpen(false);\n    setToShowRows(rows);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    filter(e.target[0].value, e.target[2].value);\n  };\n\n  const filter = (value, option) => {\n    let result = rows;\n\n    if (option === 'lastname') {\n      value ? result = toShowRows.filter(r => {\n        return r[option].toLowerCase().includes(value.toLowerCase());\n      }) : result = rows;\n    } else if (option === 'dni') {\n      value ? result = toShowRows.filter(r => {\n        return String(r[option]).toLowerCase().includes(value.toLowerCase());\n      }) : result = rows;\n    } else if (option === 'medical_specialities') {\n      value ? result = toShowRows.filter(r => r[option].some(e => e.name.toLowerCase().includes(value.toLowerCase()))) : result = rows;\n    } else if (option === 'state') {\n      value ? result = toShowRows.filter(r => {\n        return r[option].toLowerCase() === value.toLowerCase();\n      }) : result = rows;\n    }\n\n    if (!result.length) {\n      setToShowRows(rows);\n      MySwal.fire('Sin resultados...', 'No hay coincidencias!', 2000);\n    } else {\n      setToShowRows(result);\n    }\n\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Toolbar, {\n    className: clsx(classes.root, {\n      [classes.highlight]: numSelected > 0\n    }),\n    children: [/*#__PURE__*/_jsxDEV(AdminMedicAdd, {\n      medicSpecialities: medicSpecialities,\n      firebase: firebase\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.title,\n      variant: \"h6\",\n      id: \"tableTitle\",\n      component: \"div\",\n      children: \"MEDICOS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes.p,\n      children: \"Filtros\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Filter list\",\n      onClick: handleClickOpen,\n      className: classes.iconFilter,\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"filter\",\n        children: /*#__PURE__*/_jsxDEV(FilterListIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Clear\",\n      onClick: handleClose,\n      className: classes.iconFilter,\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"reset\",\n        children: /*#__PURE__*/_jsxDEV(ClearAllIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      disableBackdropClick: true,\n      disableEscapeKeyDown: true,\n      open: open,\n      onClose: handleClose,\n      className: classes.dialog,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        className: classes.popup,\n        children: \"FILTRADO POR:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.container,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(FormControl\n          /* className={classes.formControl} */\n          , {\n            children: selectedOption === 'state' ? /*#__PURE__*/_jsxDEV(FormControl\n            /* className={classes.formControl} */\n            , {\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                inputProps: {\n                  style: {\n                    width: '177px'\n                  },\n                  id: 'outlined-age-native-simple',\n                  name: 'state'\n                },\n                variant: \"outlined\",\n                native: true,\n                value: selectedState,\n                onChange: handleChange,\n                input: /*#__PURE__*/_jsxDEV(Input, {\n                  id: \"demo-dialog-native\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 45\n                }, this),\n                name: \"state\",\n                label: \"value\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  \"aria-label\": \"None\",\n                  value: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"activo\",\n                  children: \"Activo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"inhabilitado\",\n                  children: \"Inhabilitado\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-basic\",\n              label: \"ingresar...\",\n              variant: \"outlined\",\n              disabled: !selectedOption\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              native: true,\n              value: selectedOption,\n              onChange: handleChange,\n              variant: \"outlined\",\n              input: /*#__PURE__*/_jsxDEV(Input, {\n                id: \"demo-dialog-native\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 40\n              }, this),\n              inputProps: {\n                style: {\n                  width: '177px'\n                },\n                id: 'outlined-age-native-simple',\n                name: 'filter-type'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                \"aria-label\": \"None\",\n                value: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"dni\",\n                children: \"DNI\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"lastname\",\n                children: \"Apellido\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"medical_specialities\",\n                children: \"Especialidad\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"state\",\n                children: \"Estado\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            className: classes.popupBtn,\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.popupBtn,\n            type: \"submit\",\n            children: \"Filtrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 320,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EnhancedTableToolbar, \"ihqwY80VvQ6OumiQDq/ufs6L1H0=\", false, function () {\n  return [useToolbarStyles];\n});\n\n_c3 = EnhancedTableToolbar;\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n}; //-------------------- EnhancedTableToolbar Style\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    padding: '0px 0px 0px 0px'\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  },\n  title: {\n    color: '#212121',\n    fontWeight: 'bold',\n    backgroundColor: lighten('#34a7a1', 0.6)\n  },\n  rowColor: {\n    backgroundColor: lighten('#e0e0e0', 0.3),\n    ':checked': {\n      color: blue[500]\n    }\n  },\n  iconFilter: {\n    color: 'rgba(0, 0, 0, 0.47)',\n    fontWeight: 'bold',\n    '&:hover': {\n      backgroundColor: lighten('#34a7a1', 0.8)\n    }\n  }\n}));\nexport default function MedicsTable({\n  firebase\n}) {\n  _s2();\n\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [listMedics, setListMedics] = React.useState([]);\n  const [medicSpecialities, setMedicSpecialities] = React.useState([]);\n  const [editActive, setEditActive] = React.useState(false);\n  const [medicData, setMedicData] = React.useState(null);\n  const [toShowRows, setToShowRows] = React.useState([]);\n  const MySwal = withReactContent(Swal);\n\n  const fetchMedics = async () => {\n    const {\n      data: medics,\n      error: errorFetchMedics\n    } = await supabase.from('medics').select('dni, name, lastname, medic_license, email, phone_number, birthdate, state, profilePic, medical_specialities (id, name)');\n    if (errorFetchMedics) return console.log(errorFetchMedics.message);\n    medics && setToShowRows(medics);\n    setListMedics(medics);\n  };\n\n  const rows = listMedics;\n\n  const fetchSpecialities = async () => {\n    const {\n      data: specialities,\n      error: errorFetchSpecialities\n    } = await supabase.from('medical_specialities').select('name, id');\n    if (errorFetchSpecialities) return console.log(errorFetchSpecialities.message);\n    setMedicSpecialities(specialities);\n  };\n\n  React.useEffect(() => {\n    fetchMedics();\n    fetchSpecialities();\n  }, []);\n\n  const handleEdit = medicData => {\n    setMedicData(medicData);\n    setEditActive(true);\n    if (editActive) setEditActive(false);\n  };\n\n  const handleDelete = async medicData => {\n    MySwal.fire({\n      title: `Desea inhabilitar al medico ${medicData.name} ${medicData.lastname} de la obra social?`,\n      showCloseButton: true,\n      showCancelButton: true,\n      icon: 'question'\n    }).then(async res => {\n      if (res.isConfirmed) {\n        try {\n          await supabase.from('medics').update({\n            state: 'inhabilitado'\n          }).eq('dni', medicData.dni);\n          MySwal.fire({\n            title: 'Se inhabilito al medico con exito!',\n            icon: 'success',\n            timer: 2000\n          }).then(() => window.location.reload());\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    });\n  };\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = toShowRows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, toShowRows.length - page * rowsPerPage);\n  if (toShowRows.length === 0) return /*#__PURE__*/_jsxDEV(CircularProgress, {\n    color: \"secondary\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 588,\n    columnNumber: 41\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(EnhancedTableToolbar, {\n        numSelected: selected.length,\n        setToShowRows: setToShowRows,\n        toShowRows: toShowRows,\n        rows: rows,\n        medicSpecialities: medicSpecialities,\n        firebase: firebase\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: classes.table,\n          \"aria-labelledby\": \"tableTitle\",\n          size: \"small\",\n          \"aria-label\": \"enhanced table\",\n          children: [/*#__PURE__*/_jsxDEV(EnhancedTableHead, {\n            classes: classes,\n            numSelected: selected.length,\n            order: order,\n            orderBy: orderBy,\n            onSelectAllClick: handleSelectAllClick,\n            onRequestSort: handleRequestSort,\n            rowCount: toShowRows.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [stableSort(toShowRows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n              const isItemSelected = isSelected(row.name);\n              const labelId = `enhanced-table-checkbox-${index}`;\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true // onClick={(event) => handleClick(event, row.name)}\n                ,\n                role: \"checkbox\",\n                \"aria-checked\": isItemSelected,\n                tabIndex: -1,\n                selected: isItemSelected,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  className: index % 2 === 1 ? classes.rowColor : null,\n                  children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"Edit\",\n                    className: classes.iconFilter,\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      size: \"small\",\n                      \"aria-label\": \"Edit\",\n                      children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                        onClick: () => handleEdit(row)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 658,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 654,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 648,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"Delete\",\n                    className: classes.iconFilter,\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      size: \"small\",\n                      \"aria-label\": \"Delete\",\n                      children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                        onClick: () => handleDelete(row)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 675,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 671,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 665,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 640,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  className: index % 2 === 1 ? classes.rowColor : null,\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    alt: \"Profile Picture\",\n                    src: row.profilePic\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 693,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 685,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  className: index % 2 === 1 ? classes.rowColor : null,\n                  component: \"th\",\n                  id: labelId,\n                  scope: \"row\",\n                  padding: \"default\",\n                  children: row.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 698,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  className: index % 2 === 1 ? classes.rowColor : null,\n                  children: row.lastname\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 711,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  className: index % 2 === 1 ? classes.rowColor : null,\n                  children: row.medic_license\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 721,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  className: index % 2 === 1 ? classes.rowColor : null,\n                  children: row.dni\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 731,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  className: index % 2 === 1 ? classes.rowColor : null,\n                  children: row.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 741,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  className: index % 2 === 1 ? classes.rowColor : null,\n                  children: row.phone_number\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 751,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  className: index % 2 === 1 ? classes.rowColor : null,\n                  children: calculateAge(row.birthdate)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 761,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  className: index % 2 === 1 ? classes.rowColor : null,\n                  children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                    children: row.medical_specialities.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: \"Clinica\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 782,\n                      columnNumber: 57\n                    }, this) : row.medical_specialities.map(s => /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: s.name.charAt(0).toUpperCase() + s.name.slice(1)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 786,\n                      columnNumber: 65\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 779,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 772,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  className: index % 2 === 1 ? classes.rowColor : null,\n                  children: row.state\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 801,\n                  columnNumber: 45\n                }, this)]\n              }, row.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 631,\n                columnNumber: 41\n              }, this);\n            }), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n              style: {\n                height: 33 * emptyRows\n              },\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 10\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 816,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 815,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 617,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        className: classes.root,\n        rowsPerPageOptions: [5, 10, 15, 20],\n        component: \"div\",\n        count: toShowRows.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onChangePage: handleChangePage,\n        onChangeRowsPerPage: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 13\n    }, this), editActive ? /*#__PURE__*/_jsxDEV(AdminMedicEdit, {\n      medicData: medicData,\n      medicSpecialities: medicSpecialities,\n      setEditActive: setEditActive,\n      editActive: editActive\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 834,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 591,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(MedicsTable, \"JOQD26bb+6PPsi4poqVKSvay4Qg=\", false, function () {\n  return [useStyles];\n});\n\n_c4 = MedicsTable;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"MySwal\");\n$RefreshReg$(_c2, \"EnhancedTableHead\");\n$RefreshReg$(_c3, \"EnhancedTableToolbar\");\n$RefreshReg$(_c4, \"MedicsTable\");","map":{"version":3,"sources":["/home/alan/Escritorio/Integra/IntegraApp/src/components/Admin/MedicsTable/MedicsTable.jsx"],"names":["React","PropTypes","clsx","lighten","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","IconButton","Tooltip","DeleteIcon","FilterListIcon","CircularProgress","ClearAllIcon","EditIcon","blue","AdminMedicAdd","AdminMedicEdit","Swal","withReactContent","Avatar","Dialog","DialogTitle","DialogContent","FormControl","Select","Input","DialogActions","TextField","Button","calculateAge","supabase","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","disablePadding","label","MySwal","EnhancedTableHead","props","classes","onRequestSort","createSortHandler","property","event","title","headCell","visuallyHidden","propTypes","object","isRequired","numSelected","number","func","onSelectAllClick","oneOf","string","rowCount","useToolbarStyles","theme","root","backgroundColor","padding","highlight","palette","type","color","fontWeight","fontSize","text","primary","flex","textAlign","filters","display","iconFilter","iconBlock","p","popup","popupBtn","spacing","border","formControl","width","EnhancedTableToolbar","setToShowRows","toShowRows","rows","medicSpecialities","firebase","open","setOpen","useState","selectedOption","setSelectedOption","selectedState","setSelectedState","handleChange","target","name","value","handleClickOpen","handleClose","handleSubmit","e","preventDefault","filter","option","result","r","toLowerCase","includes","String","some","length","fire","dialog","container","style","useStyles","paper","marginBottom","table","minWidth","clip","height","margin","overflow","position","top","rowColor","MedicsTable","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","listMedics","setListMedics","setMedicSpecialities","editActive","setEditActive","medicData","setMedicData","fetchMedics","data","medics","error","errorFetchMedics","from","select","console","log","message","fetchSpecialities","specialities","errorFetchSpecialities","useEffect","handleEdit","handleDelete","lastname","showCloseButton","showCancelButton","icon","then","res","isConfirmed","update","state","eq","dni","timer","window","location","reload","handleRequestSort","isAsc","handleSelectAllClick","checked","newSelecteds","n","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","isSelected","indexOf","emptyRows","Math","min","slice","row","isItemSelected","labelId","profilePic","medic_license","email","phone_number","birthdate","medical_specialities","s","charAt","toUpperCase"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ClearAllIcon from '@material-ui/icons/ClearAll';\nimport EditIcon from '@material-ui/icons/Edit';\nimport blue from '@material-ui/core/colors/blue';\nimport 'firebase/auth';\nimport AdminMedicAdd from '../AdminMedics/AdminMedicAdd';\nimport AdminMedicEdit from '../AdminMedics/AdminMedicEdit';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport {\n    Avatar,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    FormControl,\n    Select,\n    Input,\n    DialogActions,\n    TextField,\n} from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport calculateAge from '../../../functions/calculateAge';\nimport supabase from '../../../supabase.config';\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n    {\n        id: 'actions',\n        numeric: false,\n        disablePadding: false,\n        label: 'ACCIONES',\n    },\n    {\n        id: 'profilePic',\n        numeric: false,\n        disablePadding: false,\n        label: 'FOTO',\n    },\n    { id: 'name', numeric: false, disablePadding: true, label: 'NOMBRE' },\n    {\n        id: 'lastname',\n        numeric: false,\n        disablePadding: false,\n        label: 'APELLIDO',\n    },\n    {\n        id: 'medic_license',\n        numeric: false,\n        disablePadding: false,\n        label: 'MATRICULA',\n    },\n    { id: 'dni', numeric: true, disablePadding: false, label: 'DNI' },\n    { id: 'email', numeric: false, disablePadding: false, label: 'E-MAIL' },\n    {\n        id: 'phone_number',\n        numeric: false,\n        disablePadding: false,\n        label: 'TELEFONO',\n    },\n    {\n        id: 'birthdate',\n        numeric: true,\n        disablePadding: false,\n        label: 'EDAD',\n    },\n\n    {\n        id: 'specialties',\n        numeric: false,\n        disablePadding: false,\n        label: 'ESPECIALIDAD',\n    },\n    { id: 'state', numeric: false, disablePadding: false, label: 'ESTADO' },\n];\n\nconst MySwal = withReactContent(Swal);\n\nfunction EnhancedTableHead(props) {\n    const { classes, order, orderBy, onRequestSort } = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead className={classes.title}>\n            <TableRow>\n                {headCells.map((headCell, index) => (\n                    <TableCell\n                        key={`${headCell.id}-${index}`}\n                        align='left'\n                        padding='default'\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            className={classes.title}\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                                    {order === 'desc'\n                                        ? 'sorted descending'\n                                        : 'sorted ascending'}\n                                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n};\n\n//------------------------makeStyle1---------------------------------------------------------------------------------------\nconst useToolbarStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: lighten('#34a7a1', 0.3),\n        padding: '0px 0px 0px 0px',\n    },\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                  color: '#fafafa',\n                  backgroundColor: lighten(blue[500], 0.5), //color barra superior cuando selecciono item\n                  fontWeight: 'bold',\n                  fontSize: '30px',\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: lighten('#34a7a1', 0.3),\n              },\n    title: {\n        flex: '1 1 100%',\n        fontWeight: 'bold',\n        fontSize: '1.4rem',\n        color: '#fafafa',\n        textAlign: 'center',\n    },\n    filters: {\n        display: 'flex',\n    },\n    iconFilter: {\n        color: '#fafafa',\n        fontWeight: 'bold',\n        '&:hover': {\n            backgroundColor: '#34a7a1',\n        },\n    },\n    iconBlock: {\n        color: '#fafafa',\n        fontWeight: 'bold',\n        '&:hover': {\n            backgroundColor: lighten('#34a7a1', 0.8),\n        },\n    },\n    p: {\n        fontWeight: 'bold',\n        fontSize: '1.4rem',\n        color: '#fafafa',\n        textAlign: 'right',\n    },\n    popup: {\n        color: '#fafafa',\n        backgroundColor: '#2c7f7b',\n        fontWeight: 'bold',\n        fontSize: '30px',\n    },\n    popupBtn: {\n        color: '#fafafa',\n        padding: theme.spacing(0.5),\n        border: '3px solid #2c7f7b',\n        backgroundColor: '#2c7f7b',\n        fontWeight: 'bold',\n        fontSize: '15px',\n        '&:hover': {\n            backgroundColor: lighten('#fafafa', 0.2),\n            color: '#2c7f7b',\n            padding: theme.spacing(0.5),\n        },\n    },\n    formControl: {\n        width: '177px',\n    },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n    const classes = useToolbarStyles();\n    const { numSelected, setToShowRows, toShowRows, rows, medicSpecialities, firebase } =\n        props;\n    const [open, setOpen] = React.useState(false);\n    const [selectedOption, setSelectedOption] = React.useState('');\n    const [selectedState, setSelectedState] = React.useState('');\n\n    const handleChange = (event) => {\n        event.target.name === 'state'\n            ? setSelectedState(event.target.value) &&\n              setSelectedOption(event.target.value)\n            : setSelectedOption(event.target.value);\n    };\n\n    const handleClickOpen = () => {\n        setOpen(true);\n        setToShowRows(rows);\n    };\n\n    const handleClose = () => {\n        setSelectedOption('');\n        setSelectedState('');\n        setOpen(false);\n        setToShowRows(rows);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        filter(e.target[0].value, e.target[2].value);\n    };\n\n    const filter = (value, option) => {\n        let result = rows;\n\n        if (option === 'lastname') {\n            value\n                ? (result = toShowRows.filter((r) => {\n                      return r[option]\n                          .toLowerCase()\n                          .includes(value.toLowerCase());\n                  }))\n                : (result = rows);\n        } else if (option === 'dni') {\n            value\n                ? (result = toShowRows.filter((r) => {\n                      return String(r[option])\n                          .toLowerCase()\n                          .includes(value.toLowerCase());\n                  }))\n                : (result = rows);\n        } else if (option === 'medical_specialities') {\n            value\n                ? (result = toShowRows.filter((r) =>\n                      r[option].some((e) =>\n                          e.name.toLowerCase().includes(value.toLowerCase())\n                      )\n                  ))\n                : (result = rows);\n        } else if (option === 'state') {\n            value\n                ? (result = toShowRows.filter((r) => {\n                      return r[option].toLowerCase() === value.toLowerCase();\n                  }))\n                : (result = rows);\n        }\n\n        if (!result.length) {\n            setToShowRows(rows);\n            MySwal.fire('Sin resultados...', 'No hay coincidencias!', 2000);\n        } else {\n            setToShowRows(result);\n        }\n\n        setOpen(false);\n    };\n\n    return (\n        <Toolbar\n            className={clsx(classes.root, {\n                [classes.highlight]: numSelected > 0,\n            })}\n        >\n            <AdminMedicAdd medicSpecialities={medicSpecialities} firebase={firebase} />\n            <Typography\n                className={classes.title}\n                variant='h6'\n                id='tableTitle'\n                component='div'\n            >\n                MEDICOS\n            </Typography>\n            <p className={classes.p}>Filtros</p>\n            <Tooltip\n                title='Filter list'\n                onClick={handleClickOpen}\n                className={classes.iconFilter}\n            >\n                <IconButton aria-label='filter'>\n                    <FilterListIcon />\n                </IconButton>\n            </Tooltip>\n            <Tooltip\n                title='Clear'\n                onClick={handleClose}\n                className={classes.iconFilter}\n            >\n                <IconButton aria-label='reset'>\n                    <ClearAllIcon />\n                </IconButton>\n            </Tooltip>\n            <Dialog\n                disableBackdropClick\n                disableEscapeKeyDown\n                open={open}\n                onClose={handleClose}\n                className={classes.dialog}\n            >\n                <DialogTitle className={classes.popup}>\n                    FILTRADO POR:\n                </DialogTitle>\n                <form className={classes.container} onSubmit={handleSubmit}>\n                    <DialogContent>\n                        <FormControl /* className={classes.formControl} */>\n                            {selectedOption === 'state' ? (\n                                <FormControl /* className={classes.formControl} */\n                                >\n                                    <Select\n                                        inputProps={{\n                                            style: { width: '177px' },\n                                            id: 'outlined-age-native-simple',\n                                            name: 'state',\n                                        }}\n                                        variant='outlined'\n                                        native\n                                        value={selectedState}\n                                        onChange={handleChange}\n                                        input={\n                                            <Input id='demo-dialog-native' />\n                                        }\n                                        name='state'\n                                        label='value'\n                                    >\n                                        <option aria-label='None' value='' />\n                                        <option value='activo'>Activo</option>\n                                        <option value='inhabilitado'>\n                                            Inhabilitado\n                                        </option>\n                                    </Select>\n                                </FormControl>\n                            ) : (\n                                <TextField\n                                    id='outlined-basic'\n                                    label='ingresar...'\n                                    variant='outlined'\n                                    disabled={!selectedOption}\n                                />\n                            )}\n                        </FormControl>\n                        <FormControl>\n                            <Select\n                                native\n                                value={selectedOption}\n                                onChange={handleChange}\n                                variant='outlined'\n                                input={<Input id='demo-dialog-native' />}\n                                inputProps={{\n                                    style: { width: '177px' },\n                                    id: 'outlined-age-native-simple',\n                                    name: 'filter-type',\n                                }}\n                            >\n                                <option aria-label='None' value='' />\n                                <option value='dni'>DNI</option>\n                                <option value='lastname'>Apellido</option>\n                                <option value='medical_specialities'>\n                                    Especialidad\n                                </option>\n                                <option value='state'>Estado</option>\n                            </Select>\n                        </FormControl>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button\n                            onClick={handleClose}\n                            className={classes.popupBtn}\n                        >\n                            Cancelar\n                        </Button>\n                        <Button className={classes.popupBtn} type='submit'>\n                            Filtrar\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        </Toolbar>\n    );\n};\n\nEnhancedTableToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired,\n};\n\n//-------------------- EnhancedTableToolbar Style\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        padding: '0px 0px 0px 0px',\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n    title: {\n        color: '#212121',\n        fontWeight: 'bold',\n        backgroundColor: lighten('#34a7a1', 0.6),\n    },\n    rowColor: {\n        backgroundColor: lighten('#e0e0e0', 0.3),\n        ':checked': {\n            color: blue[500],\n        },\n    },\n    iconFilter: {\n        color: 'rgba(0, 0, 0, 0.47)',\n        fontWeight: 'bold',\n        '&:hover': {\n            backgroundColor: lighten('#34a7a1', 0.8),\n        },\n    },\n}));\n\nexport default function MedicsTable({firebase}) {\n    const classes = useStyles();\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('calories');\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n    const [listMedics, setListMedics] = React.useState([]);\n    const [medicSpecialities, setMedicSpecialities] = React.useState([]);\n    const [editActive, setEditActive] = React.useState(false);\n    const [medicData, setMedicData] = React.useState(null);\n    const [toShowRows, setToShowRows] = React.useState([]);\n    const MySwal = withReactContent(Swal);\n\n    const fetchMedics = async () => {\n        const { data: medics, error: errorFetchMedics } = await supabase\n            .from('medics')\n            .select(\n                'dni, name, lastname, medic_license, email, phone_number, birthdate, state, profilePic, medical_specialities (id, name)'\n            );\n        if (errorFetchMedics) return console.log(errorFetchMedics.message);\n        medics && setToShowRows(medics);\n        setListMedics(medics);\n    };\n    const rows = listMedics;\n    const fetchSpecialities = async () => {\n        const { data: specialities, error: errorFetchSpecialities } =\n            await supabase.from('medical_specialities').select('name, id');\n        if (errorFetchSpecialities)\n            return console.log(errorFetchSpecialities.message);\n        setMedicSpecialities(specialities);\n    };\n\n    React.useEffect(() => {\n        fetchMedics();\n        fetchSpecialities();\n    }, []);\n\n    const handleEdit = (medicData) => {\n        setMedicData(medicData);\n        setEditActive(true);\n        if (editActive) setEditActive(false);\n    };\n\n    const handleDelete = async (medicData) => {\n        MySwal.fire({\n            title: `Desea inhabilitar al medico ${medicData.name} ${medicData.lastname} de la obra social?`,\n            showCloseButton: true,\n            showCancelButton: true,\n            icon: 'question',\n        }).then(async (res) => {\n            if (res.isConfirmed) {\n                try {\n                    await supabase\n                        .from('medics')\n                        .update({ state: 'inhabilitado' })\n                        .eq('dni', medicData.dni);\n                    MySwal.fire({\n                        title: 'Se inhabilito al medico con exito!',\n                        icon: 'success',\n                        timer: 2000,\n                    }).then(() => window.location.reload());\n                } catch (error) {\n                    console.log(error);\n                }\n            }\n        });\n    };\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = toShowRows.map((n) => n.name);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const isSelected = (name) => selected.indexOf(name) !== -1;\n\n    const emptyRows =\n        rowsPerPage -\n        Math.min(rowsPerPage, toShowRows.length - page * rowsPerPage);\n\n    if (toShowRows.length === 0) return <CircularProgress color='secondary' />;\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <EnhancedTableToolbar\n                    numSelected={selected.length}\n                    setToShowRows={setToShowRows}\n                    toShowRows={toShowRows}\n                    rows={rows}\n                    medicSpecialities={medicSpecialities}\n                    firebase={firebase}\n                />\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby='tableTitle'\n                        size='small'\n                        aria-label='enhanced table'\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            numSelected={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={toShowRows.length}\n                        />\n                        <TableBody>\n                            {stableSort(\n                                toShowRows,\n                                getComparator(order, orderBy)\n                            )\n                                .slice(\n                                    page * rowsPerPage,\n                                    page * rowsPerPage + rowsPerPage\n                                )\n                                .map((row, index) => {\n                                    const isItemSelected = isSelected(row.name);\n                                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                                    return (\n                                        <TableRow\n                                            hover\n                                            // onClick={(event) => handleClick(event, row.name)}\n                                            role='checkbox'\n                                            aria-checked={isItemSelected}\n                                            tabIndex={-1}\n                                            key={row.name}\n                                            selected={isItemSelected}\n                                        >\n                                            <TableCell\n                                                align='left'\n                                                className={\n                                                    index % 2 === 1\n                                                        ? classes.rowColor\n                                                        : null\n                                                }\n                                            >\n                                                <Tooltip\n                                                    title='Edit'\n                                                    className={\n                                                        classes.iconFilter\n                                                    }\n                                                >\n                                                    <IconButton\n                                                        size='small'\n                                                        aria-label='Edit'\n                                                    >\n                                                        <EditIcon\n                                                            onClick={() =>\n                                                                handleEdit(row)\n                                                            }\n                                                        />\n                                                    </IconButton>\n                                                </Tooltip>\n                                                <Tooltip\n                                                    title='Delete'\n                                                    className={\n                                                        classes.iconFilter\n                                                    }\n                                                >\n                                                    <IconButton\n                                                        size='small'\n                                                        aria-label='Delete'\n                                                    >\n                                                        <DeleteIcon\n                                                            onClick={() =>\n                                                                handleDelete(\n                                                                    row\n                                                                )\n                                                            }\n                                                        />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </TableCell>\n                                            <TableCell\n                                                align='center'\n                                                className={\n                                                    index % 2 === 1\n                                                        ? classes.rowColor\n                                                        : null\n                                                }\n                                            >\n                                                <Avatar\n                                                    alt='Profile Picture'\n                                                    src={row.profilePic}\n                                                />\n                                            </TableCell>\n                                            <TableCell\n                                                className={\n                                                    index % 2 === 1\n                                                        ? classes.rowColor\n                                                        : null\n                                                }\n                                                component='th'\n                                                id={labelId}\n                                                scope='row'\n                                                padding='default'\n                                            >\n                                                {row.name}\n                                            </TableCell>\n                                            <TableCell\n                                                align='left'\n                                                className={\n                                                    index % 2 === 1\n                                                        ? classes.rowColor\n                                                        : null\n                                                }\n                                            >\n                                                {row.lastname}\n                                            </TableCell>\n                                            <TableCell\n                                                align='left'\n                                                className={\n                                                    index % 2 === 1\n                                                        ? classes.rowColor\n                                                        : null\n                                                }\n                                            >\n                                                {row.medic_license}\n                                            </TableCell>\n                                            <TableCell\n                                                align='left'\n                                                className={\n                                                    index % 2 === 1\n                                                        ? classes.rowColor\n                                                        : null\n                                                }\n                                            >\n                                                {row.dni}\n                                            </TableCell>\n                                            <TableCell\n                                                align='left'\n                                                className={\n                                                    index % 2 === 1\n                                                        ? classes.rowColor\n                                                        : null\n                                                }\n                                            >\n                                                {row.email}\n                                            </TableCell>\n                                            <TableCell\n                                                align='left'\n                                                className={\n                                                    index % 2 === 1\n                                                        ? classes.rowColor\n                                                        : null\n                                                }\n                                            >\n                                                {row.phone_number}\n                                            </TableCell>\n                                            <TableCell\n                                                align='left'\n                                                className={\n                                                    index % 2 === 1\n                                                        ? classes.rowColor\n                                                        : null\n                                                }\n                                            >\n                                                {calculateAge(row.birthdate)}\n                                            </TableCell>\n\n                                            <TableCell\n                                                className={\n                                                    index % 2 === 1\n                                                        ? classes.rowColor\n                                                        : null\n                                                }\n                                            >\n                                                <ul>\n                                                    {row.medical_specialities\n                                                        .length === 0 ? (\n                                                        <li>Clinica</li>\n                                                    ) : (\n                                                        row.medical_specialities.map(\n                                                            (s) => (\n                                                                <li>\n                                                                    {s.name\n                                                                        .charAt(\n                                                                            0\n                                                                        )\n                                                                        .toUpperCase() +\n                                                                        s.name.slice(\n                                                                            1\n                                                                        )}\n                                                                </li>\n                                                            )\n                                                        )\n                                                    )}\n                                                </ul>\n                                            </TableCell>\n                                            <TableCell\n                                                align='left'\n                                                className={\n                                                    index % 2 === 1\n                                                        ? classes.rowColor\n                                                        : null\n                                                }\n                                            >\n                                                {row.state}\n                                            </TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: 33 * emptyRows }}>\n                                    <TableCell colSpan={10} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    className={classes.root}\n                    rowsPerPageOptions={[5, 10, 15, 20]}\n                    component='div'\n                    count={toShowRows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n            {editActive ? (\n                <AdminMedicEdit\n                    medicData={medicData}\n                    medicSpecialities={medicSpecialities}\n                    setEditActive={setEditActive}\n                    editActive={editActive}\n                />\n            ) : null}\n            {/* <AdminMedicAdd medicSpecialities={medicSpecialities} /> */}\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}