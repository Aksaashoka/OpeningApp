{"ast":null,"code":"var _jsxFileName = \"/home/alan/Escritorio/Integra/IntegraApp/src/components/Admin/AdminOrders/AdminOrdersEdit.jsx\",\n    _s = $RefreshSig$();\n\n/*eslint-disable */\nimport React, { useState } from 'react';\nimport { InputLabel, MenuItem, Select, FormControl } from '@material-ui/core';\nimport { makeStyles, lighten } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport { statesMedic } from '../../../functions/states.js';\n/* import styles from './AdminOrdersEdit.css';\n */\n\nimport supabase from '../../../supabase.config.js';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    margin: theme.spacing(2)\n  },\n  absolute: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(3)\n  },\n  paper: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    listStyle: 'none',\n    padding: theme.spacing(0.5),\n    margin: 0\n  },\n  chip: {\n    margin: theme.spacing(0.5)\n  },\n  popup: {\n    color: '#fafafa',\n    backgroundColor: '#2c7f7b',\n    fontWeight: 'bold',\n    fontSize: '30px'\n  },\n  popupBtn: {\n    color: '#fafafa',\n    padding: theme.spacing(0.5),\n    border: '3px solid #2c7f7b',\n    backgroundColor: '#2c7f7b',\n    fontWeight: 'bold',\n    fontSize: '15px',\n    '&:hover': {\n      backgroundColor: lighten('#fafafa', 0.2),\n      color: '#2c7f7b',\n      padding: theme.spacing(0.5)\n    }\n  }\n}));\n\nfunction AdminMedicEdit({\n  status,\n  data,\n  setEditActive,\n  editActive\n}) {\n  _s();\n\n  const classes = useStyles();\n  const MySwal = withReactContent(Swal);\n  let [input, setInput] = React.useState({\n    id: '',\n    status: ''\n  });\n\n  const handleClose = () => {\n    setEditActive(false);\n  };\n\n  const handleChange = e => {\n    const value = e.target.value; //autorizada\n\n    setInput({\n      id: value.id,\n      status: value.name\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setEditActive(false);\n    MySwal.fire({\n      title: `Esta seguro que desea actualizar el estado de la orden del paciente: ${data.partners.name} ${data.partners.lastname} con DNI: ${data.partners.dni}?`,\n      icon: 'question',\n      showCloseButton: true,\n      showCancelButton: true\n    }).then(async res => {\n      if (res.isConfirmed) {\n        try {\n          await supabase.from('orders').update({\n            status: input.id\n          }).eq('id', data.id);\n          MySwal.fire({\n            title: 'Se edito el estado con exito!',\n            icon: 'success',\n            timer: 2000\n          }).then(() => window.location.reload());\n        } catch (error) {\n          console.log(error);\n          MySwal.fire({\n            title: 'Hubo un error al editar el.',\n            text: `Error: ${error}`,\n            icon: 'error'\n          });\n        }\n      }\n    });\n  };\n\n  if (!data) return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: editActive,\n    onClose: handleClose,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      className: classes.popup,\n      children: \"EDITAR ESTADO\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"demo-simple-select\",\n        children: \"Estado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          name: \"status\",\n          onChange: handleChange,\n          value: input.status\n          /* id=\"demo-simple-select\"\n          labelId=\"demo-simple-select-label\" */\n          ,\n          inputProps: {\n            style: {\n              width: '177px'\n            }\n          },\n          variant: \"outlined\",\n          size: \"small\",\n          native: true,\n          children: status.map((el, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: el,\n            children: el.name\n          }, `state-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClose,\n        className: classes.popupBtn,\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit,\n        type: \"submit\",\n        className: classes.popupBtn,\n        children: \"Editar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AdminMedicEdit, \"KNZpbfjW0mPIP/HULjyb87Ig+uA=\", false, function () {\n  return [useStyles];\n});\n\n_c = AdminMedicEdit;\nexport default AdminMedicEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminMedicEdit\");","map":{"version":3,"sources":["/home/alan/Escritorio/Integra/IntegraApp/src/components/Admin/AdminOrders/AdminOrdersEdit.jsx"],"names":["React","useState","InputLabel","MenuItem","Select","FormControl","makeStyles","lighten","Chip","Paper","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Swal","withReactContent","statesMedic","supabase","CircularProgress","useStyles","theme","fab","margin","spacing","absolute","position","bottom","right","paper","display","justifyContent","flexWrap","listStyle","padding","chip","popup","color","backgroundColor","fontWeight","fontSize","popupBtn","border","AdminMedicEdit","status","data","setEditActive","editActive","classes","MySwal","input","setInput","id","handleClose","handleChange","e","value","target","name","handleSubmit","preventDefault","fire","title","partners","lastname","dni","icon","showCloseButton","showCancelButton","then","res","isConfirmed","from","update","eq","timer","window","location","reload","error","console","log","text","style","width","map","el","index"],"mappings":"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","sourcesContent":["/*eslint-disable */\nimport React, { useState } from 'react';\nimport { InputLabel, MenuItem, Select, FormControl } from '@material-ui/core';\nimport { makeStyles, lighten } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport { statesMedic } from '../../../functions/states.js';\n/* import styles from './AdminOrdersEdit.css';\n */ import supabase from '../../../supabase.config.js';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n    fab: {\n        margin: theme.spacing(2),\n    },\n    absolute: {\n        position: 'absolute',\n        bottom: theme.spacing(2),\n        right: theme.spacing(3),\n    },\n    paper: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        listStyle: 'none',\n        padding: theme.spacing(0.5),\n        margin: 0,\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n    },\n    popup: {\n        color: '#fafafa',\n        backgroundColor: '#2c7f7b',\n        fontWeight: 'bold',\n        fontSize: '30px',\n    },\n    popupBtn: {\n        color: '#fafafa',\n        padding: theme.spacing(0.5),\n        border: '3px solid #2c7f7b',\n        backgroundColor: '#2c7f7b',\n        fontWeight: 'bold',\n        fontSize: '15px',\n        '&:hover': {\n            backgroundColor: lighten('#fafafa', 0.2),\n            color: '#2c7f7b',\n            padding: theme.spacing(0.5),\n        },\n    },\n}));\n\nfunction AdminMedicEdit({ status, data, setEditActive, editActive }) {\n    const classes = useStyles();\n    const MySwal = withReactContent(Swal);\n    let [input, setInput] = React.useState({\n        id: '',\n        status: '',\n    });\n\n    const handleClose = () => {\n        setEditActive(false);\n    };\n\n    const handleChange = (e) => {\n        const value = e.target.value; //autorizada\n        setInput({ id: value.id, status: value.name });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setEditActive(false);\n        MySwal.fire({\n            title: `Esta seguro que desea actualizar el estado de la orden del paciente: ${data.partners.name} ${data.partners.lastname} con DNI: ${data.partners.dni}?`,\n            icon: 'question',\n            showCloseButton: true,\n            showCancelButton: true,\n        }).then(async (res) => {\n            if (res.isConfirmed) {\n                try {\n                    await supabase\n                        .from('orders')\n                        .update({ status: input.id })\n                        .eq('id', data.id);\n                    MySwal.fire({\n                        title: 'Se edito el estado con exito!',\n                        icon: 'success',\n                        timer: 2000,\n                    }).then(() => window.location.reload());\n                } catch (error) {\n                    console.log(error);\n                    MySwal.fire({\n                        title: 'Hubo un error al editar el.',\n                        text: `Error: ${error}`,\n                        icon: 'error',\n                    });\n                }\n            }\n        });\n    };\n\n    if (!data) return <CircularProgress />;\n    return (\n        <Dialog open={editActive} onClose={handleClose} onSubmit={handleSubmit}>\n            <DialogTitle className={classes.popup}>EDITAR ESTADO</DialogTitle>\n            <DialogContent>\n                {/*    <DialogContentText>\n                    Formulario para editar medico.\n                </DialogContentText> */}\n                <InputLabel id='demo-simple-select'>Estado</InputLabel>\n\n                <FormControl>\n                    <Select\n                        name='status'\n                        onChange={handleChange}\n                        value={input.status}\n                        /* id=\"demo-simple-select\"\n                    labelId=\"demo-simple-select-label\" */\n                        inputProps={{\n                            style: { width: '177px' },\n                        }}\n                        variant='outlined'\n                        size='small'\n                        native\n                    >\n                        {status.map((el, index) => (\n                            <option key={`state-${index}`} value={el}>\n                                {el.name}\n                            </option>\n                        ))}\n                    </Select>\n                </FormControl>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} className={classes.popupBtn}>\n                    Cancelar\n                </Button>\n                <Button\n                    onClick={handleSubmit}\n                    type='submit'\n                    className={classes.popupBtn}\n                >\n                    Editar\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default AdminMedicEdit;\n"]},"metadata":{},"sourceType":"module"}