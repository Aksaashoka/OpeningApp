{"ast":null,"code":"var _jsxFileName = \"/home/alan/Escritorio/Integra/IntegraApp/src/components/Affiliate/UserMedRec/UserMedRec.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport styles from './UserMedRec.module.css';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport supabase from '../../../supabase.config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  // root: {\n  //     display:'flex',\n  //     justifyContent:'space-around',\n  //     minWidth: 300,\n  // },\n  // title: {\n  //   fontSize: 14,\n  // },\n  // pos: {\n  //     // marginBottom: 12,\n  // },\n  root: {\n    width: '100%',\n    maxWidth: '40%',\n    backgroundColor: theme.palette.background.paper\n  },\n  inline: {\n    display: 'inline'\n  }\n}));\n\nfunction UserMedRec() {\n  _s();\n\n  const classes = useStyles();\n  const [medicalRecord, setMedicalRecord] = useState({});\n  let userDni = JSON.parse(localStorage.getItem('userdata')).dni;\n  useEffect(() => {\n    fetchRecord(userDni); //eslint-disable-next-line\n  }, []);\n\n  const fetchRecord = async userDni => {\n    try {\n      const {\n        data: record\n      } = await supabase.from('medical_records').select(`declaration`).eq('partner_dni', userDni);\n      record[0] ? setMedicalRecord(record[0].declaration) : setMedicalRecord(false);\n    } catch (err) {\n      return err;\n    }\n  };\n\n  if (medicalRecord) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          alignItems: \"flex-start\",\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Alergias:\",\n            secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: medicalRecord.allergies === 'Si' ? `${medicalRecord.allergiesD}` : `No`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          variant: \"inset\",\n          component: \"li\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          alignItems: \"flex-start\",\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Asma\",\n            secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: medicalRecord.asthma === 'Si' ? `${medicalRecord.asthmaD}` : `No`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          variant: \"inset\",\n          component: \"li\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          alignItems: \"flex-start\",\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Diabetes:\",\n            secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: medicalRecord.diabetes === 'Si' ? `${medicalRecord.diabetesD}` : `No`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          variant: \"inset\",\n          component: \"li\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          alignItems: \"flex-start\",\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Desmayos:\",\n            secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: medicalRecord.fainting === 'Si' ? `${medicalRecord.faintingD}` : `No`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          variant: \"inset\",\n          component: \"li\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          alignItems: \"flex-start\",\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Patologias auditivas:\",\n            secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: medicalRecord.hearing === 'Si' ? `${medicalRecord.hearingD}` : `No`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          variant: \"inset\",\n          component: \"li\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          alignItems: \"flex-start\",\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Patologias cardiacas:\",\n            secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: medicalRecord.heart === 'Si' ? `${medicalRecord.heartD}` : `No`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          variant: \"inset\",\n          component: \"li\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          alignItems: \"flex-start\",\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Hernias:\",\n            secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: medicalRecord.hernia === 'Si' ? `${medicalRecord.herniaD}` : `No`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          variant: \"inset\",\n          component: \"li\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          alignItems: \"flex-start\",\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Hipertensi\\xF3n:\",\n            secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: medicalRecord.hypertension === 'Si' ? `${medicalRecord.hypertensionD}` : `No`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          variant: \"inset\",\n          component: \"li\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          alignItems: \"flex-start\",\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Hipotensi\\xF3n:\",\n            secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: medicalRecord.hypotension === 'Si' ? `${medicalRecord.hypotensionD}` : `No`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          alignItems: \"flex-start\",\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Medicinas:\",\n            secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: medicalRecord.medicines === 'Si' ? `${medicalRecord.medicinesD}` : `No`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          variant: \"inset\",\n          component: \"li\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          alignItems: \"flex-start\",\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Problemas psiqui\\xE1tricos:\",\n            secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: medicalRecord.psychiatric === 'Si' ? `${medicalRecord.psychiatricD}` : `No`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          variant: \"inset\",\n          component: \"li\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          alignItems: \"flex-start\",\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Problemas psicol\\xF3gicos::\",\n            secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: medicalRecord.psychological === 'Si' ? `${medicalRecord.psychologicalD}` : `No`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          variant: \"inset\",\n          component: \"li\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          alignItems: \"flex-start\",\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Convulsiones::\",\n            secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: medicalRecord.seizures === 'Si' ? `${medicalRecord.seizuresD}` : `No`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          variant: \"inset\",\n          component: \"li\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          alignItems: \"flex-start\",\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Sinusitis:\",\n            secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: medicalRecord.sinusitis === 'Si' ? `${medicalRecord.sinusitisD}` : `No`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          variant: \"inset\",\n          component: \"li\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          alignItems: \"flex-start\",\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Problemas de columna:\",\n            secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: medicalRecord.spine === 'Si' ? `${medicalRecord.spineD}` : `No`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          variant: \"inset\",\n          component: \"li\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          alignItems: \"flex-start\",\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Protesis:\",\n            secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: medicalRecord.surgeryProt === 'Si' ? `${medicalRecord.surgeryProtD}` : `No`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          variant: \"inset\",\n          component: \"li\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          alignItems: \"flex-start\",\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Problemas de visi\\xF3n:\",\n            secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: medicalRecord.visual === 'Si' ? `${medicalRecord.visualD}` : `No`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          variant: \"inset\",\n          component: \"li\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          alignItems: \"flex-start\",\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Otros:\",\n            secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: medicalRecord.others === 'Si' ? `${medicalRecord.othersD}` : `No`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      component: \"h5\",\n      children: \"No tiene registro m\\xE9dico\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(UserMedRec, \"jAmvF15dpC75h/Es0ZGocHmAzLY=\", false, function () {\n  return [useStyles];\n});\n\n_c = UserMedRec;\nexport default UserMedRec;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserMedRec\");","map":{"version":3,"sources":["/home/alan/Escritorio/Integra/IntegraApp/src/components/Affiliate/UserMedRec/UserMedRec.jsx"],"names":["React","useEffect","useState","makeStyles","styles","List","ListItem","Divider","ListItemText","Typography","supabase","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","inline","display","UserMedRec","classes","medicalRecord","setMedicalRecord","userDni","JSON","parse","localStorage","getItem","dni","fetchRecord","data","record","from","select","eq","declaration","err","container","allergies","allergiesD","asthma","asthmaD","diabetes","diabetesD","fainting","faintingD","hearing","hearingD","heart","heartD","hernia","herniaD","hypertension","hypertensionD","hypotension","hypotensionD","medicines","medicinesD","psychiatric","psychiatricD","psychological","psychologicalD","seizures","seizuresD","sinusitis","sinusitisD","spine","spineD","surgeryProt","surgeryProtD","visual","visualD","others","othersD"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport styles from './UserMedRec.module.css';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport supabase from '../../../supabase.config';\n\nconst useStyles = makeStyles((theme) => ({\n    // root: {\n    //     display:'flex',\n    //     justifyContent:'space-around',\n    //     minWidth: 300,\n    // },\n    // title: {\n    //   fontSize: 14,\n    // },\n    // pos: {\n\n    //     // marginBottom: 12,\n    // },\n    root: {\n        width: '100%',\n        maxWidth: '40%',\n        backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n        display: 'inline',\n    },\n}));\n\nfunction UserMedRec() {\n    const classes = useStyles();\n    const [medicalRecord, setMedicalRecord] = useState({});\n\n    let userDni = JSON.parse(localStorage.getItem('userdata')).dni;\n\n    useEffect(() => {\n        fetchRecord(userDni);\n        //eslint-disable-next-line\n    }, []);\n    const fetchRecord = async (userDni) => {\n        try {\n            const { data: record } = await supabase\n                .from('medical_records')\n                .select(`declaration`)\n                .eq('partner_dni', userDni);\n            record[0]\n                ? setMedicalRecord(record[0].declaration)\n                : setMedicalRecord(false);\n        } catch (err) {\n            return err;\n        }\n    };\n\n    if (medicalRecord) {\n        return (\n            <div className={styles.container}>\n                <List className={classes.root}>\n                    <ListItem alignItems='flex-start'>\n                        <ListItemText\n                            primary='Alergias:'\n                            secondary={\n                                <React.Fragment>\n                                    {medicalRecord.allergies === 'Si'\n                                        ? `${medicalRecord.allergiesD}`\n                                        : `No`}\n                                </React.Fragment>\n                            }\n                        />\n                    </ListItem>\n                    <Divider variant='inset' component='li' />\n                    <ListItem alignItems='flex-start'>\n                        <ListItemText\n                            primary='Asma'\n                            secondary={\n                                <React.Fragment>\n                                    {medicalRecord.asthma === 'Si'\n                                        ? `${medicalRecord.asthmaD}`\n                                        : `No`}\n                                </React.Fragment>\n                            }\n                        />\n                    </ListItem>\n                    <Divider variant='inset' component='li' />\n                    <ListItem alignItems='flex-start'>\n                        <ListItemText\n                            primary='Diabetes:'\n                            secondary={\n                                <React.Fragment>\n                                    {medicalRecord.diabetes === 'Si'\n                                        ? `${medicalRecord.diabetesD}`\n                                        : `No`}\n                                </React.Fragment>\n                            }\n                        />\n                    </ListItem>\n                    <Divider variant='inset' component='li' />\n                    <ListItem alignItems='flex-start'>\n                        <ListItemText\n                            primary='Desmayos:'\n                            secondary={\n                                <React.Fragment>\n                                    {medicalRecord.fainting === 'Si'\n                                        ? `${medicalRecord.faintingD}`\n                                        : `No`}\n                                </React.Fragment>\n                            }\n                        />\n                    </ListItem>\n                    <Divider variant='inset' component='li' />\n                    <ListItem alignItems='flex-start'>\n                        <ListItemText\n                            primary='Patologias auditivas:'\n                            secondary={\n                                <React.Fragment>\n                                    {medicalRecord.hearing === 'Si'\n                                        ? `${medicalRecord.hearingD}`\n                                        : `No`}\n                                </React.Fragment>\n                            }\n                        />\n                    </ListItem>\n                    <Divider variant='inset' component='li' />\n                    <ListItem alignItems='flex-start'>\n                        <ListItemText\n                            primary='Patologias cardiacas:'\n                            secondary={\n                                <React.Fragment>\n                                    {medicalRecord.heart === 'Si'\n                                        ? `${medicalRecord.heartD}`\n                                        : `No`}\n                                </React.Fragment>\n                            }\n                        />\n                    </ListItem>\n                    <Divider variant='inset' component='li' />\n                    <ListItem alignItems='flex-start'>\n                        <ListItemText\n                            primary='Hernias:'\n                            secondary={\n                                <React.Fragment>\n                                    {medicalRecord.hernia === 'Si'\n                                        ? `${medicalRecord.herniaD}`\n                                        : `No`}\n                                </React.Fragment>\n                            }\n                        />\n                    </ListItem>\n                    <Divider variant='inset' component='li' />\n                    <ListItem alignItems='flex-start'>\n                        <ListItemText\n                            primary='Hipertensión:'\n                            secondary={\n                                <React.Fragment>\n                                    {medicalRecord.hypertension === 'Si'\n                                        ? `${medicalRecord.hypertensionD}`\n                                        : `No`}\n                                </React.Fragment>\n                            }\n                        />\n                    </ListItem>\n                    <Divider variant='inset' component='li' />\n                    <ListItem alignItems='flex-start'>\n                        <ListItemText\n                            primary='Hipotensión:'\n                            secondary={\n                                <React.Fragment>\n                                    {medicalRecord.hypotension === 'Si'\n                                        ? `${medicalRecord.hypotensionD}`\n                                        : `No`}\n                                </React.Fragment>\n                            }\n                        />\n                    </ListItem>\n                </List>\n                <List className={classes.root}>\n                    <ListItem alignItems='flex-start'>\n                        <ListItemText\n                            primary='Medicinas:'\n                            secondary={\n                                <React.Fragment>\n                                    {medicalRecord.medicines === 'Si'\n                                        ? `${medicalRecord.medicinesD}`\n                                        : `No`}\n                                </React.Fragment>\n                            }\n                        />\n                    </ListItem>\n                    <Divider variant='inset' component='li' />\n                    <ListItem alignItems='flex-start'>\n                        <ListItemText\n                            primary='Problemas psiquiátricos:'\n                            secondary={\n                                <React.Fragment>\n                                    {medicalRecord.psychiatric === 'Si'\n                                        ? `${medicalRecord.psychiatricD}`\n                                        : `No`}\n                                </React.Fragment>\n                            }\n                        />\n                    </ListItem>\n                    <Divider variant='inset' component='li' />\n                    <ListItem alignItems='flex-start'>\n                        <ListItemText\n                            primary='Problemas psicológicos::'\n                            secondary={\n                                <React.Fragment>\n                                    {medicalRecord.psychological === 'Si'\n                                        ? `${medicalRecord.psychologicalD}`\n                                        : `No`}\n                                </React.Fragment>\n                            }\n                        />\n                    </ListItem>\n                    <Divider variant='inset' component='li' />\n                    <ListItem alignItems='flex-start'>\n                        <ListItemText\n                            primary='Convulsiones::'\n                            secondary={\n                                <React.Fragment>\n                                    {medicalRecord.seizures === 'Si'\n                                        ? `${medicalRecord.seizuresD}`\n                                        : `No`}\n                                </React.Fragment>\n                            }\n                        />\n                    </ListItem>\n                    <Divider variant='inset' component='li' />\n                    <ListItem alignItems='flex-start'>\n                        <ListItemText\n                            primary='Sinusitis:'\n                            secondary={\n                                <React.Fragment>\n                                    {medicalRecord.sinusitis === 'Si'\n                                        ? `${medicalRecord.sinusitisD}`\n                                        : `No`}\n                                </React.Fragment>\n                            }\n                        />\n                    </ListItem>\n                    <Divider variant='inset' component='li' />\n                    <ListItem alignItems='flex-start'>\n                        <ListItemText\n                            primary='Problemas de columna:'\n                            secondary={\n                                <React.Fragment>\n                                    {medicalRecord.spine === 'Si'\n                                        ? `${medicalRecord.spineD}`\n                                        : `No`}\n                                </React.Fragment>\n                            }\n                        />\n                    </ListItem>\n                    <Divider variant='inset' component='li' />\n                    <ListItem alignItems='flex-start'>\n                        <ListItemText\n                            primary='Protesis:'\n                            secondary={\n                                <React.Fragment>\n                                    {medicalRecord.surgeryProt === 'Si'\n                                        ? `${medicalRecord.surgeryProtD}`\n                                        : `No`}\n                                </React.Fragment>\n                            }\n                        />\n                    </ListItem>\n                    <Divider variant='inset' component='li' />\n                    <ListItem alignItems='flex-start'>\n                        <ListItemText\n                            primary='Problemas de visión:'\n                            secondary={\n                                <React.Fragment>\n                                    {medicalRecord.visual === 'Si'\n                                        ? `${medicalRecord.visualD}`\n                                        : `No`}\n                                </React.Fragment>\n                            }\n                        />\n                    </ListItem>\n                    <Divider variant='inset' component='li' />\n                    <ListItem alignItems='flex-start'>\n                        <ListItemText\n                            primary='Otros:'\n                            secondary={\n                                <React.Fragment>\n                                    {medicalRecord.others === 'Si'\n                                        ? `${medicalRecord.othersD}`\n                                        : `No`}\n                                </React.Fragment>\n                            }\n                        />\n                    </ListItem>\n                </List>\n            </div>\n        );\n    } else {\n        return (\n            <Typography variant='h2' component='h5'>\n                No tiene registro médico\n            </Typography>\n        );\n    }\n}\n\nexport default UserMedRec;\n"]},"metadata":{},"sourceType":"module"}